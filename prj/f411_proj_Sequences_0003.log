/*
 *  CMSIS Pack Debug Access Sequence Log
 *  File        : D:\study\STM32\practice\gpio\prj\f411_proj_Sequences_0003.log
 *  Created     : 21:11:09 (03/06/2023)
 *  Device      : STM32F411CEUx
 *  PDSC File   : C:/Users/anping/AppData/Local/Arm/Packs/Keil/STM32F4xx_DFP/2.17.0/Keil.STM32F4xx_DFP.pdsc
 *  Config File : D:\study\STM32\practice\gpio\prj\DebugConfig\Target_1_STM32F411CEUx.dbgconf
 *
 */

[21:11:09.401]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:11:09.401]  
[21:11:09.401]  <debugvars>
[21:11:09.402]    // Pre-defined
[21:11:09.403]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:11:09.403]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[21:11:09.404]    __dp=0x00000000
[21:11:09.404]    __ap=0x00000000
[21:11:09.404]    __traceout=0x00000001      (SWO Trace)
[21:11:09.404]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:11:09.404]    __FlashAddr=0x00000000
[21:11:09.404]    __FlashLen=0x00000000
[21:11:09.404]    __FlashArg=0x00000000
[21:11:09.405]    __FlashOp=0x00000000
[21:11:09.405]    __Result=0x00000000
[21:11:09.405]    
[21:11:09.405]    // User-defined
[21:11:09.405]    DbgMCU_CR=0x00000007
[21:11:09.405]    DbgMCU_APB1_Fz=0x00000000
[21:11:09.406]    DbgMCU_APB2_Fz=0x00000000
[21:11:09.406]    TraceClk_Pin=0x00040002
[21:11:09.406]    TraceD0_Pin=0x00040003
[21:11:09.406]    TraceD1_Pin=0x00040004
[21:11:09.406]    TraceD2_Pin=0x00040005
[21:11:09.407]    TraceD3_Pin=0x00040006
[21:11:09.407]  </debugvars>
[21:11:09.407]  
[21:11:09.407]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:11:09.408]    <block atomic="false" info="">
[21:11:09.408]      Sequence("CheckID");
[21:11:09.408]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:11:09.408]          <block atomic="false" info="">
[21:11:09.408]            __var pidr1 = 0;
[21:11:09.408]              // -> [pidr1 <= 0x00000000]
[21:11:09.409]            __var pidr2 = 0;
[21:11:09.409]              // -> [pidr2 <= 0x00000000]
[21:11:09.409]            __var jep106id = 0;
[21:11:09.409]              // -> [jep106id <= 0x00000000]
[21:11:09.409]            __var ROMTableBase = 0;
[21:11:09.410]              // -> [ROMTableBase <= 0x00000000]
[21:11:09.410]            __ap = 0;      // AHB-AP
[21:11:09.410]              // -> [__ap <= 0x00000000]
[21:11:09.410]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:11:09.411]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[21:11:09.411]              // -> [ROMTableBase <= 0xE00FF000]
[21:11:09.411]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:11:09.412]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:11:09.412]              // -> [pidr1 <= 0x00000004]
[21:11:09.412]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:11:09.414]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[21:11:09.414]              // -> [pidr2 <= 0x0000000A]
[21:11:09.414]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:11:09.414]              // -> [jep106id <= 0x00000020]
[21:11:09.415]          </block>
[21:11:09.415]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:11:09.415]            // if-block "jep106id != 0x20"
[21:11:09.415]              // =>  FALSE
[21:11:09.415]            // skip if-block "jep106id != 0x20"
[21:11:09.415]          </control>
[21:11:09.416]        </sequence>
[21:11:09.416]    </block>
[21:11:09.416]  </sequence>
[21:11:09.416]  
[21:11:09.416]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:11:09.416]  
[21:11:09.417]  <debugvars>
[21:11:09.417]    // Pre-defined
[21:11:09.417]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:11:09.418]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[21:11:09.418]    __dp=0x00000000
[21:11:09.418]    __ap=0x00000000
[21:11:09.418]    __traceout=0x00000001      (SWO Trace)
[21:11:09.419]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:11:09.419]    __FlashAddr=0x00000000
[21:11:09.419]    __FlashLen=0x00000000
[21:11:09.419]    __FlashArg=0x00000000
[21:11:09.419]    __FlashOp=0x00000000
[21:11:09.420]    __Result=0x00000000
[21:11:09.420]    
[21:11:09.420]    // User-defined
[21:11:09.420]    DbgMCU_CR=0x00000007
[21:11:09.420]    DbgMCU_APB1_Fz=0x00000000
[21:11:09.421]    DbgMCU_APB2_Fz=0x00000000
[21:11:09.421]    TraceClk_Pin=0x00040002
[21:11:09.421]    TraceD0_Pin=0x00040003
[21:11:09.421]    TraceD1_Pin=0x00040004
[21:11:09.421]    TraceD2_Pin=0x00040005
[21:11:09.422]    TraceD3_Pin=0x00040006
[21:11:09.422]  </debugvars>
[21:11:09.422]  
[21:11:09.422]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:11:09.423]    <block atomic="false" info="">
[21:11:09.423]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:11:09.424]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:09.424]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:11:09.426]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:09.427]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:11:09.428]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:09.429]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:11:09.431]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:09.431]    </block>
[21:11:09.431]  </sequence>
[21:11:09.432]  
[21:11:11.166]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:11:11.166]  
[21:11:11.213]  <debugvars>
[21:11:11.213]    // Pre-defined
[21:11:11.214]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:11:11.214]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:11:11.215]    __dp=0x00000000
[21:11:11.215]    __ap=0x00000000
[21:11:11.215]    __traceout=0x00000001      (SWO Trace)
[21:11:11.216]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:11:11.216]    __FlashAddr=0x00000000
[21:11:11.217]    __FlashLen=0x00000000
[21:11:11.217]    __FlashArg=0x00000000
[21:11:11.218]    __FlashOp=0x00000000
[21:11:11.218]    __Result=0x00000000
[21:11:11.218]    
[21:11:11.218]    // User-defined
[21:11:11.219]    DbgMCU_CR=0x00000007
[21:11:11.219]    DbgMCU_APB1_Fz=0x00000000
[21:11:11.220]    DbgMCU_APB2_Fz=0x00000000
[21:11:11.220]    TraceClk_Pin=0x00040002
[21:11:11.220]    TraceD0_Pin=0x00040003
[21:11:11.220]    TraceD1_Pin=0x00040004
[21:11:11.221]    TraceD2_Pin=0x00040005
[21:11:11.221]    TraceD3_Pin=0x00040006
[21:11:11.221]  </debugvars>
[21:11:11.221]  
[21:11:11.222]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:11:11.222]    <block atomic="false" info="">
[21:11:11.223]      Sequence("CheckID");
[21:11:11.223]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:11:11.223]          <block atomic="false" info="">
[21:11:11.224]            __var pidr1 = 0;
[21:11:11.224]              // -> [pidr1 <= 0x00000000]
[21:11:11.224]            __var pidr2 = 0;
[21:11:11.225]              // -> [pidr2 <= 0x00000000]
[21:11:11.225]            __var jep106id = 0;
[21:11:11.225]              // -> [jep106id <= 0x00000000]
[21:11:11.225]            __var ROMTableBase = 0;
[21:11:11.226]              // -> [ROMTableBase <= 0x00000000]
[21:11:11.226]            __ap = 0;      // AHB-AP
[21:11:11.226]              // -> [__ap <= 0x00000000]
[21:11:11.227]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:11:11.229]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.229]              // -> [ROMTableBase <= 0xE00FF000]
[21:11:11.230]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:11:11.231]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.232]              // -> [pidr1 <= 0x00000004]
[21:11:11.232]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:11:11.233]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.234]              // -> [pidr2 <= 0x0000000A]
[21:11:11.234]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:11:11.234]              // -> [jep106id <= 0x00000020]
[21:11:11.235]          </block>
[21:11:11.235]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:11:11.235]            // if-block "jep106id != 0x20"
[21:11:11.236]              // =>  FALSE
[21:11:11.236]            // skip if-block "jep106id != 0x20"
[21:11:11.236]          </control>
[21:11:11.237]        </sequence>
[21:11:11.237]    </block>
[21:11:11.237]  </sequence>
[21:11:11.237]  
[21:11:11.238]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:11:11.238]  
[21:11:11.238]  <debugvars>
[21:11:11.238]    // Pre-defined
[21:11:11.239]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:11:11.239]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:11:11.240]    __dp=0x00000000
[21:11:11.240]    __ap=0x00000000
[21:11:11.240]    __traceout=0x00000001      (SWO Trace)
[21:11:11.241]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:11:11.241]    __FlashAddr=0x00000000
[21:11:11.241]    __FlashLen=0x00000000
[21:11:11.242]    __FlashArg=0x00000000
[21:11:11.242]    __FlashOp=0x00000000
[21:11:11.242]    __Result=0x00000000
[21:11:11.243]    
[21:11:11.243]    // User-defined
[21:11:11.243]    DbgMCU_CR=0x00000007
[21:11:11.243]    DbgMCU_APB1_Fz=0x00000000
[21:11:11.244]    DbgMCU_APB2_Fz=0x00000000
[21:11:11.244]    TraceClk_Pin=0x00040002
[21:11:11.244]    TraceD0_Pin=0x00040003
[21:11:11.245]    TraceD1_Pin=0x00040004
[21:11:11.245]    TraceD2_Pin=0x00040005
[21:11:11.246]    TraceD3_Pin=0x00040006
[21:11:11.246]  </debugvars>
[21:11:11.246]  
[21:11:11.247]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:11:11.247]    <block atomic="false" info="">
[21:11:11.247]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:11:11.249]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.249]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:11:11.251]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.251]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:11:11.253]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.253]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:11:11.255]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.255]    </block>
[21:11:11.255]  </sequence>
[21:11:11.256]  
[21:11:11.306]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[21:11:11.306]  
[21:11:11.306]  <debugvars>
[21:11:11.306]    // Pre-defined
[21:11:11.306]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:11:11.306]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:11:11.307]    __dp=0x00000000
[21:11:11.307]    __ap=0x00000000
[21:11:11.308]    __traceout=0x00000001      (SWO Trace)
[21:11:11.308]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:11:11.309]    __FlashAddr=0x00000000
[21:11:11.309]    __FlashLen=0x00000000
[21:11:11.309]    __FlashArg=0x00000000
[21:11:11.310]    __FlashOp=0x00000000
[21:11:11.310]    __Result=0x00000000
[21:11:11.310]    
[21:11:11.310]    // User-defined
[21:11:11.311]    DbgMCU_CR=0x00000007
[21:11:11.311]    DbgMCU_APB1_Fz=0x00000000
[21:11:11.312]    DbgMCU_APB2_Fz=0x00000000
[21:11:11.312]    TraceClk_Pin=0x00040002
[21:11:11.313]    TraceD0_Pin=0x00040003
[21:11:11.313]    TraceD1_Pin=0x00040004
[21:11:11.313]    TraceD2_Pin=0x00040005
[21:11:11.313]    TraceD3_Pin=0x00040006
[21:11:11.314]  </debugvars>
[21:11:11.314]  
[21:11:11.314]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:11:11.314]    <block atomic="false" info="">
[21:11:11.314]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:11:11.314]        // -> [traceSWO <= 0x00000001]
[21:11:11.315]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:11:11.315]        // -> [traceTPIU <= 0x00000000]
[21:11:11.316]    </block>
[21:11:11.316]    <control if="traceSWO" while="" timeout="0" info="">
[21:11:11.317]      // if-block "traceSWO"
[21:11:11.317]        // =>  TRUE
[21:11:11.318]      <block atomic="false" info="">
[21:11:11.318]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:11:11.318]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:11:11.318]            <block atomic="false" info="">
[21:11:11.319]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:11:11.319]                // -> [dbgmcu_val <= 0x00000000]
[21:11:11.319]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:11:11.319]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:11:11.319]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:11:11.321]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.322]                // -> [dbgmcu_val <= 0x00000007]
[21:11:11.322]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:11:11.322]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:11:11.322]              Sequence("ConfigureTraceSWOPin");
[21:11:11.322]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:11:11.322]                  <block atomic="false" info="">
[21:11:11.324]                    __var pin     = 0;
[21:11:11.324]                      // -> [pin <= 0x00000000]
[21:11:11.324]                    __var port    = 0;
[21:11:11.324]                      // -> [port <= 0x00000000]
[21:11:11.324]                    __var portAdr = 0;
[21:11:11.324]                      // -> [portAdr <= 0x00000000]
[21:11:11.325]                    __var pos     = 0;
[21:11:11.325]                      // -> [pos <= 0x00000000]
[21:11:11.326]                    __var SWO_Pin = 0x00010003;          // PB3
[21:11:11.327]                      // -> [SWO_Pin <= 0x00010003]
[21:11:11.327]                  </block>
[21:11:11.327]                  <block atomic="false" info="configure SWO">
[21:11:11.328]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:11:11.328]                      // -> [pin <= 0x00000003]
[21:11:11.328]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:11:11.330]                      // -> [port <= 0x00000001]
[21:11:11.330]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:11:11.330]                      // -> [portAdr <= 0x40020400]
[21:11:11.330]                    pos = pin * 2;
[21:11:11.330]                      // -> [pos <= 0x00000006]
[21:11:11.331]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:11:11.333]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.334]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.335]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:11:11.336]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.337]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.338]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:11:11.339]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.340]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.341]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:11:11.342]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.343]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.344]                  </block>
[21:11:11.345]                  <control if="pin <  8" while="" timeout="0" info="">
[21:11:11.345]                    // if-block "pin <  8"
[21:11:11.345]                      // =>  TRUE
[21:11:11.345]                    <block atomic="false" info="">
[21:11:11.345]                      pos = ((pin    ) & 7) * 4;
[21:11:11.345]                        // -> [pos <= 0x0000000C]
[21:11:11.346]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:11:11.348]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.349]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.349]                    </block>
[21:11:11.349]                    // end if-block "pin <  8"
[21:11:11.350]                  </control>
[21:11:11.351]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:11:11.351]                    // if-block "pin >= 8"
[21:11:11.351]                      // =>  FALSE
[21:11:11.351]                    // skip if-block "pin >= 8"
[21:11:11.351]                  </control>
[21:11:11.352]                </sequence>
[21:11:11.352]            </block>
[21:11:11.352]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:11:11.353]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:11:11.354]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.355]            </block>
[21:11:11.355]          </sequence>
[21:11:11.356]      </block>
[21:11:11.356]      // end if-block "traceSWO"
[21:11:11.356]    </control>
[21:11:11.357]    <control if="traceTPIU" while="" timeout="0" info="">
[21:11:11.357]      // if-block "traceTPIU"
[21:11:11.357]        // =>  FALSE
[21:11:11.358]      // skip if-block "traceTPIU"
[21:11:11.358]    </control>
[21:11:11.358]  </sequence>
[21:11:11.360]  
[21:11:11.378]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:11:11.378]  
[21:11:11.379]  <debugvars>
[21:11:11.379]    // Pre-defined
[21:11:11.380]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:11:11.380]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:11:11.380]    __dp=0x00000000
[21:11:11.380]    __ap=0x00000000
[21:11:11.381]    __traceout=0x00000001      (SWO Trace)
[21:11:11.381]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:11:11.381]    __FlashAddr=0x00000000
[21:11:11.382]    __FlashLen=0x00000000
[21:11:11.382]    __FlashArg=0x00000000
[21:11:11.382]    __FlashOp=0x00000000
[21:11:11.383]    __Result=0x00000000
[21:11:11.383]    
[21:11:11.383]    // User-defined
[21:11:11.384]    DbgMCU_CR=0x00000007
[21:11:11.384]    DbgMCU_APB1_Fz=0x00000000
[21:11:11.385]    DbgMCU_APB2_Fz=0x00000000
[21:11:11.385]    TraceClk_Pin=0x00040002
[21:11:11.385]    TraceD0_Pin=0x00040003
[21:11:11.386]    TraceD1_Pin=0x00040004
[21:11:11.387]    TraceD2_Pin=0x00040005
[21:11:11.387]    TraceD3_Pin=0x00040006
[21:11:11.387]  </debugvars>
[21:11:11.387]  
[21:11:11.387]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:11:11.387]    <block atomic="false" info="">
[21:11:11.388]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:11:11.389]        // -> [traceSWO <= 0x00000001]
[21:11:11.389]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:11:11.389]        // -> [traceTPIU <= 0x00000000]
[21:11:11.389]    </block>
[21:11:11.389]    <control if="traceSWO" while="" timeout="0" info="">
[21:11:11.390]      // if-block "traceSWO"
[21:11:11.390]        // =>  TRUE
[21:11:11.390]      <block atomic="false" info="">
[21:11:11.391]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:11:11.391]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:11:11.391]            <block atomic="false" info="">
[21:11:11.392]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:11:11.392]                // -> [dbgmcu_val <= 0x00000000]
[21:11:11.392]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:11:11.393]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:11:11.393]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:11:11.395]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.395]                // -> [dbgmcu_val <= 0x00000007]
[21:11:11.396]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:11:11.396]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:11:11.397]              Sequence("ConfigureTraceSWOPin");
[21:11:11.397]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:11:11.397]                  <block atomic="false" info="">
[21:11:11.397]                    __var pin     = 0;
[21:11:11.398]                      // -> [pin <= 0x00000000]
[21:11:11.398]                    __var port    = 0;
[21:11:11.398]                      // -> [port <= 0x00000000]
[21:11:11.399]                    __var portAdr = 0;
[21:11:11.399]                      // -> [portAdr <= 0x00000000]
[21:11:11.399]                    __var pos     = 0;
[21:11:11.400]                      // -> [pos <= 0x00000000]
[21:11:11.400]                    __var SWO_Pin = 0x00010003;          // PB3
[21:11:11.400]                      // -> [SWO_Pin <= 0x00010003]
[21:11:11.401]                  </block>
[21:11:11.401]                  <block atomic="false" info="configure SWO">
[21:11:11.402]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:11:11.402]                      // -> [pin <= 0x00000003]
[21:11:11.403]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:11:11.404]                      // -> [port <= 0x00000001]
[21:11:11.404]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:11:11.404]                      // -> [portAdr <= 0x40020400]
[21:11:11.404]                    pos = pin * 2;
[21:11:11.404]                      // -> [pos <= 0x00000006]
[21:11:11.404]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:11:11.406]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.407]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.407]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:11:11.409]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.411]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.411]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:11:11.412]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.414]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.414]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:11:11.416]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.417]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.417]                  </block>
[21:11:11.418]                  <control if="pin <  8" while="" timeout="0" info="">
[21:11:11.418]                    // if-block "pin <  8"
[21:11:11.419]                      // =>  TRUE
[21:11:11.419]                    <block atomic="false" info="">
[21:11:11.419]                      pos = ((pin    ) & 7) * 4;
[21:11:11.420]                        // -> [pos <= 0x0000000C]
[21:11:11.420]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:11:11.421]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.423]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.423]                    </block>
[21:11:11.423]                    // end if-block "pin <  8"
[21:11:11.424]                  </control>
[21:11:11.424]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:11:11.425]                    // if-block "pin >= 8"
[21:11:11.425]                      // =>  FALSE
[21:11:11.425]                    // skip if-block "pin >= 8"
[21:11:11.426]                  </control>
[21:11:11.426]                </sequence>
[21:11:11.426]            </block>
[21:11:11.427]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:11:11.428]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:11:11.429]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:11.429]            </block>
[21:11:11.430]          </sequence>
[21:11:11.430]      </block>
[21:11:11.430]      // end if-block "traceSWO"
[21:11:11.431]    </control>
[21:11:11.431]    <control if="traceTPIU" while="" timeout="0" info="">
[21:11:11.431]      // if-block "traceTPIU"
[21:11:11.432]        // =>  FALSE
[21:11:11.432]      // skip if-block "traceTPIU"
[21:11:11.433]    </control>
[21:11:11.433]  </sequence>
[21:11:11.433]  
[21:11:12.268]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:11:12.268]  
[21:11:12.314]  <debugvars>
[21:11:12.314]    // Pre-defined
[21:11:12.315]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:11:12.315]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:11:12.315]    __dp=0x00000000
[21:11:12.316]    __ap=0x00000000
[21:11:12.317]    __traceout=0x00000001      (SWO Trace)
[21:11:12.317]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:11:12.317]    __FlashAddr=0x00000000
[21:11:12.318]    __FlashLen=0x00000000
[21:11:12.318]    __FlashArg=0x00000000
[21:11:12.318]    __FlashOp=0x00000000
[21:11:12.319]    __Result=0x00000000
[21:11:12.319]    
[21:11:12.319]    // User-defined
[21:11:12.319]    DbgMCU_CR=0x00000007
[21:11:12.320]    DbgMCU_APB1_Fz=0x00000000
[21:11:12.320]    DbgMCU_APB2_Fz=0x00000000
[21:11:12.321]    TraceClk_Pin=0x00040002
[21:11:12.322]    TraceD0_Pin=0x00040003
[21:11:12.322]    TraceD1_Pin=0x00040004
[21:11:12.322]    TraceD2_Pin=0x00040005
[21:11:12.322]    TraceD3_Pin=0x00040006
[21:11:12.322]  </debugvars>
[21:11:12.322]  
[21:11:12.323]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:11:12.323]    <block atomic="false" info="">
[21:11:12.323]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:11:12.324]        // -> [traceSWO <= 0x00000001]
[21:11:12.324]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:11:12.325]        // -> [traceTPIU <= 0x00000000]
[21:11:12.325]    </block>
[21:11:12.325]    <control if="traceSWO" while="" timeout="0" info="">
[21:11:12.326]      // if-block "traceSWO"
[21:11:12.326]        // =>  TRUE
[21:11:12.327]      <block atomic="false" info="">
[21:11:12.328]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:11:12.328]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:11:12.329]            <block atomic="false" info="">
[21:11:12.329]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:11:12.330]                // -> [dbgmcu_val <= 0x00000000]
[21:11:12.330]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:11:12.330]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:11:12.331]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:11:12.332]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:11:12.333]                // -> [dbgmcu_val <= 0x00000007]
[21:11:12.333]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:11:12.334]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:11:12.334]              Sequence("ConfigureTraceSWOPin");
[21:11:12.334]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:11:12.335]                  <block atomic="false" info="">
[21:11:12.335]                    __var pin     = 0;
[21:11:12.335]                      // -> [pin <= 0x00000000]
[21:11:12.336]                    __var port    = 0;
[21:11:12.336]                      // -> [port <= 0x00000000]
[21:11:12.336]                    __var portAdr = 0;
[21:11:12.336]                      // -> [portAdr <= 0x00000000]
[21:11:12.337]                    __var pos     = 0;
[21:11:12.337]                      // -> [pos <= 0x00000000]
[21:11:12.337]                    __var SWO_Pin = 0x00010003;          // PB3
[21:11:12.338]                      // -> [SWO_Pin <= 0x00010003]
[21:11:12.338]                  </block>
[21:11:12.338]                  <block atomic="false" info="configure SWO">
[21:11:12.339]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:11:12.339]                      // -> [pin <= 0x00000003]
[21:11:12.339]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:11:12.340]                      // -> [port <= 0x00000001]
[21:11:12.340]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:11:12.340]                      // -> [portAdr <= 0x40020400]
[21:11:12.341]                    pos = pin * 2;
[21:11:12.341]                      // -> [pos <= 0x00000006]
[21:11:12.342]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:11:12.344]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:11:12.344]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:12.345]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:11:12.347]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:11:12.348]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:12.348]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:11:12.349]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:11:12.350]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:12.351]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:11:12.352]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:11:12.353]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:12.354]                  </block>
[21:11:12.354]                  <control if="pin <  8" while="" timeout="0" info="">
[21:11:12.354]                    // if-block "pin <  8"
[21:11:12.355]                      // =>  TRUE
[21:11:12.355]                    <block atomic="false" info="">
[21:11:12.356]                      pos = ((pin    ) & 7) * 4;
[21:11:12.356]                        // -> [pos <= 0x0000000C]
[21:11:12.357]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:11:12.358]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:11:12.359]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:12.360]                    </block>
[21:11:12.360]                    // end if-block "pin <  8"
[21:11:12.361]                  </control>
[21:11:12.362]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:11:12.363]                    // if-block "pin >= 8"
[21:11:12.363]                      // =>  FALSE
[21:11:12.364]                    // skip if-block "pin >= 8"
[21:11:12.364]                  </control>
[21:11:12.365]                </sequence>
[21:11:12.365]            </block>
[21:11:12.366]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:11:12.366]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:11:12.367]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:12.367]            </block>
[21:11:12.367]          </sequence>
[21:11:12.368]      </block>
[21:11:12.368]      // end if-block "traceSWO"
[21:11:12.368]    </control>
[21:11:12.369]    <control if="traceTPIU" while="" timeout="0" info="">
[21:11:12.369]      // if-block "traceTPIU"
[21:11:12.369]        // =>  FALSE
[21:11:12.369]      // skip if-block "traceTPIU"
[21:11:12.370]    </control>
[21:11:12.371]  </sequence>
[21:11:12.371]  
[21:12:19.078]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[21:12:19.078]  
[21:12:19.125]  <debugvars>
[21:12:19.126]    // Pre-defined
[21:12:19.126]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:12:19.127]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:12:19.128]    __dp=0x00000000
[21:12:19.128]    __ap=0x00000000
[21:12:19.129]    __traceout=0x00000001      (SWO Trace)
[21:12:19.129]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:12:19.129]    __FlashAddr=0x00000000
[21:12:19.130]    __FlashLen=0x00000000
[21:12:19.130]    __FlashArg=0x00000000
[21:12:19.130]    __FlashOp=0x00000000
[21:12:19.131]    __Result=0x00000000
[21:12:19.131]    
[21:12:19.131]    // User-defined
[21:12:19.131]    DbgMCU_CR=0x00000007
[21:12:19.132]    DbgMCU_APB1_Fz=0x00000000
[21:12:19.132]    DbgMCU_APB2_Fz=0x00000000
[21:12:19.132]    TraceClk_Pin=0x00040002
[21:12:19.133]    TraceD0_Pin=0x00040003
[21:12:19.133]    TraceD1_Pin=0x00040004
[21:12:19.133]    TraceD2_Pin=0x00040005
[21:12:19.134]    TraceD3_Pin=0x00040006
[21:12:19.134]  </debugvars>
[21:12:19.134]  
[21:12:19.135]  <sequence name="TraceStop" Pname="" disable="false" info="">
[21:12:19.135]    <block atomic="false" info="">
[21:12:19.136]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[21:12:19.136]        // -> [traceSWO <= 0x00000001]
[21:12:19.136]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[21:12:19.137]        // -> [traceTPIU <= 0x00000000]
[21:12:19.137]    </block>
[21:12:19.137]    <control if="traceSWO" while="" timeout="0" info="">
[21:12:19.138]      // if-block "traceSWO"
[21:12:19.138]        // =>  TRUE
[21:12:19.138]      <block atomic="false" info="">
[21:12:19.139]        Sequence("DisableTraceSWO");
[21:12:19.139]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[21:12:19.140]            <block atomic="false" info="">
[21:12:19.140]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:12:19.141]                // -> [dbgmcu_val <= 0x00000000]
[21:12:19.141]            </block>
[21:12:19.142]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[21:12:19.142]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[21:12:19.146]  
[21:12:19.146]  !!! E310 : Debug access failed - cannot read address 0xE0042004 (accsize '4', AP '0x00000000')
[21:12:19.146]  
[21:12:19.147]                // -> [Read32(0xE0042004) => 0x00030012]   (__dp=0x00000000, __ap=0x00000000)
[21:12:19.147]            </block>
[21:12:19.147]          </sequence>
[21:12:19.148]      </block>
[21:12:19.148]      // end if-block "traceSWO"
[21:12:19.148]    </control>
[21:12:19.148]  </sequence>
[21:12:19.149]  
[19:21:55.487]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:21:55.487]  
[19:21:55.488]  <debugvars>
[19:21:55.488]    // Pre-defined
[19:21:55.488]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:21:55.488]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[19:21:55.488]    __dp=0x00000000
[19:21:55.489]    __ap=0x00000000
[19:21:55.489]    __traceout=0x00000001      (SWO Trace)
[19:21:55.489]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:21:55.489]    __FlashAddr=0x00000000
[19:21:55.489]    __FlashLen=0x00000000
[19:21:55.490]    __FlashArg=0x00000000
[19:21:55.490]    __FlashOp=0x00000000
[19:21:55.490]    __Result=0x00000000
[19:21:55.490]    
[19:21:55.490]    // User-defined
[19:21:55.491]    DbgMCU_CR=0x00000007
[19:21:55.491]    DbgMCU_APB1_Fz=0x00000000
[19:21:55.491]    DbgMCU_APB2_Fz=0x00000000
[19:21:55.491]    TraceClk_Pin=0x00040002
[19:21:55.491]    TraceD0_Pin=0x00040003
[19:21:55.491]    TraceD1_Pin=0x00040004
[19:21:55.491]    TraceD2_Pin=0x00040005
[19:21:55.492]    TraceD3_Pin=0x00040006
[19:21:55.492]  </debugvars>
[19:21:55.492]  
[19:21:55.492]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:21:55.492]    <block atomic="false" info="">
[19:21:55.492]      Sequence("CheckID");
[19:21:55.492]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:21:55.492]          <block atomic="false" info="">
[19:21:55.493]            __var pidr1 = 0;
[19:21:55.493]              // -> [pidr1 <= 0x00000000]
[19:21:55.493]            __var pidr2 = 0;
[19:21:55.493]              // -> [pidr2 <= 0x00000000]
[19:21:55.493]            __var jep106id = 0;
[19:21:55.493]              // -> [jep106id <= 0x00000000]
[19:21:55.493]            __var ROMTableBase = 0;
[19:21:55.495]              // -> [ROMTableBase <= 0x00000000]
[19:21:55.495]            __ap = 0;      // AHB-AP
[19:21:55.495]              // -> [__ap <= 0x00000000]
[19:21:55.495]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:21:55.495]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[19:21:55.496]              // -> [ROMTableBase <= 0xE00FF000]
[19:21:55.496]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:21:55.497]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:21:55.497]              // -> [pidr1 <= 0x00000004]
[19:21:55.497]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:21:55.498]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[19:21:55.499]              // -> [pidr2 <= 0x0000000A]
[19:21:55.499]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:21:55.500]              // -> [jep106id <= 0x00000020]
[19:21:55.500]          </block>
[19:21:55.500]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:21:55.500]            // if-block "jep106id != 0x20"
[19:21:55.500]              // =>  FALSE
[19:21:55.500]            // skip if-block "jep106id != 0x20"
[19:21:55.501]          </control>
[19:21:55.501]        </sequence>
[19:21:55.501]    </block>
[19:21:55.501]  </sequence>
[19:21:55.501]  
[19:21:55.502]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:21:55.502]  
[19:21:55.502]  <debugvars>
[19:21:55.502]    // Pre-defined
[19:21:55.502]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:21:55.502]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[19:21:55.502]    __dp=0x00000000
[19:21:55.502]    __ap=0x00000000
[19:21:55.502]    __traceout=0x00000001      (SWO Trace)
[19:21:55.503]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:21:55.503]    __FlashAddr=0x00000000
[19:21:55.503]    __FlashLen=0x00000000
[19:21:55.503]    __FlashArg=0x00000000
[19:21:55.503]    __FlashOp=0x00000000
[19:21:55.503]    __Result=0x00000000
[19:21:55.503]    
[19:21:55.503]    // User-defined
[19:21:55.504]    DbgMCU_CR=0x00000007
[19:21:55.504]    DbgMCU_APB1_Fz=0x00000000
[19:21:55.504]    DbgMCU_APB2_Fz=0x00000000
[19:21:55.504]    TraceClk_Pin=0x00040002
[19:21:55.504]    TraceD0_Pin=0x00040003
[19:21:55.504]    TraceD1_Pin=0x00040004
[19:21:55.504]    TraceD2_Pin=0x00040005
[19:21:55.505]    TraceD3_Pin=0x00040006
[19:21:55.505]  </debugvars>
[19:21:55.505]  
[19:21:55.505]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:21:55.505]    <block atomic="false" info="">
[19:21:55.505]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:21:55.507]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:55.507]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:21:55.509]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:55.509]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:21:55.509]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:55.510]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:21:55.510]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:55.511]    </block>
[19:21:55.511]  </sequence>
[19:21:55.511]  
[19:21:56.896]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:21:56.896]  
[19:21:56.896]  <debugvars>
[19:21:56.896]    // Pre-defined
[19:21:56.896]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:21:56.896]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:21:56.896]    __dp=0x00000000
[19:21:56.896]    __ap=0x00000000
[19:21:56.896]    __traceout=0x00000001      (SWO Trace)
[19:21:56.896]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:21:56.896]    __FlashAddr=0x00000000
[19:21:56.897]    __FlashLen=0x00000000
[19:21:56.897]    __FlashArg=0x00000000
[19:21:56.897]    __FlashOp=0x00000000
[19:21:56.897]    __Result=0x00000000
[19:21:56.897]    
[19:21:56.897]    // User-defined
[19:21:56.897]    DbgMCU_CR=0x00000007
[19:21:56.897]    DbgMCU_APB1_Fz=0x00000000
[19:21:56.897]    DbgMCU_APB2_Fz=0x00000000
[19:21:56.897]    TraceClk_Pin=0x00040002
[19:21:56.897]    TraceD0_Pin=0x00040003
[19:21:56.898]    TraceD1_Pin=0x00040004
[19:21:56.898]    TraceD2_Pin=0x00040005
[19:21:56.898]    TraceD3_Pin=0x00040006
[19:21:56.898]  </debugvars>
[19:21:56.898]  
[19:21:56.898]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:21:56.898]    <block atomic="false" info="">
[19:21:56.898]      Sequence("CheckID");
[19:21:56.898]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:21:56.898]          <block atomic="false" info="">
[19:21:56.899]            __var pidr1 = 0;
[19:21:56.899]              // -> [pidr1 <= 0x00000000]
[19:21:56.899]            __var pidr2 = 0;
[19:21:56.899]              // -> [pidr2 <= 0x00000000]
[19:21:56.899]            __var jep106id = 0;
[19:21:56.899]              // -> [jep106id <= 0x00000000]
[19:21:56.899]            __var ROMTableBase = 0;
[19:21:56.899]              // -> [ROMTableBase <= 0x00000000]
[19:21:56.899]            __ap = 0;      // AHB-AP
[19:21:56.900]              // -> [__ap <= 0x00000000]
[19:21:56.900]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:21:56.900]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.900]              // -> [ROMTableBase <= 0xE00FF000]
[19:21:56.900]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:21:56.901]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.901]              // -> [pidr1 <= 0x00000004]
[19:21:56.901]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:21:56.903]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.903]              // -> [pidr2 <= 0x0000000A]
[19:21:56.903]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:21:56.903]              // -> [jep106id <= 0x00000020]
[19:21:56.903]          </block>
[19:21:56.903]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:21:56.904]            // if-block "jep106id != 0x20"
[19:21:56.904]              // =>  FALSE
[19:21:56.904]            // skip if-block "jep106id != 0x20"
[19:21:56.904]          </control>
[19:21:56.904]        </sequence>
[19:21:56.904]    </block>
[19:21:56.904]  </sequence>
[19:21:56.904]  
[19:21:56.905]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:21:56.905]  
[19:21:56.905]  <debugvars>
[19:21:56.905]    // Pre-defined
[19:21:56.905]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:21:56.905]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:21:56.905]    __dp=0x00000000
[19:21:56.905]    __ap=0x00000000
[19:21:56.905]    __traceout=0x00000001      (SWO Trace)
[19:21:56.906]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:21:56.906]    __FlashAddr=0x00000000
[19:21:56.906]    __FlashLen=0x00000000
[19:21:56.906]    __FlashArg=0x00000000
[19:21:56.906]    __FlashOp=0x00000000
[19:21:56.906]    __Result=0x00000000
[19:21:56.906]    
[19:21:56.906]    // User-defined
[19:21:56.906]    DbgMCU_CR=0x00000007
[19:21:56.906]    DbgMCU_APB1_Fz=0x00000000
[19:21:56.907]    DbgMCU_APB2_Fz=0x00000000
[19:21:56.907]    TraceClk_Pin=0x00040002
[19:21:56.907]    TraceD0_Pin=0x00040003
[19:21:56.907]    TraceD1_Pin=0x00040004
[19:21:56.907]    TraceD2_Pin=0x00040005
[19:21:56.907]    TraceD3_Pin=0x00040006
[19:21:56.907]  </debugvars>
[19:21:56.907]  
[19:21:56.907]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:21:56.907]    <block atomic="false" info="">
[19:21:56.908]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:21:56.908]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.908]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:21:56.909]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.909]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:21:56.911]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.911]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:21:56.911]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.912]    </block>
[19:21:56.912]  </sequence>
[19:21:56.912]  
[19:21:56.936]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:21:56.936]  
[19:21:56.936]  <debugvars>
[19:21:56.936]    // Pre-defined
[19:21:56.936]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:21:56.937]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:21:56.937]    __dp=0x00000000
[19:21:56.937]    __ap=0x00000000
[19:21:56.937]    __traceout=0x00000001      (SWO Trace)
[19:21:56.937]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:21:56.937]    __FlashAddr=0x00000000
[19:21:56.937]    __FlashLen=0x00000000
[19:21:56.937]    __FlashArg=0x00000000
[19:21:56.937]    __FlashOp=0x00000000
[19:21:56.937]    __Result=0x00000000
[19:21:56.938]    
[19:21:56.938]    // User-defined
[19:21:56.938]    DbgMCU_CR=0x00000007
[19:21:56.938]    DbgMCU_APB1_Fz=0x00000000
[19:21:56.938]    DbgMCU_APB2_Fz=0x00000000
[19:21:56.938]    TraceClk_Pin=0x00040002
[19:21:56.938]    TraceD0_Pin=0x00040003
[19:21:56.938]    TraceD1_Pin=0x00040004
[19:21:56.938]    TraceD2_Pin=0x00040005
[19:21:56.938]    TraceD3_Pin=0x00040006
[19:21:56.938]  </debugvars>
[19:21:56.939]  
[19:21:56.939]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:21:56.939]    <block atomic="false" info="">
[19:21:56.939]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:21:56.939]        // -> [traceSWO <= 0x00000001]
[19:21:56.939]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:21:56.939]        // -> [traceTPIU <= 0x00000000]
[19:21:56.939]    </block>
[19:21:56.939]    <control if="traceSWO" while="" timeout="0" info="">
[19:21:56.940]      // if-block "traceSWO"
[19:21:56.940]        // =>  TRUE
[19:21:56.940]      <block atomic="false" info="">
[19:21:56.940]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:21:56.940]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:21:56.940]            <block atomic="false" info="">
[19:21:56.940]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:21:56.940]                // -> [dbgmcu_val <= 0x00000000]
[19:21:56.940]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:21:56.940]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:21:56.941]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:21:56.941]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.941]                // -> [dbgmcu_val <= 0x00000007]
[19:21:56.942]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:21:56.942]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:21:56.942]              Sequence("ConfigureTraceSWOPin");
[19:21:56.942]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:21:56.942]                  <block atomic="false" info="">
[19:21:56.942]                    __var pin     = 0;
[19:21:56.942]                      // -> [pin <= 0x00000000]
[19:21:56.942]                    __var port    = 0;
[19:21:56.943]                      // -> [port <= 0x00000000]
[19:21:56.943]                    __var portAdr = 0;
[19:21:56.943]                      // -> [portAdr <= 0x00000000]
[19:21:56.943]                    __var pos     = 0;
[19:21:56.943]                      // -> [pos <= 0x00000000]
[19:21:56.943]                    __var SWO_Pin = 0x00010003;          // PB3
[19:21:56.943]                      // -> [SWO_Pin <= 0x00010003]
[19:21:56.943]                  </block>
[19:21:56.943]                  <block atomic="false" info="configure SWO">
[19:21:56.945]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:21:56.945]                      // -> [pin <= 0x00000003]
[19:21:56.945]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:21:56.945]                      // -> [port <= 0x00000001]
[19:21:56.945]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:21:56.945]                      // -> [portAdr <= 0x40020400]
[19:21:56.945]                    pos = pin * 2;
[19:21:56.945]                      // -> [pos <= 0x00000006]
[19:21:56.945]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:21:56.946]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.947]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.947]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:21:56.947]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.948]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.948]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:21:56.949]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.950]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.950]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:21:56.950]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.951]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.951]                  </block>
[19:21:56.951]                  <control if="pin <  8" while="" timeout="0" info="">
[19:21:56.951]                    // if-block "pin <  8"
[19:21:56.951]                      // =>  TRUE
[19:21:56.951]                    <block atomic="false" info="">
[19:21:56.951]                      pos = ((pin    ) & 7) * 4;
[19:21:56.951]                        // -> [pos <= 0x0000000C]
[19:21:56.951]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:21:56.952]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.953]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.954]                    </block>
[19:21:56.954]                    // end if-block "pin <  8"
[19:21:56.954]                  </control>
[19:21:56.954]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:21:56.954]                    // if-block "pin >= 8"
[19:21:56.954]                      // =>  FALSE
[19:21:56.954]                    // skip if-block "pin >= 8"
[19:21:56.954]                  </control>
[19:21:56.954]                </sequence>
[19:21:56.955]            </block>
[19:21:56.955]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:21:56.955]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:21:56.955]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.955]            </block>
[19:21:56.956]          </sequence>
[19:21:56.956]      </block>
[19:21:56.956]      // end if-block "traceSWO"
[19:21:56.956]    </control>
[19:21:56.956]    <control if="traceTPIU" while="" timeout="0" info="">
[19:21:56.956]      // if-block "traceTPIU"
[19:21:56.956]        // =>  FALSE
[19:21:56.956]      // skip if-block "traceTPIU"
[19:21:56.956]    </control>
[19:21:56.957]  </sequence>
[19:21:56.957]  
[19:21:56.970]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:21:56.970]  
[19:21:56.970]  <debugvars>
[19:21:56.970]    // Pre-defined
[19:21:56.970]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:21:56.970]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:21:56.970]    __dp=0x00000000
[19:21:56.970]    __ap=0x00000000
[19:21:56.971]    __traceout=0x00000001      (SWO Trace)
[19:21:56.971]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:21:56.971]    __FlashAddr=0x00000000
[19:21:56.971]    __FlashLen=0x00000000
[19:21:56.971]    __FlashArg=0x00000000
[19:21:56.971]    __FlashOp=0x00000000
[19:21:56.971]    __Result=0x00000000
[19:21:56.972]    
[19:21:56.972]    // User-defined
[19:21:56.972]    DbgMCU_CR=0x00000007
[19:21:56.972]    DbgMCU_APB1_Fz=0x00000000
[19:21:56.972]    DbgMCU_APB2_Fz=0x00000000
[19:21:56.972]    TraceClk_Pin=0x00040002
[19:21:56.973]    TraceD0_Pin=0x00040003
[19:21:56.973]    TraceD1_Pin=0x00040004
[19:21:56.973]    TraceD2_Pin=0x00040005
[19:21:56.973]    TraceD3_Pin=0x00040006
[19:21:56.974]  </debugvars>
[19:21:56.974]  
[19:21:56.974]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:21:56.974]    <block atomic="false" info="">
[19:21:56.975]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:21:56.975]        // -> [traceSWO <= 0x00000001]
[19:21:56.975]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:21:56.975]        // -> [traceTPIU <= 0x00000000]
[19:21:56.975]    </block>
[19:21:56.975]    <control if="traceSWO" while="" timeout="0" info="">
[19:21:56.975]      // if-block "traceSWO"
[19:21:56.976]        // =>  TRUE
[19:21:56.976]      <block atomic="false" info="">
[19:21:56.976]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:21:56.976]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:21:56.976]            <block atomic="false" info="">
[19:21:56.976]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:21:56.976]                // -> [dbgmcu_val <= 0x00000000]
[19:21:56.976]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:21:56.977]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:21:56.977]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:21:56.978]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.978]                // -> [dbgmcu_val <= 0x00000007]
[19:21:56.978]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:21:56.978]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:21:56.978]              Sequence("ConfigureTraceSWOPin");
[19:21:56.978]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:21:56.978]                  <block atomic="false" info="">
[19:21:56.979]                    __var pin     = 0;
[19:21:56.979]                      // -> [pin <= 0x00000000]
[19:21:56.979]                    __var port    = 0;
[19:21:56.979]                      // -> [port <= 0x00000000]
[19:21:56.979]                    __var portAdr = 0;
[19:21:56.979]                      // -> [portAdr <= 0x00000000]
[19:21:56.979]                    __var pos     = 0;
[19:21:56.980]                      // -> [pos <= 0x00000000]
[19:21:56.981]                    __var SWO_Pin = 0x00010003;          // PB3
[19:21:56.981]                      // -> [SWO_Pin <= 0x00010003]
[19:21:56.981]                  </block>
[19:21:56.981]                  <block atomic="false" info="configure SWO">
[19:21:56.981]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:21:56.981]                      // -> [pin <= 0x00000003]
[19:21:56.981]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:21:56.982]                      // -> [port <= 0x00000001]
[19:21:56.982]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:21:56.982]                      // -> [portAdr <= 0x40020400]
[19:21:56.982]                    pos = pin * 2;
[19:21:56.982]                      // -> [pos <= 0x00000006]
[19:21:56.982]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:21:56.983]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.984]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.984]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:21:56.985]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.986]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.986]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:21:56.987]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.988]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.988]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:21:56.989]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.990]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.991]                  </block>
[19:21:56.991]                  <control if="pin <  8" while="" timeout="0" info="">
[19:21:56.991]                    // if-block "pin <  8"
[19:21:56.991]                      // =>  TRUE
[19:21:56.991]                    <block atomic="false" info="">
[19:21:56.991]                      pos = ((pin    ) & 7) * 4;
[19:21:56.992]                        // -> [pos <= 0x0000000C]
[19:21:56.992]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:21:56.992]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.993]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.994]                    </block>
[19:21:56.994]                    // end if-block "pin <  8"
[19:21:56.994]                  </control>
[19:21:56.994]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:21:56.995]                    // if-block "pin >= 8"
[19:21:56.995]                      // =>  FALSE
[19:21:56.995]                    // skip if-block "pin >= 8"
[19:21:56.995]                  </control>
[19:21:56.995]                </sequence>
[19:21:56.996]            </block>
[19:21:56.996]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:21:56.996]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:21:56.997]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:56.998]            </block>
[19:21:56.998]          </sequence>
[19:21:56.998]      </block>
[19:21:56.998]      // end if-block "traceSWO"
[19:21:56.998]    </control>
[19:21:56.998]    <control if="traceTPIU" while="" timeout="0" info="">
[19:21:56.998]      // if-block "traceTPIU"
[19:21:56.999]        // =>  FALSE
[19:21:56.999]      // skip if-block "traceTPIU"
[19:21:56.999]    </control>
[19:21:56.999]  </sequence>
[19:21:56.999]  
[19:21:57.296]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:21:57.296]  
[19:21:57.344]  <debugvars>
[19:21:57.344]    // Pre-defined
[19:21:57.345]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:21:57.345]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:21:57.345]    __dp=0x00000000
[19:21:57.345]    __ap=0x00000000
[19:21:57.345]    __traceout=0x00000001      (SWO Trace)
[19:21:57.346]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:21:57.346]    __FlashAddr=0x00000000
[19:21:57.346]    __FlashLen=0x00000000
[19:21:57.346]    __FlashArg=0x00000000
[19:21:57.346]    __FlashOp=0x00000000
[19:21:57.346]    __Result=0x00000000
[19:21:57.346]    
[19:21:57.346]    // User-defined
[19:21:57.347]    DbgMCU_CR=0x00000007
[19:21:57.347]    DbgMCU_APB1_Fz=0x00000000
[19:21:57.347]    DbgMCU_APB2_Fz=0x00000000
[19:21:57.347]    TraceClk_Pin=0x00040002
[19:21:57.347]    TraceD0_Pin=0x00040003
[19:21:57.347]    TraceD1_Pin=0x00040004
[19:21:57.347]    TraceD2_Pin=0x00040005
[19:21:57.348]    TraceD3_Pin=0x00040006
[19:21:57.348]  </debugvars>
[19:21:57.348]  
[19:21:57.348]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:21:57.348]    <block atomic="false" info="">
[19:21:57.348]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:21:57.348]        // -> [traceSWO <= 0x00000001]
[19:21:57.349]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:21:57.349]        // -> [traceTPIU <= 0x00000000]
[19:21:57.349]    </block>
[19:21:57.349]    <control if="traceSWO" while="" timeout="0" info="">
[19:21:57.350]      // if-block "traceSWO"
[19:21:57.350]        // =>  TRUE
[19:21:57.350]      <block atomic="false" info="">
[19:21:57.350]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:21:57.350]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:21:57.351]            <block atomic="false" info="">
[19:21:57.351]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:21:57.352]                // -> [dbgmcu_val <= 0x00000000]
[19:21:57.352]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:21:57.352]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:21:57.352]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:21:57.352]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:21:57.352]                // -> [dbgmcu_val <= 0x00000007]
[19:21:57.354]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:21:57.354]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:21:57.354]              Sequence("ConfigureTraceSWOPin");
[19:21:57.354]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:21:57.354]                  <block atomic="false" info="">
[19:21:57.354]                    __var pin     = 0;
[19:21:57.355]                      // -> [pin <= 0x00000000]
[19:21:57.355]                    __var port    = 0;
[19:21:57.355]                      // -> [port <= 0x00000000]
[19:21:57.355]                    __var portAdr = 0;
[19:21:57.355]                      // -> [portAdr <= 0x00000000]
[19:21:57.355]                    __var pos     = 0;
[19:21:57.355]                      // -> [pos <= 0x00000000]
[19:21:57.356]                    __var SWO_Pin = 0x00010003;          // PB3
[19:21:57.356]                      // -> [SWO_Pin <= 0x00010003]
[19:21:57.356]                  </block>
[19:21:57.356]                  <block atomic="false" info="configure SWO">
[19:21:57.356]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:21:57.356]                      // -> [pin <= 0x00000003]
[19:21:57.356]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:21:57.357]                      // -> [port <= 0x00000001]
[19:21:57.357]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:21:57.357]                      // -> [portAdr <= 0x40020400]
[19:21:57.357]                    pos = pin * 2;
[19:21:57.357]                      // -> [pos <= 0x00000006]
[19:21:57.357]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:21:57.358]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:21:57.359]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:57.360]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:21:57.361]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:21:57.361]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:57.362]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:21:57.362]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:21:57.363]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:57.363]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:21:57.364]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:21:57.366]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:57.367]                  </block>
[19:21:57.367]                  <control if="pin <  8" while="" timeout="0" info="">
[19:21:57.367]                    // if-block "pin <  8"
[19:21:57.367]                      // =>  TRUE
[19:21:57.367]                    <block atomic="false" info="">
[19:21:57.367]                      pos = ((pin    ) & 7) * 4;
[19:21:57.367]                        // -> [pos <= 0x0000000C]
[19:21:57.368]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:21:57.368]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:21:57.369]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:57.370]                    </block>
[19:21:57.370]                    // end if-block "pin <  8"
[19:21:57.370]                  </control>
[19:21:57.370]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:21:57.370]                    // if-block "pin >= 8"
[19:21:57.370]                      // =>  FALSE
[19:21:57.370]                    // skip if-block "pin >= 8"
[19:21:57.371]                  </control>
[19:21:57.371]                </sequence>
[19:21:57.371]            </block>
[19:21:57.371]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:21:57.371]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:21:57.372]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:21:57.372]            </block>
[19:21:57.372]          </sequence>
[19:21:57.373]      </block>
[19:21:57.373]      // end if-block "traceSWO"
[19:21:57.373]    </control>
[19:21:57.373]    <control if="traceTPIU" while="" timeout="0" info="">
[19:21:57.374]      // if-block "traceTPIU"
[19:21:57.374]        // =>  FALSE
[19:21:57.374]      // skip if-block "traceTPIU"
[19:21:57.375]    </control>
[19:21:57.375]  </sequence>
[19:21:57.375]  
[19:23:44.892]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:23:44.892]  
[19:23:44.938]  <debugvars>
[19:23:44.939]    // Pre-defined
[19:23:44.939]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:23:44.939]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:23:44.940]    __dp=0x00000000
[19:23:44.940]    __ap=0x00000000
[19:23:44.941]    __traceout=0x00000001      (SWO Trace)
[19:23:44.941]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:23:44.941]    __FlashAddr=0x00000000
[19:23:44.942]    __FlashLen=0x00000000
[19:23:44.942]    __FlashArg=0x00000000
[19:23:44.942]    __FlashOp=0x00000000
[19:23:44.942]    __Result=0x00000000
[19:23:44.943]    
[19:23:44.943]    // User-defined
[19:23:44.943]    DbgMCU_CR=0x00000007
[19:23:44.943]    DbgMCU_APB1_Fz=0x00000000
[19:23:44.943]    DbgMCU_APB2_Fz=0x00000000
[19:23:44.944]    TraceClk_Pin=0x00040002
[19:23:44.944]    TraceD0_Pin=0x00040003
[19:23:44.944]    TraceD1_Pin=0x00040004
[19:23:44.944]    TraceD2_Pin=0x00040005
[19:23:44.944]    TraceD3_Pin=0x00040006
[19:23:44.945]  </debugvars>
[19:23:44.945]  
[19:23:44.945]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:23:44.945]    <block atomic="false" info="">
[19:23:44.946]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:23:44.946]        // -> [traceSWO <= 0x00000001]
[19:23:44.947]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:23:44.947]        // -> [traceTPIU <= 0x00000000]
[19:23:44.948]    </block>
[19:23:44.948]    <control if="traceSWO" while="" timeout="0" info="">
[19:23:44.948]      // if-block "traceSWO"
[19:23:44.949]        // =>  TRUE
[19:23:44.949]      <block atomic="false" info="">
[19:23:44.949]        Sequence("DisableTraceSWO");
[19:23:44.950]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:23:44.950]            <block atomic="false" info="">
[19:23:44.951]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:23:44.951]                // -> [dbgmcu_val <= 0x00000000]
[19:23:44.952]            </block>
[19:23:44.952]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:23:44.952]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:23:44.957]  
[19:23:44.957]  !!! E310 : Debug access failed - cannot read address 0xE0042004 (accsize '4', AP '0x00000000')
[19:23:44.957]  
[19:23:44.957]                // -> [Read32(0xE0042004) => 0x00030012]   (__dp=0x00000000, __ap=0x00000000)
[19:23:44.957]            </block>
[19:23:44.958]          </sequence>
[19:23:44.958]      </block>
[19:23:44.958]      // end if-block "traceSWO"
[19:23:44.958]    </control>
[19:23:44.959]  </sequence>
[19:23:44.959]  
[19:33:35.587]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:33:35.587]  
[19:33:35.634]  <debugvars>
[19:33:35.635]    // Pre-defined
[19:33:35.635]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:33:35.635]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[19:33:35.635]    __dp=0x00000000
[19:33:35.635]    __ap=0x00000000
[19:33:35.635]    __traceout=0x00000001      (SWO Trace)
[19:33:35.635]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:33:35.636]    __FlashAddr=0x00000000
[19:33:35.636]    __FlashLen=0x00000000
[19:33:35.636]    __FlashArg=0x00000000
[19:33:35.636]    __FlashOp=0x00000000
[19:33:35.636]    __Result=0x00000000
[19:33:35.636]    
[19:33:35.636]    // User-defined
[19:33:35.636]    DbgMCU_CR=0x00000007
[19:33:35.636]    DbgMCU_APB1_Fz=0x00000000
[19:33:35.636]    DbgMCU_APB2_Fz=0x00000000
[19:33:35.636]    TraceClk_Pin=0x00040002
[19:33:35.636]    TraceD0_Pin=0x00040003
[19:33:35.637]    TraceD1_Pin=0x00040004
[19:33:35.637]    TraceD2_Pin=0x00040005
[19:33:35.637]    TraceD3_Pin=0x00040006
[19:33:35.637]  </debugvars>
[19:33:35.637]  
[19:33:35.637]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:33:35.637]    <block atomic="false" info="">
[19:33:35.637]      Sequence("CheckID");
[19:33:35.637]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:33:35.638]          <block atomic="false" info="">
[19:33:35.638]            __var pidr1 = 0;
[19:33:35.638]              // -> [pidr1 <= 0x00000000]
[19:33:35.638]            __var pidr2 = 0;
[19:33:35.638]              // -> [pidr2 <= 0x00000000]
[19:33:35.638]            __var jep106id = 0;
[19:33:35.638]              // -> [jep106id <= 0x00000000]
[19:33:35.638]            __var ROMTableBase = 0;
[19:33:35.639]              // -> [ROMTableBase <= 0x00000000]
[19:33:35.640]            __ap = 0;      // AHB-AP
[19:33:35.640]              // -> [__ap <= 0x00000000]
[19:33:35.640]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:33:35.640]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[19:33:35.640]              // -> [ROMTableBase <= 0xE00FF000]
[19:33:35.641]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:33:35.642]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:33:35.642]              // -> [pidr1 <= 0x00000004]
[19:33:35.642]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:33:35.642]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[19:33:35.643]              // -> [pidr2 <= 0x0000000A]
[19:33:35.643]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:33:35.643]              // -> [jep106id <= 0x00000020]
[19:33:35.643]          </block>
[19:33:35.643]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:33:35.643]            // if-block "jep106id != 0x20"
[19:33:35.643]              // =>  FALSE
[19:33:35.643]            // skip if-block "jep106id != 0x20"
[19:33:35.644]          </control>
[19:33:35.644]        </sequence>
[19:33:35.644]    </block>
[19:33:35.644]  </sequence>
[19:33:35.644]  
[19:33:35.644]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:33:35.644]  
[19:33:35.644]  <debugvars>
[19:33:35.644]    // Pre-defined
[19:33:35.644]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:33:35.645]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[19:33:35.645]    __dp=0x00000000
[19:33:35.645]    __ap=0x00000000
[19:33:35.645]    __traceout=0x00000001      (SWO Trace)
[19:33:35.645]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:33:35.645]    __FlashAddr=0x00000000
[19:33:35.645]    __FlashLen=0x00000000
[19:33:35.645]    __FlashArg=0x00000000
[19:33:35.646]    __FlashOp=0x00000000
[19:33:35.646]    __Result=0x00000000
[19:33:35.646]    
[19:33:35.646]    // User-defined
[19:33:35.646]    DbgMCU_CR=0x00000007
[19:33:35.646]    DbgMCU_APB1_Fz=0x00000000
[19:33:35.646]    DbgMCU_APB2_Fz=0x00000000
[19:33:35.646]    TraceClk_Pin=0x00040002
[19:33:35.646]    TraceD0_Pin=0x00040003
[19:33:35.646]    TraceD1_Pin=0x00040004
[19:33:35.647]    TraceD2_Pin=0x00040005
[19:33:35.647]    TraceD3_Pin=0x00040006
[19:33:35.647]  </debugvars>
[19:33:35.647]  
[19:33:35.647]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:33:35.647]    <block atomic="false" info="">
[19:33:35.647]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:33:35.649]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:35.649]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:33:35.650]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:35.650]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:33:35.651]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:35.651]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:33:35.651]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:35.652]    </block>
[19:33:35.652]  </sequence>
[19:33:35.652]  
[19:33:36.834]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:33:36.834]  
[19:33:36.834]  <debugvars>
[19:33:36.835]    // Pre-defined
[19:33:36.835]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:33:36.835]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:33:36.835]    __dp=0x00000000
[19:33:36.836]    __ap=0x00000000
[19:33:36.836]    __traceout=0x00000001      (SWO Trace)
[19:33:36.836]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:33:36.836]    __FlashAddr=0x00000000
[19:33:36.836]    __FlashLen=0x00000000
[19:33:36.838]    __FlashArg=0x00000000
[19:33:36.838]    __FlashOp=0x00000000
[19:33:36.838]    __Result=0x00000000
[19:33:36.838]    
[19:33:36.838]    // User-defined
[19:33:36.838]    DbgMCU_CR=0x00000007
[19:33:36.839]    DbgMCU_APB1_Fz=0x00000000
[19:33:36.839]    DbgMCU_APB2_Fz=0x00000000
[19:33:36.839]    TraceClk_Pin=0x00040002
[19:33:36.839]    TraceD0_Pin=0x00040003
[19:33:36.840]    TraceD1_Pin=0x00040004
[19:33:36.840]    TraceD2_Pin=0x00040005
[19:33:36.840]    TraceD3_Pin=0x00040006
[19:33:36.840]  </debugvars>
[19:33:36.840]  
[19:33:36.841]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:33:36.841]    <block atomic="false" info="">
[19:33:36.841]      Sequence("CheckID");
[19:33:36.841]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:33:36.842]          <block atomic="false" info="">
[19:33:36.842]            __var pidr1 = 0;
[19:33:36.842]              // -> [pidr1 <= 0x00000000]
[19:33:36.842]            __var pidr2 = 0;
[19:33:36.843]              // -> [pidr2 <= 0x00000000]
[19:33:36.843]            __var jep106id = 0;
[19:33:36.843]              // -> [jep106id <= 0x00000000]
[19:33:36.843]            __var ROMTableBase = 0;
[19:33:36.843]              // -> [ROMTableBase <= 0x00000000]
[19:33:36.845]            __ap = 0;      // AHB-AP
[19:33:36.845]              // -> [__ap <= 0x00000000]
[19:33:36.845]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:33:36.846]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.847]              // -> [ROMTableBase <= 0xE00FF000]
[19:33:36.847]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:33:36.848]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.849]              // -> [pidr1 <= 0x00000004]
[19:33:36.849]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:33:36.850]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.851]              // -> [pidr2 <= 0x0000000A]
[19:33:36.851]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:33:36.851]              // -> [jep106id <= 0x00000020]
[19:33:36.851]          </block>
[19:33:36.852]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:33:36.852]            // if-block "jep106id != 0x20"
[19:33:36.852]              // =>  FALSE
[19:33:36.853]            // skip if-block "jep106id != 0x20"
[19:33:36.853]          </control>
[19:33:36.853]        </sequence>
[19:33:36.853]    </block>
[19:33:36.854]  </sequence>
[19:33:36.854]  
[19:33:36.854]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:33:36.854]  
[19:33:36.854]  <debugvars>
[19:33:36.855]    // Pre-defined
[19:33:36.855]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:33:36.855]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:33:36.855]    __dp=0x00000000
[19:33:36.857]    __ap=0x00000000
[19:33:36.857]    __traceout=0x00000001      (SWO Trace)
[19:33:36.857]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:33:36.858]    __FlashAddr=0x00000000
[19:33:36.858]    __FlashLen=0x00000000
[19:33:36.858]    __FlashArg=0x00000000
[19:33:36.859]    __FlashOp=0x00000000
[19:33:36.859]    __Result=0x00000000
[19:33:36.859]    
[19:33:36.859]    // User-defined
[19:33:36.860]    DbgMCU_CR=0x00000007
[19:33:36.860]    DbgMCU_APB1_Fz=0x00000000
[19:33:36.860]    DbgMCU_APB2_Fz=0x00000000
[19:33:36.861]    TraceClk_Pin=0x00040002
[19:33:36.861]    TraceD0_Pin=0x00040003
[19:33:36.861]    TraceD1_Pin=0x00040004
[19:33:36.862]    TraceD2_Pin=0x00040005
[19:33:36.862]    TraceD3_Pin=0x00040006
[19:33:36.862]  </debugvars>
[19:33:36.863]  
[19:33:36.863]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:33:36.863]    <block atomic="false" info="">
[19:33:36.863]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:33:36.865]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.865]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:33:36.866]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.866]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:33:36.869]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.869]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:33:36.870]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.870]    </block>
[19:33:36.871]  </sequence>
[19:33:36.871]  
[19:33:36.924]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:33:36.924]  
[19:33:36.925]  <debugvars>
[19:33:36.926]    // Pre-defined
[19:33:36.926]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:33:36.926]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:33:36.926]    __dp=0x00000000
[19:33:36.927]    __ap=0x00000000
[19:33:36.927]    __traceout=0x00000001      (SWO Trace)
[19:33:36.927]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:33:36.927]    __FlashAddr=0x00000000
[19:33:36.928]    __FlashLen=0x00000000
[19:33:36.928]    __FlashArg=0x00000000
[19:33:36.928]    __FlashOp=0x00000000
[19:33:36.928]    __Result=0x00000000
[19:33:36.929]    
[19:33:36.929]    // User-defined
[19:33:36.929]    DbgMCU_CR=0x00000007
[19:33:36.930]    DbgMCU_APB1_Fz=0x00000000
[19:33:36.930]    DbgMCU_APB2_Fz=0x00000000
[19:33:36.930]    TraceClk_Pin=0x00040002
[19:33:36.930]    TraceD0_Pin=0x00040003
[19:33:36.931]    TraceD1_Pin=0x00040004
[19:33:36.931]    TraceD2_Pin=0x00040005
[19:33:36.931]    TraceD3_Pin=0x00040006
[19:33:36.932]  </debugvars>
[19:33:36.932]  
[19:33:36.933]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:33:36.933]    <block atomic="false" info="">
[19:33:36.933]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:33:36.934]        // -> [traceSWO <= 0x00000001]
[19:33:36.934]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:33:36.934]        // -> [traceTPIU <= 0x00000000]
[19:33:36.935]    </block>
[19:33:36.935]    <control if="traceSWO" while="" timeout="0" info="">
[19:33:36.935]      // if-block "traceSWO"
[19:33:36.935]        // =>  TRUE
[19:33:36.936]      <block atomic="false" info="">
[19:33:36.937]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:33:36.937]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:33:36.937]            <block atomic="false" info="">
[19:33:36.937]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:33:36.937]                // -> [dbgmcu_val <= 0x00000000]
[19:33:36.937]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:33:36.937]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:33:36.937]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:33:36.939]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.940]                // -> [dbgmcu_val <= 0x00000007]
[19:33:36.940]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:33:36.940]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:33:36.940]              Sequence("ConfigureTraceSWOPin");
[19:33:36.940]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:33:36.940]                  <block atomic="false" info="">
[19:33:36.942]                    __var pin     = 0;
[19:33:36.942]                      // -> [pin <= 0x00000000]
[19:33:36.942]                    __var port    = 0;
[19:33:36.943]                      // -> [port <= 0x00000000]
[19:33:36.943]                    __var portAdr = 0;
[19:33:36.943]                      // -> [portAdr <= 0x00000000]
[19:33:36.943]                    __var pos     = 0;
[19:33:36.943]                      // -> [pos <= 0x00000000]
[19:33:36.944]                    __var SWO_Pin = 0x00010003;          // PB3
[19:33:36.944]                      // -> [SWO_Pin <= 0x00010003]
[19:33:36.944]                  </block>
[19:33:36.944]                  <block atomic="false" info="configure SWO">
[19:33:36.945]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:33:36.946]                      // -> [pin <= 0x00000003]
[19:33:36.946]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:33:36.946]                      // -> [port <= 0x00000001]
[19:33:36.947]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:33:36.947]                      // -> [portAdr <= 0x40020400]
[19:33:36.947]                    pos = pin * 2;
[19:33:36.947]                      // -> [pos <= 0x00000006]
[19:33:36.948]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:33:36.949]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.951]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.951]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:33:36.952]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.953]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.954]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:33:36.955]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.956]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.957]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:33:36.959]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.960]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.960]                  </block>
[19:33:36.961]                  <control if="pin <  8" while="" timeout="0" info="">
[19:33:36.961]                    // if-block "pin <  8"
[19:33:36.961]                      // =>  TRUE
[19:33:36.962]                    <block atomic="false" info="">
[19:33:36.962]                      pos = ((pin    ) & 7) * 4;
[19:33:36.963]                        // -> [pos <= 0x0000000C]
[19:33:36.963]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:33:36.964]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.966]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.967]                    </block>
[19:33:36.967]                    // end if-block "pin <  8"
[19:33:36.967]                  </control>
[19:33:36.967]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:33:36.967]                    // if-block "pin >= 8"
[19:33:36.968]                      // =>  FALSE
[19:33:36.968]                    // skip if-block "pin >= 8"
[19:33:36.968]                  </control>
[19:33:36.969]                </sequence>
[19:33:36.969]            </block>
[19:33:36.970]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:33:36.970]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:33:36.971]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:36.971]            </block>
[19:33:36.971]          </sequence>
[19:33:36.972]      </block>
[19:33:36.972]      // end if-block "traceSWO"
[19:33:36.972]    </control>
[19:33:36.972]    <control if="traceTPIU" while="" timeout="0" info="">
[19:33:36.973]      // if-block "traceTPIU"
[19:33:36.973]        // =>  FALSE
[19:33:36.973]      // skip if-block "traceTPIU"
[19:33:36.974]    </control>
[19:33:36.975]  </sequence>
[19:33:36.975]  
[19:33:36.993]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:33:36.993]  
[19:33:36.994]  <debugvars>
[19:33:36.994]    // Pre-defined
[19:33:36.995]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:33:36.995]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:33:36.995]    __dp=0x00000000
[19:33:36.996]    __ap=0x00000000
[19:33:36.996]    __traceout=0x00000001      (SWO Trace)
[19:33:36.996]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:33:36.996]    __FlashAddr=0x00000000
[19:33:36.997]    __FlashLen=0x00000000
[19:33:36.998]    __FlashArg=0x00000000
[19:33:36.998]    __FlashOp=0x00000000
[19:33:36.998]    __Result=0x00000000
[19:33:36.998]    
[19:33:36.998]    // User-defined
[19:33:36.999]    DbgMCU_CR=0x00000007
[19:33:36.999]    DbgMCU_APB1_Fz=0x00000000
[19:33:36.999]    DbgMCU_APB2_Fz=0x00000000
[19:33:36.999]    TraceClk_Pin=0x00040002
[19:33:37.000]    TraceD0_Pin=0x00040003
[19:33:37.000]    TraceD1_Pin=0x00040004
[19:33:37.000]    TraceD2_Pin=0x00040005
[19:33:37.000]    TraceD3_Pin=0x00040006
[19:33:37.001]  </debugvars>
[19:33:37.001]  
[19:33:37.001]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:33:37.001]    <block atomic="false" info="">
[19:33:37.001]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:33:37.002]        // -> [traceSWO <= 0x00000001]
[19:33:37.002]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:33:37.002]        // -> [traceTPIU <= 0x00000000]
[19:33:37.002]    </block>
[19:33:37.002]    <control if="traceSWO" while="" timeout="0" info="">
[19:33:37.004]      // if-block "traceSWO"
[19:33:37.004]        // =>  TRUE
[19:33:37.004]      <block atomic="false" info="">
[19:33:37.004]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:33:37.004]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:33:37.005]            <block atomic="false" info="">
[19:33:37.005]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:33:37.005]                // -> [dbgmcu_val <= 0x00000000]
[19:33:37.006]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:33:37.006]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:33:37.007]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:33:37.008]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.009]                // -> [dbgmcu_val <= 0x00000007]
[19:33:37.009]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:33:37.009]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:33:37.010]              Sequence("ConfigureTraceSWOPin");
[19:33:37.010]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:33:37.010]                  <block atomic="false" info="">
[19:33:37.010]                    __var pin     = 0;
[19:33:37.011]                      // -> [pin <= 0x00000000]
[19:33:37.011]                    __var port    = 0;
[19:33:37.011]                      // -> [port <= 0x00000000]
[19:33:37.011]                    __var portAdr = 0;
[19:33:37.011]                      // -> [portAdr <= 0x00000000]
[19:33:37.012]                    __var pos     = 0;
[19:33:37.012]                      // -> [pos <= 0x00000000]
[19:33:37.012]                    __var SWO_Pin = 0x00010003;          // PB3
[19:33:37.012]                      // -> [SWO_Pin <= 0x00010003]
[19:33:37.012]                  </block>
[19:33:37.013]                  <block atomic="false" info="configure SWO">
[19:33:37.013]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:33:37.013]                      // -> [pin <= 0x00000003]
[19:33:37.013]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:33:37.014]                      // -> [port <= 0x00000001]
[19:33:37.014]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:33:37.015]                      // -> [portAdr <= 0x40020400]
[19:33:37.015]                    pos = pin * 2;
[19:33:37.016]                      // -> [pos <= 0x00000006]
[19:33:37.016]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:33:37.017]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.018]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.019]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:33:37.020]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.021]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.022]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:33:37.024]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.025]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.025]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:33:37.027]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.028]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.029]                  </block>
[19:33:37.029]                  <control if="pin <  8" while="" timeout="0" info="">
[19:33:37.029]                    // if-block "pin <  8"
[19:33:37.029]                      // =>  TRUE
[19:33:37.029]                    <block atomic="false" info="">
[19:33:37.030]                      pos = ((pin    ) & 7) * 4;
[19:33:37.030]                        // -> [pos <= 0x0000000C]
[19:33:37.030]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:33:37.031]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.033]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.033]                    </block>
[19:33:37.034]                    // end if-block "pin <  8"
[19:33:37.034]                  </control>
[19:33:37.034]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:33:37.035]                    // if-block "pin >= 8"
[19:33:37.035]                      // =>  FALSE
[19:33:37.035]                    // skip if-block "pin >= 8"
[19:33:37.035]                  </control>
[19:33:37.036]                </sequence>
[19:33:37.036]            </block>
[19:33:37.036]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:33:37.036]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:33:37.038]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.039]            </block>
[19:33:37.039]          </sequence>
[19:33:37.039]      </block>
[19:33:37.039]      // end if-block "traceSWO"
[19:33:37.039]    </control>
[19:33:37.039]    <control if="traceTPIU" while="" timeout="0" info="">
[19:33:37.039]      // if-block "traceTPIU"
[19:33:37.041]        // =>  FALSE
[19:33:37.041]      // skip if-block "traceTPIU"
[19:33:37.041]    </control>
[19:33:37.041]  </sequence>
[19:33:37.042]  
[19:33:37.476]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:33:37.476]  
[19:33:37.523]  <debugvars>
[19:33:37.523]    // Pre-defined
[19:33:37.524]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:33:37.524]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:33:37.524]    __dp=0x00000000
[19:33:37.525]    __ap=0x00000000
[19:33:37.525]    __traceout=0x00000001      (SWO Trace)
[19:33:37.526]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:33:37.526]    __FlashAddr=0x00000000
[19:33:37.527]    __FlashLen=0x00000000
[19:33:37.527]    __FlashArg=0x00000000
[19:33:37.527]    __FlashOp=0x00000000
[19:33:37.527]    __Result=0x00000000
[19:33:37.528]    
[19:33:37.528]    // User-defined
[19:33:37.528]    DbgMCU_CR=0x00000007
[19:33:37.528]    DbgMCU_APB1_Fz=0x00000000
[19:33:37.528]    DbgMCU_APB2_Fz=0x00000000
[19:33:37.529]    TraceClk_Pin=0x00040002
[19:33:37.529]    TraceD0_Pin=0x00040003
[19:33:37.529]    TraceD1_Pin=0x00040004
[19:33:37.529]    TraceD2_Pin=0x00040005
[19:33:37.530]    TraceD3_Pin=0x00040006
[19:33:37.530]  </debugvars>
[19:33:37.530]  
[19:33:37.530]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:33:37.530]    <block atomic="false" info="">
[19:33:37.531]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:33:37.531]        // -> [traceSWO <= 0x00000001]
[19:33:37.532]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:33:37.532]        // -> [traceTPIU <= 0x00000000]
[19:33:37.532]    </block>
[19:33:37.532]    <control if="traceSWO" while="" timeout="0" info="">
[19:33:37.532]      // if-block "traceSWO"
[19:33:37.532]        // =>  TRUE
[19:33:37.533]      <block atomic="false" info="">
[19:33:37.533]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:33:37.533]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:33:37.534]            <block atomic="false" info="">
[19:33:37.535]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:33:37.535]                // -> [dbgmcu_val <= 0x00000000]
[19:33:37.535]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:33:37.535]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:33:37.536]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:33:37.537]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.537]                // -> [dbgmcu_val <= 0x00000007]
[19:33:37.538]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:33:37.539]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:33:37.539]              Sequence("ConfigureTraceSWOPin");
[19:33:37.539]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:33:37.539]                  <block atomic="false" info="">
[19:33:37.540]                    __var pin     = 0;
[19:33:37.540]                      // -> [pin <= 0x00000000]
[19:33:37.540]                    __var port    = 0;
[19:33:37.540]                      // -> [port <= 0x00000000]
[19:33:37.541]                    __var portAdr = 0;
[19:33:37.541]                      // -> [portAdr <= 0x00000000]
[19:33:37.541]                    __var pos     = 0;
[19:33:37.541]                      // -> [pos <= 0x00000000]
[19:33:37.542]                    __var SWO_Pin = 0x00010003;          // PB3
[19:33:37.542]                      // -> [SWO_Pin <= 0x00010003]
[19:33:37.542]                  </block>
[19:33:37.542]                  <block atomic="false" info="configure SWO">
[19:33:37.543]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:33:37.543]                      // -> [pin <= 0x00000003]
[19:33:37.543]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:33:37.543]                      // -> [port <= 0x00000001]
[19:33:37.544]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:33:37.544]                      // -> [portAdr <= 0x40020400]
[19:33:37.544]                    pos = pin * 2;
[19:33:37.544]                      // -> [pos <= 0x00000006]
[19:33:37.544]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:33:37.545]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.547]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.548]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:33:37.549]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.550]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.550]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:33:37.552]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.554]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.554]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:33:37.555]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.556]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.557]                  </block>
[19:33:37.558]                  <control if="pin <  8" while="" timeout="0" info="">
[19:33:37.558]                    // if-block "pin <  8"
[19:33:37.558]                      // =>  TRUE
[19:33:37.558]                    <block atomic="false" info="">
[19:33:37.559]                      pos = ((pin    ) & 7) * 4;
[19:33:37.559]                        // -> [pos <= 0x0000000C]
[19:33:37.559]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:33:37.560]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.561]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.562]                    </block>
[19:33:37.562]                    // end if-block "pin <  8"
[19:33:37.562]                  </control>
[19:33:37.562]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:33:37.562]                    // if-block "pin >= 8"
[19:33:37.564]                      // =>  FALSE
[19:33:37.564]                    // skip if-block "pin >= 8"
[19:33:37.564]                  </control>
[19:33:37.565]                </sequence>
[19:33:37.565]            </block>
[19:33:37.565]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:33:37.566]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:33:37.567]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:33:37.567]            </block>
[19:33:37.568]          </sequence>
[19:33:37.568]      </block>
[19:33:37.568]      // end if-block "traceSWO"
[19:33:37.568]    </control>
[19:33:37.569]    <control if="traceTPIU" while="" timeout="0" info="">
[19:33:37.569]      // if-block "traceTPIU"
[19:33:37.569]        // =>  FALSE
[19:33:37.569]      // skip if-block "traceTPIU"
[19:33:37.570]    </control>
[19:33:37.570]  </sequence>
[19:33:37.570]  
[19:34:27.262]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:34:27.262]  
[19:34:27.310]  <debugvars>
[19:34:27.310]    // Pre-defined
[19:34:27.310]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:34:27.311]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:34:27.311]    __dp=0x00000000
[19:34:27.311]    __ap=0x00000000
[19:34:27.311]    __traceout=0x00000001      (SWO Trace)
[19:34:27.312]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:34:27.312]    __FlashAddr=0x00000000
[19:34:27.313]    __FlashLen=0x00000000
[19:34:27.313]    __FlashArg=0x00000000
[19:34:27.313]    __FlashOp=0x00000000
[19:34:27.313]    __Result=0x00000000
[19:34:27.314]    
[19:34:27.314]    // User-defined
[19:34:27.314]    DbgMCU_CR=0x00000007
[19:34:27.314]    DbgMCU_APB1_Fz=0x00000000
[19:34:27.314]    DbgMCU_APB2_Fz=0x00000000
[19:34:27.314]    TraceClk_Pin=0x00040002
[19:34:27.315]    TraceD0_Pin=0x00040003
[19:34:27.315]    TraceD1_Pin=0x00040004
[19:34:27.315]    TraceD2_Pin=0x00040005
[19:34:27.316]    TraceD3_Pin=0x00040006
[19:34:27.316]  </debugvars>
[19:34:27.316]  
[19:34:27.316]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:34:27.316]    <block atomic="false" info="">
[19:34:27.317]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:34:27.317]        // -> [traceSWO <= 0x00000001]
[19:34:27.317]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:34:27.317]        // -> [traceTPIU <= 0x00000000]
[19:34:27.318]    </block>
[19:34:27.318]    <control if="traceSWO" while="" timeout="0" info="">
[19:34:27.318]      // if-block "traceSWO"
[19:34:27.319]        // =>  TRUE
[19:34:27.319]      <block atomic="false" info="">
[19:34:27.320]        Sequence("DisableTraceSWO");
[19:34:27.320]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:34:27.320]            <block atomic="false" info="">
[19:34:27.321]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:34:27.321]                // -> [dbgmcu_val <= 0x00000000]
[19:34:27.322]            </block>
[19:34:27.322]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:34:27.323]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:34:27.326]  
[19:34:27.326]  !!! E310 : Debug access failed - cannot read address 0xE0042004 (accsize '4', AP '0x00000000')
[19:34:27.326]  
[19:34:27.328]                // -> [Read32(0xE0042004) => 0x00030012]   (__dp=0x00000000, __ap=0x00000000)
[19:34:27.328]            </block>
[19:34:27.328]          </sequence>
[19:34:27.328]      </block>
[19:34:27.328]      // end if-block "traceSWO"
[19:34:27.328]    </control>
[19:34:27.328]  </sequence>
[19:34:27.329]  
[19:36:46.089]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:36:46.089]  
[19:36:46.137]  <debugvars>
[19:36:46.137]    // Pre-defined
[19:36:46.137]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:36:46.137]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:36:46.137]    __dp=0x00000000
[19:36:46.138]    __ap=0x00000000
[19:36:46.138]    __traceout=0x00000001      (SWO Trace)
[19:36:46.138]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:36:46.139]    __FlashAddr=0x00000000
[19:36:46.139]    __FlashLen=0x00000000
[19:36:46.139]    __FlashArg=0x00000000
[19:36:46.140]    __FlashOp=0x00000000
[19:36:46.140]    __Result=0x00000000
[19:36:46.140]    
[19:36:46.140]    // User-defined
[19:36:46.140]    DbgMCU_CR=0x00000007
[19:36:46.140]    DbgMCU_APB1_Fz=0x00000000
[19:36:46.141]    DbgMCU_APB2_Fz=0x00000000
[19:36:46.141]    TraceClk_Pin=0x00040002
[19:36:46.141]    TraceD0_Pin=0x00040003
[19:36:46.141]    TraceD1_Pin=0x00040004
[19:36:46.141]    TraceD2_Pin=0x00040005
[19:36:46.142]    TraceD3_Pin=0x00040006
[19:36:46.142]  </debugvars>
[19:36:46.142]  
[19:36:46.143]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:36:46.143]    <block atomic="false" info="">
[19:36:46.143]      Sequence("CheckID");
[19:36:46.143]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:36:46.144]          <block atomic="false" info="">
[19:36:46.145]            __var pidr1 = 0;
[19:36:46.145]              // -> [pidr1 <= 0x00000000]
[19:36:46.145]            __var pidr2 = 0;
[19:36:46.145]              // -> [pidr2 <= 0x00000000]
[19:36:46.146]            __var jep106id = 0;
[19:36:46.146]              // -> [jep106id <= 0x00000000]
[19:36:46.146]            __var ROMTableBase = 0;
[19:36:46.146]              // -> [ROMTableBase <= 0x00000000]
[19:36:46.146]            __ap = 0;      // AHB-AP
[19:36:46.147]              // -> [__ap <= 0x00000000]
[19:36:46.147]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:36:46.148]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[19:36:46.148]              // -> [ROMTableBase <= 0xE00FF000]
[19:36:46.148]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:36:46.150]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:36:46.150]              // -> [pidr1 <= 0x00000004]
[19:36:46.151]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:36:46.152]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[19:36:46.152]              // -> [pidr2 <= 0x0000000A]
[19:36:46.153]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:36:46.153]              // -> [jep106id <= 0x00000020]
[19:36:46.153]          </block>
[19:36:46.153]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:36:46.154]            // if-block "jep106id != 0x20"
[19:36:46.154]              // =>  FALSE
[19:36:46.154]            // skip if-block "jep106id != 0x20"
[19:36:46.154]          </control>
[19:36:46.155]        </sequence>
[19:36:46.155]    </block>
[19:36:46.155]  </sequence>
[19:36:46.155]  
[19:36:46.156]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:36:46.156]  
[19:36:46.156]  <debugvars>
[19:36:46.156]    // Pre-defined
[19:36:46.157]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:36:46.157]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:36:46.157]    __dp=0x00000000
[19:36:46.157]    __ap=0x00000000
[19:36:46.157]    __traceout=0x00000001      (SWO Trace)
[19:36:46.158]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:36:46.158]    __FlashAddr=0x00000000
[19:36:46.158]    __FlashLen=0x00000000
[19:36:46.158]    __FlashArg=0x00000000
[19:36:46.159]    __FlashOp=0x00000000
[19:36:46.159]    __Result=0x00000000
[19:36:46.160]    
[19:36:46.160]    // User-defined
[19:36:46.160]    DbgMCU_CR=0x00000007
[19:36:46.160]    DbgMCU_APB1_Fz=0x00000000
[19:36:46.160]    DbgMCU_APB2_Fz=0x00000000
[19:36:46.161]    TraceClk_Pin=0x00040002
[19:36:46.161]    TraceD0_Pin=0x00040003
[19:36:46.161]    TraceD1_Pin=0x00040004
[19:36:46.161]    TraceD2_Pin=0x00040005
[19:36:46.162]    TraceD3_Pin=0x00040006
[19:36:46.162]  </debugvars>
[19:36:46.162]  
[19:36:46.162]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:36:46.162]    <block atomic="false" info="">
[19:36:46.163]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:36:46.164]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:36:46.164]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:36:46.222]  
[19:36:46.222]  !!! E310 : Debug access failed - cannot write value 0x00000007 to address 0xE0042004 (accsize '4', AP '0x00000000')
[19:36:46.222]  
[19:36:46.236]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:36:46.236]    </block>
[19:36:46.237]  </sequence>
[19:36:46.237]  
[19:37:49.390]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:37:49.390]  
[19:37:49.437]  <debugvars>
[19:37:49.437]    // Pre-defined
[19:37:49.438]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:37:49.439]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:37:49.439]    __dp=0x00000000
[19:37:49.439]    __ap=0x00000000
[19:37:49.440]    __traceout=0x00000001      (SWO Trace)
[19:37:49.440]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:37:49.440]    __FlashAddr=0x00000000
[19:37:49.441]    __FlashLen=0x00000000
[19:37:49.441]    __FlashArg=0x00000000
[19:37:49.441]    __FlashOp=0x00000000
[19:37:49.442]    __Result=0x00000000
[19:37:49.442]    
[19:37:49.442]    // User-defined
[19:37:49.443]    DbgMCU_CR=0x00000007
[19:37:49.443]    DbgMCU_APB1_Fz=0x00000000
[19:37:49.444]    DbgMCU_APB2_Fz=0x00000000
[19:37:49.444]    TraceClk_Pin=0x00040002
[19:37:49.444]    TraceD0_Pin=0x00040003
[19:37:49.445]    TraceD1_Pin=0x00040004
[19:37:49.445]    TraceD2_Pin=0x00040005
[19:37:49.445]    TraceD3_Pin=0x00040006
[19:37:49.446]  </debugvars>
[19:37:49.446]  
[19:37:49.446]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:37:49.446]    <block atomic="false" info="">
[19:37:49.447]      Sequence("CheckID");
[19:37:49.447]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:37:49.447]          <block atomic="false" info="">
[19:37:49.448]            __var pidr1 = 0;
[19:37:49.448]              // -> [pidr1 <= 0x00000000]
[19:37:49.449]            __var pidr2 = 0;
[19:37:49.449]              // -> [pidr2 <= 0x00000000]
[19:37:49.449]            __var jep106id = 0;
[19:37:49.449]              // -> [jep106id <= 0x00000000]
[19:37:49.449]            __var ROMTableBase = 0;
[19:37:49.449]              // -> [ROMTableBase <= 0x00000000]
[19:37:49.450]            __ap = 0;      // AHB-AP
[19:37:49.450]              // -> [__ap <= 0x00000000]
[19:37:49.450]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:37:49.451]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[19:37:49.453]              // -> [ROMTableBase <= 0xE00FF000]
[19:37:49.453]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:37:49.453]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:37:49.454]              // -> [pidr1 <= 0x00000004]
[19:37:49.454]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:37:49.455]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[19:37:49.456]              // -> [pidr2 <= 0x0000000A]
[19:37:49.457]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:37:49.457]              // -> [jep106id <= 0x00000020]
[19:37:49.457]          </block>
[19:37:49.458]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:37:49.458]            // if-block "jep106id != 0x20"
[19:37:49.458]              // =>  FALSE
[19:37:49.458]            // skip if-block "jep106id != 0x20"
[19:37:49.458]          </control>
[19:37:49.458]        </sequence>
[19:37:49.458]    </block>
[19:37:49.459]  </sequence>
[19:37:49.459]  
[19:37:49.460]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:37:49.460]  
[19:37:49.460]  <debugvars>
[19:37:49.460]    // Pre-defined
[19:37:49.461]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:37:49.461]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:37:49.461]    __dp=0x00000000
[19:37:49.462]    __ap=0x00000000
[19:37:49.462]    __traceout=0x00000001      (SWO Trace)
[19:37:49.462]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:37:49.463]    __FlashAddr=0x00000000
[19:37:49.463]    __FlashLen=0x00000000
[19:37:49.463]    __FlashArg=0x00000000
[19:37:49.463]    __FlashOp=0x00000000
[19:37:49.464]    __Result=0x00000000
[19:37:49.464]    
[19:37:49.464]    // User-defined
[19:37:49.464]    DbgMCU_CR=0x00000007
[19:37:49.464]    DbgMCU_APB1_Fz=0x00000000
[19:37:49.465]    DbgMCU_APB2_Fz=0x00000000
[19:37:49.465]    TraceClk_Pin=0x00040002
[19:37:49.465]    TraceD0_Pin=0x00040003
[19:37:49.466]    TraceD1_Pin=0x00040004
[19:37:49.467]    TraceD2_Pin=0x00040005
[19:37:49.467]    TraceD3_Pin=0x00040006
[19:37:49.467]  </debugvars>
[19:37:49.467]  
[19:37:49.467]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:37:49.468]    <block atomic="false" info="">
[19:37:49.468]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:37:49.469]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:37:49.470]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:37:49.514]  
[19:37:49.514]  !!! E310 : Debug access failed - cannot write value 0x00000007 to address 0xE0042004 (accsize '4', AP '0x00000000')
[19:37:49.514]  
[19:37:49.518]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:37:49.519]    </block>
[19:37:49.519]  </sequence>
[19:37:49.519]  
[19:39:23.606]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:39:23.606]  
[19:39:23.653]  <debugvars>
[19:39:23.653]    // Pre-defined
[19:39:23.654]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:39:23.654]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:39:23.654]    __dp=0x00000000
[19:39:23.654]    __ap=0x00000000
[19:39:23.655]    __traceout=0x00000001      (SWO Trace)
[19:39:23.655]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:39:23.655]    __FlashAddr=0x00000000
[19:39:23.655]    __FlashLen=0x00000000
[19:39:23.656]    __FlashArg=0x00000000
[19:39:23.656]    __FlashOp=0x00000000
[19:39:23.657]    __Result=0x00000000
[19:39:23.657]    
[19:39:23.657]    // User-defined
[19:39:23.657]    DbgMCU_CR=0x00000007
[19:39:23.658]    DbgMCU_APB1_Fz=0x00000000
[19:39:23.658]    DbgMCU_APB2_Fz=0x00000000
[19:39:23.658]    TraceClk_Pin=0x00040002
[19:39:23.659]    TraceD0_Pin=0x00040003
[19:39:23.659]    TraceD1_Pin=0x00040004
[19:39:23.660]    TraceD2_Pin=0x00040005
[19:39:23.660]    TraceD3_Pin=0x00040006
[19:39:23.660]  </debugvars>
[19:39:23.661]  
[19:39:23.661]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:39:23.662]    <block atomic="false" info="">
[19:39:23.662]      Sequence("CheckID");
[19:39:23.662]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:39:23.662]          <block atomic="false" info="">
[19:39:23.662]            __var pidr1 = 0;
[19:39:23.662]              // -> [pidr1 <= 0x00000000]
[19:39:23.662]            __var pidr2 = 0;
[19:39:23.663]              // -> [pidr2 <= 0x00000000]
[19:39:23.663]            __var jep106id = 0;
[19:39:23.663]              // -> [jep106id <= 0x00000000]
[19:39:23.665]            __var ROMTableBase = 0;
[19:39:23.665]              // -> [ROMTableBase <= 0x00000000]
[19:39:23.665]            __ap = 0;      // AHB-AP
[19:39:23.665]              // -> [__ap <= 0x00000000]
[19:39:23.666]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:39:23.666]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.667]              // -> [ROMTableBase <= 0xE00FF000]
[19:39:23.667]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:39:23.668]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.669]              // -> [pidr1 <= 0x00000004]
[19:39:23.669]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:39:23.670]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.670]              // -> [pidr2 <= 0x0000000A]
[19:39:23.671]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:39:23.671]              // -> [jep106id <= 0x00000020]
[19:39:23.672]          </block>
[19:39:23.672]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:39:23.673]            // if-block "jep106id != 0x20"
[19:39:23.674]              // =>  FALSE
[19:39:23.674]            // skip if-block "jep106id != 0x20"
[19:39:23.675]          </control>
[19:39:23.675]        </sequence>
[19:39:23.675]    </block>
[19:39:23.676]  </sequence>
[19:39:23.676]  
[19:39:23.677]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:39:23.677]  
[19:39:23.677]  <debugvars>
[19:39:23.678]    // Pre-defined
[19:39:23.678]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:39:23.678]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:39:23.679]    __dp=0x00000000
[19:39:23.679]    __ap=0x00000000
[19:39:23.679]    __traceout=0x00000001      (SWO Trace)
[19:39:23.680]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:39:23.680]    __FlashAddr=0x00000000
[19:39:23.681]    __FlashLen=0x00000000
[19:39:23.681]    __FlashArg=0x00000000
[19:39:23.681]    __FlashOp=0x00000000
[19:39:23.682]    __Result=0x00000000
[19:39:23.682]    
[19:39:23.682]    // User-defined
[19:39:23.682]    DbgMCU_CR=0x00000007
[19:39:23.682]    DbgMCU_APB1_Fz=0x00000000
[19:39:23.683]    DbgMCU_APB2_Fz=0x00000000
[19:39:23.683]    TraceClk_Pin=0x00040002
[19:39:23.683]    TraceD0_Pin=0x00040003
[19:39:23.683]    TraceD1_Pin=0x00040004
[19:39:23.684]    TraceD2_Pin=0x00040005
[19:39:23.684]    TraceD3_Pin=0x00040006
[19:39:23.684]  </debugvars>
[19:39:23.684]  
[19:39:23.686]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:39:23.686]    <block atomic="false" info="">
[19:39:23.686]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:39:23.687]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.688]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:39:23.689]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.690]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:39:23.691]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.692]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:39:23.693]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.693]    </block>
[19:39:23.694]  </sequence>
[19:39:23.694]  
[19:39:23.746]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:39:23.746]  
[19:39:23.746]  <debugvars>
[19:39:23.747]    // Pre-defined
[19:39:23.747]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:39:23.748]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:39:23.748]    __dp=0x00000000
[19:39:23.748]    __ap=0x00000000
[19:39:23.749]    __traceout=0x00000001      (SWO Trace)
[19:39:23.749]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:39:23.750]    __FlashAddr=0x00000000
[19:39:23.750]    __FlashLen=0x00000000
[19:39:23.750]    __FlashArg=0x00000000
[19:39:23.750]    __FlashOp=0x00000000
[19:39:23.751]    __Result=0x00000000
[19:39:23.751]    
[19:39:23.751]    // User-defined
[19:39:23.751]    DbgMCU_CR=0x00000007
[19:39:23.751]    DbgMCU_APB1_Fz=0x00000000
[19:39:23.752]    DbgMCU_APB2_Fz=0x00000000
[19:39:23.752]    TraceClk_Pin=0x00040002
[19:39:23.753]    TraceD0_Pin=0x00040003
[19:39:23.753]    TraceD1_Pin=0x00040004
[19:39:23.753]    TraceD2_Pin=0x00040005
[19:39:23.753]    TraceD3_Pin=0x00040006
[19:39:23.754]  </debugvars>
[19:39:23.754]  
[19:39:23.754]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:39:23.754]    <block atomic="false" info="">
[19:39:23.755]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:39:23.755]        // -> [traceSWO <= 0x00000001]
[19:39:23.755]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:39:23.756]        // -> [traceTPIU <= 0x00000000]
[19:39:23.756]    </block>
[19:39:23.757]    <control if="traceSWO" while="" timeout="0" info="">
[19:39:23.757]      // if-block "traceSWO"
[19:39:23.757]        // =>  TRUE
[19:39:23.757]      <block atomic="false" info="">
[19:39:23.757]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:39:23.757]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:39:23.757]            <block atomic="false" info="">
[19:39:23.757]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:39:23.758]                // -> [dbgmcu_val <= 0x00000000]
[19:39:23.759]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:39:23.759]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:39:23.759]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:39:23.761]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.761]                // -> [dbgmcu_val <= 0x00000007]
[19:39:23.761]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:39:23.761]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:39:23.761]              Sequence("ConfigureTraceSWOPin");
[19:39:23.762]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:39:23.762]                  <block atomic="false" info="">
[19:39:23.762]                    __var pin     = 0;
[19:39:23.762]                      // -> [pin <= 0x00000000]
[19:39:23.764]                    __var port    = 0;
[19:39:23.764]                      // -> [port <= 0x00000000]
[19:39:23.764]                    __var portAdr = 0;
[19:39:23.764]                      // -> [portAdr <= 0x00000000]
[19:39:23.764]                    __var pos     = 0;
[19:39:23.764]                      // -> [pos <= 0x00000000]
[19:39:23.764]                    __var SWO_Pin = 0x00010003;          // PB3
[19:39:23.764]                      // -> [SWO_Pin <= 0x00010003]
[19:39:23.765]                  </block>
[19:39:23.765]                  <block atomic="false" info="configure SWO">
[19:39:23.765]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:39:23.765]                      // -> [pin <= 0x00000003]
[19:39:23.767]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:39:23.767]                      // -> [port <= 0x00000001]
[19:39:23.767]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:39:23.768]                      // -> [portAdr <= 0x40020400]
[19:39:23.768]                    pos = pin * 2;
[19:39:23.768]                      // -> [pos <= 0x00000006]
[19:39:23.769]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:39:23.770]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.772]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.772]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:39:23.773]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.775]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.775]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:39:23.776]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.778]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.779]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:39:23.780]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.782]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.782]                  </block>
[19:39:23.782]                  <control if="pin <  8" while="" timeout="0" info="">
[19:39:23.783]                    // if-block "pin <  8"
[19:39:23.783]                      // =>  TRUE
[19:39:23.784]                    <block atomic="false" info="">
[19:39:23.784]                      pos = ((pin    ) & 7) * 4;
[19:39:23.784]                        // -> [pos <= 0x0000000C]
[19:39:23.785]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:39:23.786]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.787]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.787]                    </block>
[19:39:23.788]                    // end if-block "pin <  8"
[19:39:23.788]                  </control>
[19:39:23.788]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:39:23.788]                    // if-block "pin >= 8"
[19:39:23.788]                      // =>  FALSE
[19:39:23.789]                    // skip if-block "pin >= 8"
[19:39:23.789]                  </control>
[19:39:23.789]                </sequence>
[19:39:23.790]            </block>
[19:39:23.790]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:39:23.791]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:39:23.792]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.793]            </block>
[19:39:23.793]          </sequence>
[19:39:23.794]      </block>
[19:39:23.794]      // end if-block "traceSWO"
[19:39:23.794]    </control>
[19:39:23.794]    <control if="traceTPIU" while="" timeout="0" info="">
[19:39:23.795]      // if-block "traceTPIU"
[19:39:23.795]        // =>  FALSE
[19:39:23.796]      // skip if-block "traceTPIU"
[19:39:23.796]    </control>
[19:39:23.796]  </sequence>
[19:39:23.797]  
[19:39:23.817]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:39:23.817]  
[19:39:23.817]  <debugvars>
[19:39:23.817]    // Pre-defined
[19:39:23.817]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:39:23.819]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:39:23.819]    __dp=0x00000000
[19:39:23.820]    __ap=0x00000000
[19:39:23.820]    __traceout=0x00000001      (SWO Trace)
[19:39:23.820]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:39:23.820]    __FlashAddr=0x00000000
[19:39:23.821]    __FlashLen=0x00000000
[19:39:23.821]    __FlashArg=0x00000000
[19:39:23.821]    __FlashOp=0x00000000
[19:39:23.822]    __Result=0x00000000
[19:39:23.822]    
[19:39:23.822]    // User-defined
[19:39:23.823]    DbgMCU_CR=0x00000007
[19:39:23.823]    DbgMCU_APB1_Fz=0x00000000
[19:39:23.823]    DbgMCU_APB2_Fz=0x00000000
[19:39:23.824]    TraceClk_Pin=0x00040002
[19:39:23.825]    TraceD0_Pin=0x00040003
[19:39:23.825]    TraceD1_Pin=0x00040004
[19:39:23.825]    TraceD2_Pin=0x00040005
[19:39:23.826]    TraceD3_Pin=0x00040006
[19:39:23.826]  </debugvars>
[19:39:23.826]  
[19:39:23.826]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:39:23.826]    <block atomic="false" info="">
[19:39:23.826]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:39:23.827]        // -> [traceSWO <= 0x00000001]
[19:39:23.827]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:39:23.827]        // -> [traceTPIU <= 0x00000000]
[19:39:23.827]    </block>
[19:39:23.828]    <control if="traceSWO" while="" timeout="0" info="">
[19:39:23.829]      // if-block "traceSWO"
[19:39:23.829]        // =>  TRUE
[19:39:23.829]      <block atomic="false" info="">
[19:39:23.830]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:39:23.830]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:39:23.831]            <block atomic="false" info="">
[19:39:23.831]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:39:23.831]                // -> [dbgmcu_val <= 0x00000000]
[19:39:23.831]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:39:23.831]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:39:23.831]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:39:23.833]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.834]                // -> [dbgmcu_val <= 0x00000007]
[19:39:23.834]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:39:23.834]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:39:23.835]              Sequence("ConfigureTraceSWOPin");
[19:39:23.835]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:39:23.835]                  <block atomic="false" info="">
[19:39:23.835]                    __var pin     = 0;
[19:39:23.836]                      // -> [pin <= 0x00000000]
[19:39:23.836]                    __var port    = 0;
[19:39:23.836]                      // -> [port <= 0x00000000]
[19:39:23.836]                    __var portAdr = 0;
[19:39:23.837]                      // -> [portAdr <= 0x00000000]
[19:39:23.837]                    __var pos     = 0;
[19:39:23.837]                      // -> [pos <= 0x00000000]
[19:39:23.838]                    __var SWO_Pin = 0x00010003;          // PB3
[19:39:23.838]                      // -> [SWO_Pin <= 0x00010003]
[19:39:23.838]                  </block>
[19:39:23.839]                  <block atomic="false" info="configure SWO">
[19:39:23.839]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:39:23.839]                      // -> [pin <= 0x00000003]
[19:39:23.839]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:39:23.840]                      // -> [port <= 0x00000001]
[19:39:23.840]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:39:23.840]                      // -> [portAdr <= 0x40020400]
[19:39:23.840]                    pos = pin * 2;
[19:39:23.841]                      // -> [pos <= 0x00000006]
[19:39:23.841]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:39:23.843]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.844]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.844]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:39:23.846]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.847]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.848]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:39:23.849]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.850]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.850]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:39:23.852]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.853]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.854]                  </block>
[19:39:23.854]                  <control if="pin <  8" while="" timeout="0" info="">
[19:39:23.854]                    // if-block "pin <  8"
[19:39:23.854]                      // =>  TRUE
[19:39:23.854]                    <block atomic="false" info="">
[19:39:23.855]                      pos = ((pin    ) & 7) * 4;
[19:39:23.855]                        // -> [pos <= 0x0000000C]
[19:39:23.856]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:39:23.857]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.858]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.859]                    </block>
[19:39:23.859]                    // end if-block "pin <  8"
[19:39:23.859]                  </control>
[19:39:23.859]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:39:23.859]                    // if-block "pin >= 8"
[19:39:23.859]                      // =>  FALSE
[19:39:23.859]                    // skip if-block "pin >= 8"
[19:39:23.859]                  </control>
[19:39:23.859]                </sequence>
[19:39:23.861]            </block>
[19:39:23.861]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:39:23.862]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:39:23.863]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:23.863]            </block>
[19:39:23.864]          </sequence>
[19:39:23.864]      </block>
[19:39:23.865]      // end if-block "traceSWO"
[19:39:23.865]    </control>
[19:39:23.865]    <control if="traceTPIU" while="" timeout="0" info="">
[19:39:23.865]      // if-block "traceTPIU"
[19:39:23.866]        // =>  FALSE
[19:39:23.866]      // skip if-block "traceTPIU"
[19:39:23.867]    </control>
[19:39:23.867]  </sequence>
[19:39:23.867]  
[19:39:24.377]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:39:24.377]  
[19:39:24.423]  <debugvars>
[19:39:24.423]    // Pre-defined
[19:39:24.424]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:39:24.424]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:39:24.424]    __dp=0x00000000
[19:39:24.424]    __ap=0x00000000
[19:39:24.425]    __traceout=0x00000001      (SWO Trace)
[19:39:24.425]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:39:24.425]    __FlashAddr=0x00000000
[19:39:24.425]    __FlashLen=0x00000000
[19:39:24.425]    __FlashArg=0x00000000
[19:39:24.426]    __FlashOp=0x00000000
[19:39:24.426]    __Result=0x00000000
[19:39:24.426]    
[19:39:24.426]    // User-defined
[19:39:24.426]    DbgMCU_CR=0x00000007
[19:39:24.427]    DbgMCU_APB1_Fz=0x00000000
[19:39:24.427]    DbgMCU_APB2_Fz=0x00000000
[19:39:24.427]    TraceClk_Pin=0x00040002
[19:39:24.427]    TraceD0_Pin=0x00040003
[19:39:24.428]    TraceD1_Pin=0x00040004
[19:39:24.429]    TraceD2_Pin=0x00040005
[19:39:24.429]    TraceD3_Pin=0x00040006
[19:39:24.429]  </debugvars>
[19:39:24.429]  
[19:39:24.430]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:39:24.430]    <block atomic="false" info="">
[19:39:24.431]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:39:24.431]        // -> [traceSWO <= 0x00000001]
[19:39:24.432]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:39:24.432]        // -> [traceTPIU <= 0x00000000]
[19:39:24.432]    </block>
[19:39:24.433]    <control if="traceSWO" while="" timeout="0" info="">
[19:39:24.433]      // if-block "traceSWO"
[19:39:24.433]        // =>  TRUE
[19:39:24.434]      <block atomic="false" info="">
[19:39:24.434]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:39:24.434]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:39:24.434]            <block atomic="false" info="">
[19:39:24.434]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:39:24.434]                // -> [dbgmcu_val <= 0x00000000]
[19:39:24.435]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:39:24.435]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:39:24.435]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:39:24.437]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:39:24.437]                // -> [dbgmcu_val <= 0x00000007]
[19:39:24.438]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:39:24.438]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:39:24.438]              Sequence("ConfigureTraceSWOPin");
[19:39:24.438]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:39:24.439]                  <block atomic="false" info="">
[19:39:24.439]                    __var pin     = 0;
[19:39:24.439]                      // -> [pin <= 0x00000000]
[19:39:24.439]                    __var port    = 0;
[19:39:24.439]                      // -> [port <= 0x00000000]
[19:39:24.440]                    __var portAdr = 0;
[19:39:24.440]                      // -> [portAdr <= 0x00000000]
[19:39:24.440]                    __var pos     = 0;
[19:39:24.440]                      // -> [pos <= 0x00000000]
[19:39:24.441]                    __var SWO_Pin = 0x00010003;          // PB3
[19:39:24.441]                      // -> [SWO_Pin <= 0x00010003]
[19:39:24.441]                  </block>
[19:39:24.441]                  <block atomic="false" info="configure SWO">
[19:39:24.441]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:39:24.442]                      // -> [pin <= 0x00000003]
[19:39:24.442]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:39:24.443]                      // -> [port <= 0x00000001]
[19:39:24.443]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:39:24.444]                      // -> [portAdr <= 0x40020400]
[19:39:24.444]                    pos = pin * 2;
[19:39:24.444]                      // -> [pos <= 0x00000006]
[19:39:24.444]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:39:24.446]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:39:24.447]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:24.447]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:39:24.449]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:39:24.450]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:24.450]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:39:24.451]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:39:24.454]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:24.454]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:39:24.455]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:39:24.456]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:24.457]                  </block>
[19:39:24.457]                  <control if="pin <  8" while="" timeout="0" info="">
[19:39:24.457]                    // if-block "pin <  8"
[19:39:24.458]                      // =>  TRUE
[19:39:24.458]                    <block atomic="false" info="">
[19:39:24.458]                      pos = ((pin    ) & 7) * 4;
[19:39:24.459]                        // -> [pos <= 0x0000000C]
[19:39:24.459]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:39:24.461]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:39:24.462]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:24.463]                    </block>
[19:39:24.463]                    // end if-block "pin <  8"
[19:39:24.463]                  </control>
[19:39:24.463]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:39:24.463]                    // if-block "pin >= 8"
[19:39:24.463]                      // =>  FALSE
[19:39:24.463]                    // skip if-block "pin >= 8"
[19:39:24.463]                  </control>
[19:39:24.463]                </sequence>
[19:39:24.465]            </block>
[19:39:24.465]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:39:24.465]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:39:24.466]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:24.466]            </block>
[19:39:24.467]          </sequence>
[19:39:24.467]      </block>
[19:39:24.467]      // end if-block "traceSWO"
[19:39:24.468]    </control>
[19:39:24.468]    <control if="traceTPIU" while="" timeout="0" info="">
[19:39:24.468]      // if-block "traceTPIU"
[19:39:24.468]        // =>  FALSE
[19:39:24.468]      // skip if-block "traceTPIU"
[19:39:24.468]    </control>
[19:39:24.468]  </sequence>
[19:39:24.468]  
[19:39:42.788]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:39:42.788]  
[19:39:42.837]  <debugvars>
[19:39:42.837]    // Pre-defined
[19:39:42.837]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:39:42.837]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:39:42.838]    __dp=0x00000000
[19:39:42.839]    __ap=0x00000000
[19:39:42.840]    __traceout=0x00000001      (SWO Trace)
[19:39:42.840]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:39:42.841]    __FlashAddr=0x00000000
[19:39:42.841]    __FlashLen=0x00000000
[19:39:42.842]    __FlashArg=0x00000000
[19:39:42.842]    __FlashOp=0x00000000
[19:39:42.843]    __Result=0x00000000
[19:39:42.843]    
[19:39:42.843]    // User-defined
[19:39:42.843]    DbgMCU_CR=0x00000007
[19:39:42.843]    DbgMCU_APB1_Fz=0x00000000
[19:39:42.844]    DbgMCU_APB2_Fz=0x00000000
[19:39:42.844]    TraceClk_Pin=0x00040002
[19:39:42.844]    TraceD0_Pin=0x00040003
[19:39:42.845]    TraceD1_Pin=0x00040004
[19:39:42.845]    TraceD2_Pin=0x00040005
[19:39:42.845]    TraceD3_Pin=0x00040006
[19:39:42.845]  </debugvars>
[19:39:42.846]  
[19:39:42.846]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:39:42.846]    <block atomic="false" info="">
[19:39:42.846]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:39:42.846]        // -> [traceSWO <= 0x00000001]
[19:39:42.847]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:39:42.847]        // -> [traceTPIU <= 0x00000000]
[19:39:42.847]    </block>
[19:39:42.847]    <control if="traceSWO" while="" timeout="0" info="">
[19:39:42.847]      // if-block "traceSWO"
[19:39:42.848]        // =>  TRUE
[19:39:42.848]      <block atomic="false" info="">
[19:39:42.848]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:39:42.848]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:39:42.849]            <block atomic="false" info="">
[19:39:42.850]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:39:42.850]                // -> [dbgmcu_val <= 0x00000000]
[19:39:42.850]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:39:42.850]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:39:42.850]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:39:42.852]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:39:42.852]                // -> [dbgmcu_val <= 0x00000007]
[19:39:42.852]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:39:42.852]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:39:42.853]              Sequence("ConfigureTraceSWOPin");
[19:39:42.853]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:39:42.853]                  <block atomic="false" info="">
[19:39:42.853]                    __var pin     = 0;
[19:39:42.854]                      // -> [pin <= 0x00000000]
[19:39:42.854]                    __var port    = 0;
[19:39:42.854]                      // -> [port <= 0x00000000]
[19:39:42.854]                    __var portAdr = 0;
[19:39:42.854]                      // -> [portAdr <= 0x00000000]
[19:39:42.855]                    __var pos     = 0;
[19:39:42.855]                      // -> [pos <= 0x00000000]
[19:39:42.855]                    __var SWO_Pin = 0x00010003;          // PB3
[19:39:42.855]                      // -> [SWO_Pin <= 0x00010003]
[19:39:42.856]                  </block>
[19:39:42.856]                  <block atomic="false" info="configure SWO">
[19:39:42.856]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:39:42.857]                      // -> [pin <= 0x00000003]
[19:39:42.857]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:39:42.858]                      // -> [port <= 0x00000001]
[19:39:42.858]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:39:42.858]                      // -> [portAdr <= 0x40020400]
[19:39:42.859]                    pos = pin * 2;
[19:39:42.859]                      // -> [pos <= 0x00000006]
[19:39:42.859]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:39:42.861]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:39:42.862]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:42.862]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:39:42.864]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:39:42.866]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:42.866]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:39:42.867]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:39:42.868]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:42.869]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:39:42.869]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:39:42.872]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:42.872]                  </block>
[19:39:42.872]                  <control if="pin <  8" while="" timeout="0" info="">
[19:39:42.873]                    // if-block "pin <  8"
[19:39:42.873]                      // =>  TRUE
[19:39:42.873]                    <block atomic="false" info="">
[19:39:42.873]                      pos = ((pin    ) & 7) * 4;
[19:39:42.874]                        // -> [pos <= 0x0000000C]
[19:39:42.874]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:39:42.875]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:39:42.876]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:42.877]                    </block>
[19:39:42.877]                    // end if-block "pin <  8"
[19:39:42.877]                  </control>
[19:39:42.877]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:39:42.878]                    // if-block "pin >= 8"
[19:39:42.878]                      // =>  FALSE
[19:39:42.878]                    // skip if-block "pin >= 8"
[19:39:42.878]                  </control>
[19:39:42.878]                </sequence>
[19:39:42.879]            </block>
[19:39:42.879]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:39:42.879]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:39:42.880]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:42.880]            </block>
[19:39:42.881]          </sequence>
[19:39:42.881]      </block>
[19:39:42.881]      // end if-block "traceSWO"
[19:39:42.881]    </control>
[19:39:42.881]    <control if="traceTPIU" while="" timeout="0" info="">
[19:39:42.881]      // if-block "traceTPIU"
[19:39:42.883]        // =>  FALSE
[19:39:42.883]      // skip if-block "traceTPIU"
[19:39:42.883]    </control>
[19:39:42.883]  </sequence>
[19:39:42.883]  
[19:39:59.531]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:39:59.531]  
[19:39:59.580]  <debugvars>
[19:39:59.580]    // Pre-defined
[19:39:59.580]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:39:59.581]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:39:59.581]    __dp=0x00000000
[19:39:59.581]    __ap=0x00000000
[19:39:59.581]    __traceout=0x00000001      (SWO Trace)
[19:39:59.581]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:39:59.582]    __FlashAddr=0x00000000
[19:39:59.582]    __FlashLen=0x00000000
[19:39:59.582]    __FlashArg=0x00000000
[19:39:59.582]    __FlashOp=0x00000000
[19:39:59.582]    __Result=0x00000000
[19:39:59.583]    
[19:39:59.583]    // User-defined
[19:39:59.583]    DbgMCU_CR=0x00000007
[19:39:59.583]    DbgMCU_APB1_Fz=0x00000000
[19:39:59.583]    DbgMCU_APB2_Fz=0x00000000
[19:39:59.583]    TraceClk_Pin=0x00040002
[19:39:59.583]    TraceD0_Pin=0x00040003
[19:39:59.583]    TraceD1_Pin=0x00040004
[19:39:59.584]    TraceD2_Pin=0x00040005
[19:39:59.584]    TraceD3_Pin=0x00040006
[19:39:59.584]  </debugvars>
[19:39:59.584]  
[19:39:59.584]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:39:59.584]    <block atomic="false" info="">
[19:39:59.584]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:39:59.585]        // -> [traceSWO <= 0x00000001]
[19:39:59.585]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:39:59.585]        // -> [traceTPIU <= 0x00000000]
[19:39:59.585]    </block>
[19:39:59.585]    <control if="traceSWO" while="" timeout="0" info="">
[19:39:59.586]      // if-block "traceSWO"
[19:39:59.586]        // =>  TRUE
[19:39:59.586]      <block atomic="false" info="">
[19:39:59.586]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:39:59.586]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:39:59.587]            <block atomic="false" info="">
[19:39:59.587]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:39:59.587]                // -> [dbgmcu_val <= 0x00000000]
[19:39:59.587]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:39:59.587]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:39:59.588]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:39:59.588]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:39:59.589]                // -> [dbgmcu_val <= 0x00000007]
[19:39:59.589]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:39:59.589]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:39:59.589]              Sequence("ConfigureTraceSWOPin");
[19:39:59.589]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:39:59.589]                  <block atomic="false" info="">
[19:39:59.589]                    __var pin     = 0;
[19:39:59.590]                      // -> [pin <= 0x00000000]
[19:39:59.590]                    __var port    = 0;
[19:39:59.590]                      // -> [port <= 0x00000000]
[19:39:59.590]                    __var portAdr = 0;
[19:39:59.590]                      // -> [portAdr <= 0x00000000]
[19:39:59.590]                    __var pos     = 0;
[19:39:59.590]                      // -> [pos <= 0x00000000]
[19:39:59.591]                    __var SWO_Pin = 0x00010003;          // PB3
[19:39:59.591]                      // -> [SWO_Pin <= 0x00010003]
[19:39:59.591]                  </block>
[19:39:59.591]                  <block atomic="false" info="configure SWO">
[19:39:59.591]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:39:59.591]                      // -> [pin <= 0x00000003]
[19:39:59.592]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:39:59.592]                      // -> [port <= 0x00000001]
[19:39:59.592]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:39:59.592]                      // -> [portAdr <= 0x40020400]
[19:39:59.592]                    pos = pin * 2;
[19:39:59.592]                      // -> [pos <= 0x00000006]
[19:39:59.592]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:39:59.593]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:39:59.594]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:59.594]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:39:59.595]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:39:59.597]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:59.598]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:39:59.598]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:39:59.599]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:59.600]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:39:59.600]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:39:59.601]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:59.602]                  </block>
[19:39:59.602]                  <control if="pin <  8" while="" timeout="0" info="">
[19:39:59.602]                    // if-block "pin <  8"
[19:39:59.602]                      // =>  TRUE
[19:39:59.602]                    <block atomic="false" info="">
[19:39:59.602]                      pos = ((pin    ) & 7) * 4;
[19:39:59.603]                        // -> [pos <= 0x0000000C]
[19:39:59.603]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:39:59.604]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:39:59.605]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:59.606]                    </block>
[19:39:59.606]                    // end if-block "pin <  8"
[19:39:59.607]                  </control>
[19:39:59.607]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:39:59.607]                    // if-block "pin >= 8"
[19:39:59.607]                      // =>  FALSE
[19:39:59.607]                    // skip if-block "pin >= 8"
[19:39:59.608]                  </control>
[19:39:59.608]                </sequence>
[19:39:59.608]            </block>
[19:39:59.608]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:39:59.609]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:39:59.609]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:39:59.610]            </block>
[19:39:59.610]          </sequence>
[19:39:59.610]      </block>
[19:39:59.610]      // end if-block "traceSWO"
[19:39:59.610]    </control>
[19:39:59.611]    <control if="traceTPIU" while="" timeout="0" info="">
[19:39:59.611]      // if-block "traceTPIU"
[19:39:59.611]        // =>  FALSE
[19:39:59.611]      // skip if-block "traceTPIU"
[19:39:59.611]    </control>
[19:39:59.612]  </sequence>
[19:39:59.612]  
[19:40:00.216]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:40:00.216]  
[19:40:00.263]  <debugvars>
[19:40:00.264]    // Pre-defined
[19:40:00.264]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:00.264]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:40:00.264]    __dp=0x00000000
[19:40:00.265]    __ap=0x00000000
[19:40:00.265]    __traceout=0x00000001      (SWO Trace)
[19:40:00.265]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:00.266]    __FlashAddr=0x00000000
[19:40:00.266]    __FlashLen=0x00000000
[19:40:00.266]    __FlashArg=0x00000000
[19:40:00.266]    __FlashOp=0x00000000
[19:40:00.267]    __Result=0x00000000
[19:40:00.267]    
[19:40:00.267]    // User-defined
[19:40:00.267]    DbgMCU_CR=0x00000007
[19:40:00.267]    DbgMCU_APB1_Fz=0x00000000
[19:40:00.267]    DbgMCU_APB2_Fz=0x00000000
[19:40:00.267]    TraceClk_Pin=0x00040002
[19:40:00.267]    TraceD0_Pin=0x00040003
[19:40:00.267]    TraceD1_Pin=0x00040004
[19:40:00.267]    TraceD2_Pin=0x00040005
[19:40:00.267]    TraceD3_Pin=0x00040006
[19:40:00.268]  </debugvars>
[19:40:00.268]  
[19:40:00.268]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:40:00.268]    <block atomic="false" info="">
[19:40:00.268]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:40:00.269]        // -> [traceSWO <= 0x00000001]
[19:40:00.269]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:40:00.269]        // -> [traceTPIU <= 0x00000000]
[19:40:00.269]    </block>
[19:40:00.269]    <control if="traceSWO" while="" timeout="0" info="">
[19:40:00.269]      // if-block "traceSWO"
[19:40:00.269]        // =>  TRUE
[19:40:00.270]      <block atomic="false" info="">
[19:40:00.270]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:40:00.270]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:40:00.270]            <block atomic="false" info="">
[19:40:00.270]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:40:00.270]                // -> [dbgmcu_val <= 0x00000000]
[19:40:00.271]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:40:00.271]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:40:00.271]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:40:00.272]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.272]                // -> [dbgmcu_val <= 0x00000007]
[19:40:00.272]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:40:00.272]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:40:00.272]              Sequence("ConfigureTraceSWOPin");
[19:40:00.272]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:40:00.273]                  <block atomic="false" info="">
[19:40:00.273]                    __var pin     = 0;
[19:40:00.273]                      // -> [pin <= 0x00000000]
[19:40:00.273]                    __var port    = 0;
[19:40:00.273]                      // -> [port <= 0x00000000]
[19:40:00.273]                    __var portAdr = 0;
[19:40:00.273]                      // -> [portAdr <= 0x00000000]
[19:40:00.275]                    __var pos     = 0;
[19:40:00.275]                      // -> [pos <= 0x00000000]
[19:40:00.275]                    __var SWO_Pin = 0x00010003;          // PB3
[19:40:00.275]                      // -> [SWO_Pin <= 0x00010003]
[19:40:00.275]                  </block>
[19:40:00.275]                  <block atomic="false" info="configure SWO">
[19:40:00.275]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:40:00.276]                      // -> [pin <= 0x00000003]
[19:40:00.276]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:40:00.276]                      // -> [port <= 0x00000001]
[19:40:00.276]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:40:00.276]                      // -> [portAdr <= 0x40020400]
[19:40:00.276]                    pos = pin * 2;
[19:40:00.276]                      // -> [pos <= 0x00000006]
[19:40:00.277]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:40:00.278]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.278]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.279]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:40:00.280]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.280]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.281]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:40:00.281]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.282]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.283]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:40:00.284]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.285]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.286]                  </block>
[19:40:00.286]                  <control if="pin <  8" while="" timeout="0" info="">
[19:40:00.286]                    // if-block "pin <  8"
[19:40:00.286]                      // =>  TRUE
[19:40:00.286]                    <block atomic="false" info="">
[19:40:00.287]                      pos = ((pin    ) & 7) * 4;
[19:40:00.287]                        // -> [pos <= 0x0000000C]
[19:40:00.287]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:40:00.288]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.289]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.290]                    </block>
[19:40:00.290]                    // end if-block "pin <  8"
[19:40:00.290]                  </control>
[19:40:00.290]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:40:00.290]                    // if-block "pin >= 8"
[19:40:00.291]                      // =>  FALSE
[19:40:00.291]                    // skip if-block "pin >= 8"
[19:40:00.291]                  </control>
[19:40:00.291]                </sequence>
[19:40:00.291]            </block>
[19:40:00.292]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:40:00.292]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:40:00.293]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.293]            </block>
[19:40:00.293]          </sequence>
[19:40:00.293]      </block>
[19:40:00.293]      // end if-block "traceSWO"
[19:40:00.294]    </control>
[19:40:00.295]    <control if="traceTPIU" while="" timeout="0" info="">
[19:40:00.295]      // if-block "traceTPIU"
[19:40:00.295]        // =>  FALSE
[19:40:00.295]      // skip if-block "traceTPIU"
[19:40:00.295]    </control>
[19:40:00.295]  </sequence>
[19:40:00.295]  
[19:40:00.742]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:40:00.742]  
[19:40:00.791]  <debugvars>
[19:40:00.791]    // Pre-defined
[19:40:00.791]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:00.791]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:40:00.792]    __dp=0x00000000
[19:40:00.792]    __ap=0x00000000
[19:40:00.792]    __traceout=0x00000001      (SWO Trace)
[19:40:00.792]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:00.793]    __FlashAddr=0x00000000
[19:40:00.793]    __FlashLen=0x00000000
[19:40:00.793]    __FlashArg=0x00000000
[19:40:00.794]    __FlashOp=0x00000000
[19:40:00.794]    __Result=0x00000000
[19:40:00.794]    
[19:40:00.794]    // User-defined
[19:40:00.794]    DbgMCU_CR=0x00000007
[19:40:00.794]    DbgMCU_APB1_Fz=0x00000000
[19:40:00.794]    DbgMCU_APB2_Fz=0x00000000
[19:40:00.794]    TraceClk_Pin=0x00040002
[19:40:00.794]    TraceD0_Pin=0x00040003
[19:40:00.795]    TraceD1_Pin=0x00040004
[19:40:00.795]    TraceD2_Pin=0x00040005
[19:40:00.795]    TraceD3_Pin=0x00040006
[19:40:00.795]  </debugvars>
[19:40:00.795]  
[19:40:00.795]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:40:00.795]    <block atomic="false" info="">
[19:40:00.796]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:40:00.796]        // -> [traceSWO <= 0x00000001]
[19:40:00.796]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:40:00.796]        // -> [traceTPIU <= 0x00000000]
[19:40:00.797]    </block>
[19:40:00.797]    <control if="traceSWO" while="" timeout="0" info="">
[19:40:00.797]      // if-block "traceSWO"
[19:40:00.797]        // =>  TRUE
[19:40:00.798]      <block atomic="false" info="">
[19:40:00.798]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:40:00.798]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:40:00.798]            <block atomic="false" info="">
[19:40:00.799]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:40:00.799]                // -> [dbgmcu_val <= 0x00000000]
[19:40:00.799]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:40:00.799]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:40:00.799]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:40:00.800]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.800]                // -> [dbgmcu_val <= 0x00000007]
[19:40:00.800]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:40:00.801]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:40:00.801]              Sequence("ConfigureTraceSWOPin");
[19:40:00.801]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:40:00.801]                  <block atomic="false" info="">
[19:40:00.801]                    __var pin     = 0;
[19:40:00.801]                      // -> [pin <= 0x00000000]
[19:40:00.801]                    __var port    = 0;
[19:40:00.802]                      // -> [port <= 0x00000000]
[19:40:00.802]                    __var portAdr = 0;
[19:40:00.802]                      // -> [portAdr <= 0x00000000]
[19:40:00.802]                    __var pos     = 0;
[19:40:00.802]                      // -> [pos <= 0x00000000]
[19:40:00.802]                    __var SWO_Pin = 0x00010003;          // PB3
[19:40:00.802]                      // -> [SWO_Pin <= 0x00010003]
[19:40:00.803]                  </block>
[19:40:00.803]                  <block atomic="false" info="configure SWO">
[19:40:00.803]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:40:00.803]                      // -> [pin <= 0x00000003]
[19:40:00.803]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:40:00.803]                      // -> [port <= 0x00000001]
[19:40:00.803]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:40:00.804]                      // -> [portAdr <= 0x40020400]
[19:40:00.804]                    pos = pin * 2;
[19:40:00.804]                      // -> [pos <= 0x00000006]
[19:40:00.804]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:40:00.805]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.806]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.807]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:40:00.807]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.808]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.809]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:40:00.809]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.810]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.811]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:40:00.811]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.812]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.812]                  </block>
[19:40:00.812]                  <control if="pin <  8" while="" timeout="0" info="">
[19:40:00.813]                    // if-block "pin <  8"
[19:40:00.813]                      // =>  TRUE
[19:40:00.813]                    <block atomic="false" info="">
[19:40:00.813]                      pos = ((pin    ) & 7) * 4;
[19:40:00.813]                        // -> [pos <= 0x0000000C]
[19:40:00.813]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:40:00.814]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.815]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.815]                    </block>
[19:40:00.815]                    // end if-block "pin <  8"
[19:40:00.815]                  </control>
[19:40:00.815]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:40:00.815]                    // if-block "pin >= 8"
[19:40:00.815]                      // =>  FALSE
[19:40:00.815]                    // skip if-block "pin >= 8"
[19:40:00.815]                  </control>
[19:40:00.816]                </sequence>
[19:40:00.817]            </block>
[19:40:00.817]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:40:00.817]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:40:00.817]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:00.818]            </block>
[19:40:00.818]          </sequence>
[19:40:00.818]      </block>
[19:40:00.818]      // end if-block "traceSWO"
[19:40:00.818]    </control>
[19:40:00.818]    <control if="traceTPIU" while="" timeout="0" info="">
[19:40:00.818]      // if-block "traceTPIU"
[19:40:00.819]        // =>  FALSE
[19:40:00.819]      // skip if-block "traceTPIU"
[19:40:00.819]    </control>
[19:40:00.819]  </sequence>
[19:40:00.819]  
[19:40:01.324]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:40:01.324]  
[19:40:01.371]  <debugvars>
[19:40:01.371]    // Pre-defined
[19:40:01.371]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:01.372]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:40:01.372]    __dp=0x00000000
[19:40:01.372]    __ap=0x00000000
[19:40:01.372]    __traceout=0x00000001      (SWO Trace)
[19:40:01.373]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:01.373]    __FlashAddr=0x00000000
[19:40:01.373]    __FlashLen=0x00000000
[19:40:01.373]    __FlashArg=0x00000000
[19:40:01.373]    __FlashOp=0x00000000
[19:40:01.374]    __Result=0x00000000
[19:40:01.374]    
[19:40:01.374]    // User-defined
[19:40:01.374]    DbgMCU_CR=0x00000007
[19:40:01.374]    DbgMCU_APB1_Fz=0x00000000
[19:40:01.374]    DbgMCU_APB2_Fz=0x00000000
[19:40:01.374]    TraceClk_Pin=0x00040002
[19:40:01.376]    TraceD0_Pin=0x00040003
[19:40:01.376]    TraceD1_Pin=0x00040004
[19:40:01.376]    TraceD2_Pin=0x00040005
[19:40:01.376]    TraceD3_Pin=0x00040006
[19:40:01.376]  </debugvars>
[19:40:01.377]  
[19:40:01.377]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:40:01.377]    <block atomic="false" info="">
[19:40:01.377]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:40:01.378]        // -> [traceSWO <= 0x00000001]
[19:40:01.378]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:40:01.378]        // -> [traceTPIU <= 0x00000000]
[19:40:01.378]    </block>
[19:40:01.378]    <control if="traceSWO" while="" timeout="0" info="">
[19:40:01.379]      // if-block "traceSWO"
[19:40:01.379]        // =>  TRUE
[19:40:01.379]      <block atomic="false" info="">
[19:40:01.379]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:40:01.379]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:40:01.379]            <block atomic="false" info="">
[19:40:01.379]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:40:01.380]                // -> [dbgmcu_val <= 0x00000000]
[19:40:01.380]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:40:01.380]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:40:01.380]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:40:01.381]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.381]                // -> [dbgmcu_val <= 0x00000007]
[19:40:01.381]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:40:01.381]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:40:01.382]              Sequence("ConfigureTraceSWOPin");
[19:40:01.382]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:40:01.382]                  <block atomic="false" info="">
[19:40:01.382]                    __var pin     = 0;
[19:40:01.383]                      // -> [pin <= 0x00000000]
[19:40:01.383]                    __var port    = 0;
[19:40:01.383]                      // -> [port <= 0x00000000]
[19:40:01.383]                    __var portAdr = 0;
[19:40:01.384]                      // -> [portAdr <= 0x00000000]
[19:40:01.384]                    __var pos     = 0;
[19:40:01.384]                      // -> [pos <= 0x00000000]
[19:40:01.384]                    __var SWO_Pin = 0x00010003;          // PB3
[19:40:01.385]                      // -> [SWO_Pin <= 0x00010003]
[19:40:01.385]                  </block>
[19:40:01.385]                  <block atomic="false" info="configure SWO">
[19:40:01.385]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:40:01.385]                      // -> [pin <= 0x00000003]
[19:40:01.385]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:40:01.386]                      // -> [port <= 0x00000001]
[19:40:01.386]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:40:01.386]                      // -> [portAdr <= 0x40020400]
[19:40:01.386]                    pos = pin * 2;
[19:40:01.386]                      // -> [pos <= 0x00000006]
[19:40:01.386]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:40:01.387]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.388]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.388]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:40:01.389]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.391]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.392]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:40:01.392]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.393]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.394]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:40:01.394]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.396]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.396]                  </block>
[19:40:01.396]                  <control if="pin <  8" while="" timeout="0" info="">
[19:40:01.396]                    // if-block "pin <  8"
[19:40:01.396]                      // =>  TRUE
[19:40:01.396]                    <block atomic="false" info="">
[19:40:01.396]                      pos = ((pin    ) & 7) * 4;
[19:40:01.396]                        // -> [pos <= 0x0000000C]
[19:40:01.398]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:40:01.398]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.399]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.400]                    </block>
[19:40:01.400]                    // end if-block "pin <  8"
[19:40:01.400]                  </control>
[19:40:01.400]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:40:01.400]                    // if-block "pin >= 8"
[19:40:01.400]                      // =>  FALSE
[19:40:01.400]                    // skip if-block "pin >= 8"
[19:40:01.401]                  </control>
[19:40:01.401]                </sequence>
[19:40:01.402]            </block>
[19:40:01.402]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:40:01.402]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:40:01.403]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.403]            </block>
[19:40:01.403]          </sequence>
[19:40:01.403]      </block>
[19:40:01.403]      // end if-block "traceSWO"
[19:40:01.404]    </control>
[19:40:01.404]    <control if="traceTPIU" while="" timeout="0" info="">
[19:40:01.404]      // if-block "traceTPIU"
[19:40:01.404]        // =>  FALSE
[19:40:01.404]      // skip if-block "traceTPIU"
[19:40:01.404]    </control>
[19:40:01.404]  </sequence>
[19:40:01.405]  
[19:40:01.728]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:40:01.728]  
[19:40:01.775]  <debugvars>
[19:40:01.775]    // Pre-defined
[19:40:01.776]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:01.776]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:40:01.776]    __dp=0x00000000
[19:40:01.776]    __ap=0x00000000
[19:40:01.777]    __traceout=0x00000001      (SWO Trace)
[19:40:01.777]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:01.777]    __FlashAddr=0x00000000
[19:40:01.777]    __FlashLen=0x00000000
[19:40:01.778]    __FlashArg=0x00000000
[19:40:01.778]    __FlashOp=0x00000000
[19:40:01.779]    __Result=0x00000000
[19:40:01.779]    
[19:40:01.779]    // User-defined
[19:40:01.779]    DbgMCU_CR=0x00000007
[19:40:01.780]    DbgMCU_APB1_Fz=0x00000000
[19:40:01.780]    DbgMCU_APB2_Fz=0x00000000
[19:40:01.780]    TraceClk_Pin=0x00040002
[19:40:01.781]    TraceD0_Pin=0x00040003
[19:40:01.781]    TraceD1_Pin=0x00040004
[19:40:01.781]    TraceD2_Pin=0x00040005
[19:40:01.781]    TraceD3_Pin=0x00040006
[19:40:01.782]  </debugvars>
[19:40:01.782]  
[19:40:01.782]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:40:01.782]    <block atomic="false" info="">
[19:40:01.783]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:40:01.783]        // -> [traceSWO <= 0x00000001]
[19:40:01.783]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:40:01.783]        // -> [traceTPIU <= 0x00000000]
[19:40:01.784]    </block>
[19:40:01.784]    <control if="traceSWO" while="" timeout="0" info="">
[19:40:01.784]      // if-block "traceSWO"
[19:40:01.784]        // =>  TRUE
[19:40:01.786]      <block atomic="false" info="">
[19:40:01.786]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:40:01.786]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:40:01.786]            <block atomic="false" info="">
[19:40:01.787]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:40:01.787]                // -> [dbgmcu_val <= 0x00000000]
[19:40:01.787]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:40:01.787]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:40:01.788]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:40:01.789]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.789]                // -> [dbgmcu_val <= 0x00000007]
[19:40:01.790]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:40:01.790]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:40:01.790]              Sequence("ConfigureTraceSWOPin");
[19:40:01.790]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:40:01.790]                  <block atomic="false" info="">
[19:40:01.791]                    __var pin     = 0;
[19:40:01.791]                      // -> [pin <= 0x00000000]
[19:40:01.791]                    __var port    = 0;
[19:40:01.791]                      // -> [port <= 0x00000000]
[19:40:01.792]                    __var portAdr = 0;
[19:40:01.792]                      // -> [portAdr <= 0x00000000]
[19:40:01.792]                    __var pos     = 0;
[19:40:01.792]                      // -> [pos <= 0x00000000]
[19:40:01.793]                    __var SWO_Pin = 0x00010003;          // PB3
[19:40:01.793]                      // -> [SWO_Pin <= 0x00010003]
[19:40:01.793]                  </block>
[19:40:01.794]                  <block atomic="false" info="configure SWO">
[19:40:01.794]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:40:01.795]                      // -> [pin <= 0x00000003]
[19:40:01.795]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:40:01.795]                      // -> [port <= 0x00000001]
[19:40:01.796]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:40:01.796]                      // -> [portAdr <= 0x40020400]
[19:40:01.797]                    pos = pin * 2;
[19:40:01.797]                      // -> [pos <= 0x00000006]
[19:40:01.798]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:40:01.799]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.801]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.801]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:40:01.803]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.804]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.805]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:40:01.807]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.808]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.808]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:40:01.809]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.811]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.812]                  </block>
[19:40:01.812]                  <control if="pin <  8" while="" timeout="0" info="">
[19:40:01.812]                    // if-block "pin <  8"
[19:40:01.812]                      // =>  TRUE
[19:40:01.812]                    <block atomic="false" info="">
[19:40:01.812]                      pos = ((pin    ) & 7) * 4;
[19:40:01.813]                        // -> [pos <= 0x0000000C]
[19:40:01.813]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:40:01.815]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.816]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.816]                    </block>
[19:40:01.817]                    // end if-block "pin <  8"
[19:40:01.817]                  </control>
[19:40:01.817]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:40:01.818]                    // if-block "pin >= 8"
[19:40:01.818]                      // =>  FALSE
[19:40:01.818]                    // skip if-block "pin >= 8"
[19:40:01.818]                  </control>
[19:40:01.818]                </sequence>
[19:40:01.819]            </block>
[19:40:01.819]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:40:01.820]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:40:01.821]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:01.822]            </block>
[19:40:01.822]          </sequence>
[19:40:01.822]      </block>
[19:40:01.823]      // end if-block "traceSWO"
[19:40:01.823]    </control>
[19:40:01.823]    <control if="traceTPIU" while="" timeout="0" info="">
[19:40:01.823]      // if-block "traceTPIU"
[19:40:01.824]        // =>  FALSE
[19:40:01.824]      // skip if-block "traceTPIU"
[19:40:01.824]    </control>
[19:40:01.824]  </sequence>
[19:40:01.824]  
[19:40:23.961]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:40:23.961]  
[19:40:23.961]  <debugvars>
[19:40:23.963]    // Pre-defined
[19:40:23.963]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:23.963]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:40:23.963]    __dp=0x00000000
[19:40:23.963]    __ap=0x00000000
[19:40:23.964]    __traceout=0x00000001      (SWO Trace)
[19:40:23.964]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:23.964]    __FlashAddr=0x00000000
[19:40:23.964]    __FlashLen=0x00000000
[19:40:23.965]    __FlashArg=0x00000000
[19:40:23.965]    __FlashOp=0x00000000
[19:40:23.965]    __Result=0x00000000
[19:40:23.965]    
[19:40:23.965]    // User-defined
[19:40:23.966]    DbgMCU_CR=0x00000007
[19:40:23.966]    DbgMCU_APB1_Fz=0x00000000
[19:40:23.966]    DbgMCU_APB2_Fz=0x00000000
[19:40:23.966]    TraceClk_Pin=0x00040002
[19:40:23.966]    TraceD0_Pin=0x00040003
[19:40:23.966]    TraceD1_Pin=0x00040004
[19:40:23.966]    TraceD2_Pin=0x00040005
[19:40:23.967]    TraceD3_Pin=0x00040006
[19:40:23.967]  </debugvars>
[19:40:23.967]  
[19:40:23.967]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:40:23.967]    <block atomic="false" info="">
[19:40:23.967]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:40:23.967]        // -> [traceSWO <= 0x00000001]
[19:40:23.968]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:40:23.968]        // -> [traceTPIU <= 0x00000000]
[19:40:23.968]    </block>
[19:40:23.968]    <control if="traceSWO" while="" timeout="0" info="">
[19:40:23.968]      // if-block "traceSWO"
[19:40:23.968]        // =>  TRUE
[19:40:23.968]      <block atomic="false" info="">
[19:40:23.969]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:40:23.969]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:40:23.969]            <block atomic="false" info="">
[19:40:23.969]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:40:23.969]                // -> [dbgmcu_val <= 0x00000000]
[19:40:23.969]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:40:23.970]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:40:23.970]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:40:23.971]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:40:23.971]                // -> [dbgmcu_val <= 0x00000007]
[19:40:23.971]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:40:23.971]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:40:23.971]              Sequence("ConfigureTraceSWOPin");
[19:40:23.972]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:40:23.972]                  <block atomic="false" info="">
[19:40:23.972]                    __var pin     = 0;
[19:40:23.972]                      // -> [pin <= 0x00000000]
[19:40:23.973]                    __var port    = 0;
[19:40:23.973]                      // -> [port <= 0x00000000]
[19:40:23.973]                    __var portAdr = 0;
[19:40:23.973]                      // -> [portAdr <= 0x00000000]
[19:40:23.973]                    __var pos     = 0;
[19:40:23.973]                      // -> [pos <= 0x00000000]
[19:40:23.973]                    __var SWO_Pin = 0x00010003;          // PB3
[19:40:23.974]                      // -> [SWO_Pin <= 0x00010003]
[19:40:23.974]                  </block>
[19:40:23.974]                  <block atomic="false" info="configure SWO">
[19:40:23.974]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:40:23.974]                      // -> [pin <= 0x00000003]
[19:40:23.974]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:40:23.974]                      // -> [port <= 0x00000001]
[19:40:23.975]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:40:23.975]                      // -> [portAdr <= 0x40020400]
[19:40:23.975]                    pos = pin * 2;
[19:40:23.975]                      // -> [pos <= 0x00000006]
[19:40:23.975]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:40:23.976]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:23.977]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:23.977]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:40:23.978]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:40:23.979]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:23.979]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:40:23.980]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:40:23.981]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:23.982]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:40:23.982]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:40:23.983]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:23.983]                  </block>
[19:40:23.984]                  <control if="pin <  8" while="" timeout="0" info="">
[19:40:23.984]                    // if-block "pin <  8"
[19:40:23.985]                      // =>  TRUE
[19:40:23.985]                    <block atomic="false" info="">
[19:40:23.985]                      pos = ((pin    ) & 7) * 4;
[19:40:23.985]                        // -> [pos <= 0x0000000C]
[19:40:23.985]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:40:23.986]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:23.987]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:23.988]                    </block>
[19:40:23.988]                    // end if-block "pin <  8"
[19:40:23.988]                  </control>
[19:40:23.988]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:40:23.988]                    // if-block "pin >= 8"
[19:40:23.988]                      // =>  FALSE
[19:40:23.989]                    // skip if-block "pin >= 8"
[19:40:23.989]                  </control>
[19:40:23.989]                </sequence>
[19:40:23.989]            </block>
[19:40:23.989]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:40:23.989]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:40:23.990]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:23.990]            </block>
[19:40:23.990]          </sequence>
[19:40:23.991]      </block>
[19:40:23.991]      // end if-block "traceSWO"
[19:40:23.991]    </control>
[19:40:23.991]    <control if="traceTPIU" while="" timeout="0" info="">
[19:40:23.991]      // if-block "traceTPIU"
[19:40:23.991]        // =>  FALSE
[19:40:23.991]      // skip if-block "traceTPIU"
[19:40:23.992]    </control>
[19:40:23.992]  </sequence>
[19:40:23.992]  
[19:40:24.657]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:40:24.657]  
[19:40:24.704]  <debugvars>
[19:40:24.704]    // Pre-defined
[19:40:24.705]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:24.705]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:40:24.705]    __dp=0x00000000
[19:40:24.706]    __ap=0x00000000
[19:40:24.706]    __traceout=0x00000001      (SWO Trace)
[19:40:24.706]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:24.707]    __FlashAddr=0x00000000
[19:40:24.707]    __FlashLen=0x00000000
[19:40:24.707]    __FlashArg=0x00000000
[19:40:24.707]    __FlashOp=0x00000000
[19:40:24.707]    __Result=0x00000000
[19:40:24.707]    
[19:40:24.707]    // User-defined
[19:40:24.708]    DbgMCU_CR=0x00000007
[19:40:24.708]    DbgMCU_APB1_Fz=0x00000000
[19:40:24.708]    DbgMCU_APB2_Fz=0x00000000
[19:40:24.708]    TraceClk_Pin=0x00040002
[19:40:24.709]    TraceD0_Pin=0x00040003
[19:40:24.709]    TraceD1_Pin=0x00040004
[19:40:24.709]    TraceD2_Pin=0x00040005
[19:40:24.709]    TraceD3_Pin=0x00040006
[19:40:24.709]  </debugvars>
[19:40:24.709]  
[19:40:24.709]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:40:24.710]    <block atomic="false" info="">
[19:40:24.710]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:40:24.710]        // -> [traceSWO <= 0x00000001]
[19:40:24.710]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:40:24.710]        // -> [traceTPIU <= 0x00000000]
[19:40:24.710]    </block>
[19:40:24.710]    <control if="traceSWO" while="" timeout="0" info="">
[19:40:24.711]      // if-block "traceSWO"
[19:40:24.711]        // =>  TRUE
[19:40:24.711]      <block atomic="false" info="">
[19:40:24.711]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:40:24.711]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:40:24.711]            <block atomic="false" info="">
[19:40:24.711]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:40:24.712]                // -> [dbgmcu_val <= 0x00000000]
[19:40:24.712]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:40:24.712]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:40:24.712]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:40:24.713]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:40:24.713]                // -> [dbgmcu_val <= 0x00000007]
[19:40:24.713]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:40:24.713]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:40:24.714]              Sequence("ConfigureTraceSWOPin");
[19:40:24.714]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:40:24.714]                  <block atomic="false" info="">
[19:40:24.714]                    __var pin     = 0;
[19:40:24.714]                      // -> [pin <= 0x00000000]
[19:40:24.714]                    __var port    = 0;
[19:40:24.714]                      // -> [port <= 0x00000000]
[19:40:24.715]                    __var portAdr = 0;
[19:40:24.715]                      // -> [portAdr <= 0x00000000]
[19:40:24.715]                    __var pos     = 0;
[19:40:24.715]                      // -> [pos <= 0x00000000]
[19:40:24.716]                    __var SWO_Pin = 0x00010003;          // PB3
[19:40:24.716]                      // -> [SWO_Pin <= 0x00010003]
[19:40:24.716]                  </block>
[19:40:24.716]                  <block atomic="false" info="configure SWO">
[19:40:24.716]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:40:24.716]                      // -> [pin <= 0x00000003]
[19:40:24.717]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:40:24.718]                      // -> [port <= 0x00000001]
[19:40:24.718]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:40:24.718]                      // -> [portAdr <= 0x40020400]
[19:40:24.718]                    pos = pin * 2;
[19:40:24.718]                      // -> [pos <= 0x00000006]
[19:40:24.718]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:40:24.719]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:24.720]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:24.720]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:40:24.721]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:40:24.722]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:24.722]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:40:24.722]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:40:24.724]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:24.725]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:40:24.726]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:40:24.726]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:24.727]                  </block>
[19:40:24.727]                  <control if="pin <  8" while="" timeout="0" info="">
[19:40:24.727]                    // if-block "pin <  8"
[19:40:24.727]                      // =>  TRUE
[19:40:24.727]                    <block atomic="false" info="">
[19:40:24.727]                      pos = ((pin    ) & 7) * 4;
[19:40:24.727]                        // -> [pos <= 0x0000000C]
[19:40:24.728]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:40:24.728]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:24.729]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:24.730]                    </block>
[19:40:24.730]                    // end if-block "pin <  8"
[19:40:24.730]                  </control>
[19:40:24.730]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:40:24.730]                    // if-block "pin >= 8"
[19:40:24.730]                      // =>  FALSE
[19:40:24.730]                    // skip if-block "pin >= 8"
[19:40:24.731]                  </control>
[19:40:24.731]                </sequence>
[19:40:24.731]            </block>
[19:40:24.731]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:40:24.732]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:40:24.732]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:24.732]            </block>
[19:40:24.732]          </sequence>
[19:40:24.733]      </block>
[19:40:24.733]      // end if-block "traceSWO"
[19:40:24.734]    </control>
[19:40:24.734]    <control if="traceTPIU" while="" timeout="0" info="">
[19:40:24.734]      // if-block "traceTPIU"
[19:40:24.734]        // =>  FALSE
[19:40:24.734]      // skip if-block "traceTPIU"
[19:40:24.734]    </control>
[19:40:24.735]  </sequence>
[19:40:24.735]  
[19:40:27.161]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:40:27.161]  
[19:40:27.207]  <debugvars>
[19:40:27.207]    // Pre-defined
[19:40:27.207]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:27.209]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:40:27.209]    __dp=0x00000000
[19:40:27.209]    __ap=0x00000000
[19:40:27.209]    __traceout=0x00000001      (SWO Trace)
[19:40:27.210]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:27.210]    __FlashAddr=0x00000000
[19:40:27.210]    __FlashLen=0x00000000
[19:40:27.210]    __FlashArg=0x00000000
[19:40:27.211]    __FlashOp=0x00000000
[19:40:27.211]    __Result=0x00000000
[19:40:27.211]    
[19:40:27.211]    // User-defined
[19:40:27.212]    DbgMCU_CR=0x00000007
[19:40:27.213]    DbgMCU_APB1_Fz=0x00000000
[19:40:27.213]    DbgMCU_APB2_Fz=0x00000000
[19:40:27.213]    TraceClk_Pin=0x00040002
[19:40:27.213]    TraceD0_Pin=0x00040003
[19:40:27.214]    TraceD1_Pin=0x00040004
[19:40:27.214]    TraceD2_Pin=0x00040005
[19:40:27.214]    TraceD3_Pin=0x00040006
[19:40:27.214]  </debugvars>
[19:40:27.215]  
[19:40:27.215]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:40:27.215]    <block atomic="false" info="">
[19:40:27.216]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:40:27.216]        // -> [traceSWO <= 0x00000001]
[19:40:27.217]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:40:27.217]        // -> [traceTPIU <= 0x00000000]
[19:40:27.217]    </block>
[19:40:27.218]    <control if="traceSWO" while="" timeout="0" info="">
[19:40:27.218]      // if-block "traceSWO"
[19:40:27.219]        // =>  TRUE
[19:40:27.219]      <block atomic="false" info="">
[19:40:27.219]        Sequence("DisableTraceSWO");
[19:40:27.220]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:40:27.220]            <block atomic="false" info="">
[19:40:27.220]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:40:27.221]                // -> [dbgmcu_val <= 0x00000000]
[19:40:27.221]            </block>
[19:40:27.222]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:40:27.222]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:40:27.223]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:40:27.223]                // -> [dbgmcu_val <= 0x00000007]
[19:40:27.224]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:40:27.226]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:27.226]            </block>
[19:40:27.226]          </sequence>
[19:40:27.226]      </block>
[19:40:27.227]      // end if-block "traceSWO"
[19:40:27.227]    </control>
[19:40:27.227]    <control if="traceTPIU" while="" timeout="0" info="">
[19:40:27.228]      // if-block "traceTPIU"
[19:40:27.228]        // =>  FALSE
[19:40:27.228]      // skip if-block "traceTPIU"
[19:40:27.229]    </control>
[19:40:27.229]  </sequence>
[19:40:27.229]  
[19:40:35.403]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:40:35.403]  
[19:40:35.450]  <debugvars>
[19:40:35.451]    // Pre-defined
[19:40:35.451]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:35.452]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:40:35.452]    __dp=0x00000000
[19:40:35.453]    __ap=0x00000000
[19:40:35.453]    __traceout=0x00000001      (SWO Trace)
[19:40:35.454]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:35.454]    __FlashAddr=0x00000000
[19:40:35.455]    __FlashLen=0x00000000
[19:40:35.455]    __FlashArg=0x00000000
[19:40:35.455]    __FlashOp=0x00000000
[19:40:35.456]    __Result=0x00000000
[19:40:35.456]    
[19:40:35.456]    // User-defined
[19:40:35.457]    DbgMCU_CR=0x00000007
[19:40:35.457]    DbgMCU_APB1_Fz=0x00000000
[19:40:35.458]    DbgMCU_APB2_Fz=0x00000000
[19:40:35.458]    TraceClk_Pin=0x00040002
[19:40:35.458]    TraceD0_Pin=0x00040003
[19:40:35.458]    TraceD1_Pin=0x00040004
[19:40:35.459]    TraceD2_Pin=0x00040005
[19:40:35.460]    TraceD3_Pin=0x00040006
[19:40:35.460]  </debugvars>
[19:40:35.460]  
[19:40:35.460]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:40:35.461]    <block atomic="false" info="">
[19:40:35.461]      Sequence("CheckID");
[19:40:35.461]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:40:35.461]          <block atomic="false" info="">
[19:40:35.462]            __var pidr1 = 0;
[19:40:35.462]              // -> [pidr1 <= 0x00000000]
[19:40:35.462]            __var pidr2 = 0;
[19:40:35.463]              // -> [pidr2 <= 0x00000000]
[19:40:35.463]            __var jep106id = 0;
[19:40:35.463]              // -> [jep106id <= 0x00000000]
[19:40:35.464]            __var ROMTableBase = 0;
[19:40:35.464]              // -> [ROMTableBase <= 0x00000000]
[19:40:35.465]            __ap = 0;      // AHB-AP
[19:40:35.465]              // -> [__ap <= 0x00000000]
[19:40:35.465]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:40:35.466]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.467]              // -> [ROMTableBase <= 0xE00FF000]
[19:40:35.467]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:40:35.469]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.469]              // -> [pidr1 <= 0x00000004]
[19:40:35.470]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:40:35.471]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.472]              // -> [pidr2 <= 0x0000000A]
[19:40:35.472]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:40:35.473]              // -> [jep106id <= 0x00000020]
[19:40:35.473]          </block>
[19:40:35.473]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:40:35.473]            // if-block "jep106id != 0x20"
[19:40:35.474]              // =>  FALSE
[19:40:35.474]            // skip if-block "jep106id != 0x20"
[19:40:35.474]          </control>
[19:40:35.474]        </sequence>
[19:40:35.475]    </block>
[19:40:35.475]  </sequence>
[19:40:35.476]  
[19:40:35.476]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:40:35.476]  
[19:40:35.477]  <debugvars>
[19:40:35.477]    // Pre-defined
[19:40:35.477]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:35.477]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:40:35.478]    __dp=0x00000000
[19:40:35.478]    __ap=0x00000000
[19:40:35.478]    __traceout=0x00000001      (SWO Trace)
[19:40:35.478]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:35.479]    __FlashAddr=0x00000000
[19:40:35.479]    __FlashLen=0x00000000
[19:40:35.480]    __FlashArg=0x00000000
[19:40:35.480]    __FlashOp=0x00000000
[19:40:35.480]    __Result=0x00000000
[19:40:35.482]    
[19:40:35.482]    // User-defined
[19:40:35.482]    DbgMCU_CR=0x00000007
[19:40:35.482]    DbgMCU_APB1_Fz=0x00000000
[19:40:35.483]    DbgMCU_APB2_Fz=0x00000000
[19:40:35.483]    TraceClk_Pin=0x00040002
[19:40:35.483]    TraceD0_Pin=0x00040003
[19:40:35.484]    TraceD1_Pin=0x00040004
[19:40:35.484]    TraceD2_Pin=0x00040005
[19:40:35.485]    TraceD3_Pin=0x00040006
[19:40:35.485]  </debugvars>
[19:40:35.485]  
[19:40:35.485]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:40:35.486]    <block atomic="false" info="">
[19:40:35.486]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:40:35.487]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.488]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:40:35.488]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.490]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:40:35.491]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.491]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:40:35.492]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.493]    </block>
[19:40:35.494]  </sequence>
[19:40:35.494]  
[19:40:35.546]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:40:35.546]  
[19:40:35.547]  <debugvars>
[19:40:35.547]    // Pre-defined
[19:40:35.547]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:35.548]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:40:35.548]    __dp=0x00000000
[19:40:35.549]    __ap=0x00000000
[19:40:35.549]    __traceout=0x00000001      (SWO Trace)
[19:40:35.549]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:35.549]    __FlashAddr=0x00000000
[19:40:35.550]    __FlashLen=0x00000000
[19:40:35.550]    __FlashArg=0x00000000
[19:40:35.551]    __FlashOp=0x00000000
[19:40:35.551]    __Result=0x00000000
[19:40:35.551]    
[19:40:35.551]    // User-defined
[19:40:35.552]    DbgMCU_CR=0x00000007
[19:40:35.552]    DbgMCU_APB1_Fz=0x00000000
[19:40:35.552]    DbgMCU_APB2_Fz=0x00000000
[19:40:35.552]    TraceClk_Pin=0x00040002
[19:40:35.552]    TraceD0_Pin=0x00040003
[19:40:35.553]    TraceD1_Pin=0x00040004
[19:40:35.553]    TraceD2_Pin=0x00040005
[19:40:35.553]    TraceD3_Pin=0x00040006
[19:40:35.553]  </debugvars>
[19:40:35.553]  
[19:40:35.555]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:40:35.555]    <block atomic="false" info="">
[19:40:35.555]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:40:35.555]        // -> [traceSWO <= 0x00000001]
[19:40:35.556]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:40:35.556]        // -> [traceTPIU <= 0x00000000]
[19:40:35.556]    </block>
[19:40:35.556]    <control if="traceSWO" while="" timeout="0" info="">
[19:40:35.556]      // if-block "traceSWO"
[19:40:35.557]        // =>  TRUE
[19:40:35.557]      <block atomic="false" info="">
[19:40:35.557]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:40:35.557]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:40:35.558]            <block atomic="false" info="">
[19:40:35.558]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:40:35.558]                // -> [dbgmcu_val <= 0x00000000]
[19:40:35.558]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:40:35.559]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:40:35.559]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:40:35.560]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.560]                // -> [dbgmcu_val <= 0x00000007]
[19:40:35.561]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:40:35.561]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:40:35.562]              Sequence("ConfigureTraceSWOPin");
[19:40:35.562]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:40:35.562]                  <block atomic="false" info="">
[19:40:35.563]                    __var pin     = 0;
[19:40:35.563]                      // -> [pin <= 0x00000000]
[19:40:35.563]                    __var port    = 0;
[19:40:35.564]                      // -> [port <= 0x00000000]
[19:40:35.564]                    __var portAdr = 0;
[19:40:35.564]                      // -> [portAdr <= 0x00000000]
[19:40:35.566]                    __var pos     = 0;
[19:40:35.566]                      // -> [pos <= 0x00000000]
[19:40:35.566]                    __var SWO_Pin = 0x00010003;          // PB3
[19:40:35.566]                      // -> [SWO_Pin <= 0x00010003]
[19:40:35.566]                  </block>
[19:40:35.567]                  <block atomic="false" info="configure SWO">
[19:40:35.567]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:40:35.567]                      // -> [pin <= 0x00000003]
[19:40:35.568]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:40:35.569]                      // -> [port <= 0x00000001]
[19:40:35.569]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:40:35.569]                      // -> [portAdr <= 0x40020400]
[19:40:35.569]                    pos = pin * 2;
[19:40:35.570]                      // -> [pos <= 0x00000006]
[19:40:35.570]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:40:35.571]                      // -> [Read32(0x40023830) => 0x00000002]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.572]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.573]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:40:35.574]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.576]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.576]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:40:35.578]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.579]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.580]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:40:35.581]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.583]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.583]                  </block>
[19:40:35.584]                  <control if="pin <  8" while="" timeout="0" info="">
[19:40:35.584]                    // if-block "pin <  8"
[19:40:35.585]                      // =>  TRUE
[19:40:35.585]                    <block atomic="false" info="">
[19:40:35.586]                      pos = ((pin    ) & 7) * 4;
[19:40:35.586]                        // -> [pos <= 0x0000000C]
[19:40:35.586]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:40:35.587]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.589]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.589]                    </block>
[19:40:35.590]                    // end if-block "pin <  8"
[19:40:35.590]                  </control>
[19:40:35.591]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:40:35.591]                    // if-block "pin >= 8"
[19:40:35.591]                      // =>  FALSE
[19:40:35.592]                    // skip if-block "pin >= 8"
[19:40:35.592]                  </control>
[19:40:35.592]                </sequence>
[19:40:35.592]            </block>
[19:40:35.593]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:40:35.594]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:40:35.595]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.595]            </block>
[19:40:35.596]          </sequence>
[19:40:35.596]      </block>
[19:40:35.596]      // end if-block "traceSWO"
[19:40:35.597]    </control>
[19:40:35.597]    <control if="traceTPIU" while="" timeout="0" info="">
[19:40:35.597]      // if-block "traceTPIU"
[19:40:35.597]        // =>  FALSE
[19:40:35.598]      // skip if-block "traceTPIU"
[19:40:35.598]    </control>
[19:40:35.598]  </sequence>
[19:40:35.598]  
[19:40:35.617]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:40:35.617]  
[19:40:35.617]  <debugvars>
[19:40:35.617]    // Pre-defined
[19:40:35.618]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:35.619]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:40:35.619]    __dp=0x00000000
[19:40:35.619]    __ap=0x00000000
[19:40:35.620]    __traceout=0x00000001      (SWO Trace)
[19:40:35.620]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:35.620]    __FlashAddr=0x00000000
[19:40:35.621]    __FlashLen=0x00000000
[19:40:35.621]    __FlashArg=0x00000000
[19:40:35.621]    __FlashOp=0x00000000
[19:40:35.621]    __Result=0x00000000
[19:40:35.621]    
[19:40:35.621]    // User-defined
[19:40:35.621]    DbgMCU_CR=0x00000007
[19:40:35.621]    DbgMCU_APB1_Fz=0x00000000
[19:40:35.621]    DbgMCU_APB2_Fz=0x00000000
[19:40:35.623]    TraceClk_Pin=0x00040002
[19:40:35.623]    TraceD0_Pin=0x00040003
[19:40:35.623]    TraceD1_Pin=0x00040004
[19:40:35.624]    TraceD2_Pin=0x00040005
[19:40:35.624]    TraceD3_Pin=0x00040006
[19:40:35.624]  </debugvars>
[19:40:35.625]  
[19:40:35.625]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:40:35.625]    <block atomic="false" info="">
[19:40:35.625]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:40:35.625]        // -> [traceSWO <= 0x00000001]
[19:40:35.626]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:40:35.626]        // -> [traceTPIU <= 0x00000000]
[19:40:35.626]    </block>
[19:40:35.626]    <control if="traceSWO" while="" timeout="0" info="">
[19:40:35.627]      // if-block "traceSWO"
[19:40:35.627]        // =>  TRUE
[19:40:35.627]      <block atomic="false" info="">
[19:40:35.627]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:40:35.627]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:40:35.628]            <block atomic="false" info="">
[19:40:35.628]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:40:35.629]                // -> [dbgmcu_val <= 0x00000000]
[19:40:35.629]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:40:35.629]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:40:35.630]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:40:35.631]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.632]                // -> [dbgmcu_val <= 0x00000007]
[19:40:35.632]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:40:35.633]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:40:35.633]              Sequence("ConfigureTraceSWOPin");
[19:40:35.634]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:40:35.634]                  <block atomic="false" info="">
[19:40:35.634]                    __var pin     = 0;
[19:40:35.634]                      // -> [pin <= 0x00000000]
[19:40:35.635]                    __var port    = 0;
[19:40:35.635]                      // -> [port <= 0x00000000]
[19:40:35.635]                    __var portAdr = 0;
[19:40:35.636]                      // -> [portAdr <= 0x00000000]
[19:40:35.636]                    __var pos     = 0;
[19:40:35.637]                      // -> [pos <= 0x00000000]
[19:40:35.637]                    __var SWO_Pin = 0x00010003;          // PB3
[19:40:35.637]                      // -> [SWO_Pin <= 0x00010003]
[19:40:35.638]                  </block>
[19:40:35.638]                  <block atomic="false" info="configure SWO">
[19:40:35.638]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:40:35.639]                      // -> [pin <= 0x00000003]
[19:40:35.639]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:40:35.639]                      // -> [port <= 0x00000001]
[19:40:35.639]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:40:35.640]                      // -> [portAdr <= 0x40020400]
[19:40:35.640]                    pos = pin * 2;
[19:40:35.640]                      // -> [pos <= 0x00000006]
[19:40:35.640]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:40:35.641]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.643]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.644]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:40:35.645]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.646]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.646]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:40:35.648]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.650]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.650]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:40:35.651]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.653]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.653]                  </block>
[19:40:35.653]                  <control if="pin <  8" while="" timeout="0" info="">
[19:40:35.653]                    // if-block "pin <  8"
[19:40:35.654]                      // =>  TRUE
[19:40:35.654]                    <block atomic="false" info="">
[19:40:35.654]                      pos = ((pin    ) & 7) * 4;
[19:40:35.654]                        // -> [pos <= 0x0000000C]
[19:40:35.655]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:40:35.656]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.657]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.657]                    </block>
[19:40:35.658]                    // end if-block "pin <  8"
[19:40:35.658]                  </control>
[19:40:35.659]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:40:35.660]                    // if-block "pin >= 8"
[19:40:35.660]                      // =>  FALSE
[19:40:35.660]                    // skip if-block "pin >= 8"
[19:40:35.661]                  </control>
[19:40:35.661]                </sequence>
[19:40:35.661]            </block>
[19:40:35.662]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:40:35.662]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:40:35.663]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:35.664]            </block>
[19:40:35.664]          </sequence>
[19:40:35.664]      </block>
[19:40:35.664]      // end if-block "traceSWO"
[19:40:35.665]    </control>
[19:40:35.666]    <control if="traceTPIU" while="" timeout="0" info="">
[19:40:35.666]      // if-block "traceTPIU"
[19:40:35.666]        // =>  FALSE
[19:40:35.667]      // skip if-block "traceTPIU"
[19:40:35.667]    </control>
[19:40:35.667]  </sequence>
[19:40:35.667]  
[19:40:36.021]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:40:36.021]  
[19:40:36.069]  <debugvars>
[19:40:36.069]    // Pre-defined
[19:40:36.070]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:36.070]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:40:36.070]    __dp=0x00000000
[19:40:36.071]    __ap=0x00000000
[19:40:36.071]    __traceout=0x00000001      (SWO Trace)
[19:40:36.071]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:36.071]    __FlashAddr=0x00000000
[19:40:36.072]    __FlashLen=0x00000000
[19:40:36.072]    __FlashArg=0x00000000
[19:40:36.072]    __FlashOp=0x00000000
[19:40:36.072]    __Result=0x00000000
[19:40:36.073]    
[19:40:36.073]    // User-defined
[19:40:36.073]    DbgMCU_CR=0x00000007
[19:40:36.073]    DbgMCU_APB1_Fz=0x00000000
[19:40:36.074]    DbgMCU_APB2_Fz=0x00000000
[19:40:36.074]    TraceClk_Pin=0x00040002
[19:40:36.075]    TraceD0_Pin=0x00040003
[19:40:36.075]    TraceD1_Pin=0x00040004
[19:40:36.075]    TraceD2_Pin=0x00040005
[19:40:36.076]    TraceD3_Pin=0x00040006
[19:40:36.076]  </debugvars>
[19:40:36.077]  
[19:40:36.077]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:40:36.077]    <block atomic="false" info="">
[19:40:36.078]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:40:36.078]        // -> [traceSWO <= 0x00000001]
[19:40:36.079]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:40:36.079]        // -> [traceTPIU <= 0x00000000]
[19:40:36.079]    </block>
[19:40:36.079]    <control if="traceSWO" while="" timeout="0" info="">
[19:40:36.080]      // if-block "traceSWO"
[19:40:36.080]        // =>  TRUE
[19:40:36.080]      <block atomic="false" info="">
[19:40:36.080]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:40:36.081]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:40:36.081]            <block atomic="false" info="">
[19:40:36.081]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:40:36.081]                // -> [dbgmcu_val <= 0x00000000]
[19:40:36.082]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:40:36.082]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:40:36.082]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:40:36.083]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:40:36.084]                // -> [dbgmcu_val <= 0x00000007]
[19:40:36.084]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:40:36.084]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:40:36.085]              Sequence("ConfigureTraceSWOPin");
[19:40:36.086]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:40:36.086]                  <block atomic="false" info="">
[19:40:36.086]                    __var pin     = 0;
[19:40:36.087]                      // -> [pin <= 0x00000000]
[19:40:36.087]                    __var port    = 0;
[19:40:36.088]                      // -> [port <= 0x00000000]
[19:40:36.088]                    __var portAdr = 0;
[19:40:36.089]                      // -> [portAdr <= 0x00000000]
[19:40:36.089]                    __var pos     = 0;
[19:40:36.090]                      // -> [pos <= 0x00000000]
[19:40:36.090]                    __var SWO_Pin = 0x00010003;          // PB3
[19:40:36.091]                      // -> [SWO_Pin <= 0x00010003]
[19:40:36.091]                  </block>
[19:40:36.091]                  <block atomic="false" info="configure SWO">
[19:40:36.091]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:40:36.093]                      // -> [pin <= 0x00000003]
[19:40:36.093]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:40:36.093]                      // -> [port <= 0x00000001]
[19:40:36.093]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:40:36.094]                      // -> [portAdr <= 0x40020400]
[19:40:36.094]                    pos = pin * 2;
[19:40:36.094]                      // -> [pos <= 0x00000006]
[19:40:36.094]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:40:36.096]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:36.097]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:36.097]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:40:36.098]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:40:36.101]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:36.101]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:40:36.103]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:40:36.104]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:36.104]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:40:36.106]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:40:36.107]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:36.108]                  </block>
[19:40:36.108]                  <control if="pin <  8" while="" timeout="0" info="">
[19:40:36.108]                    // if-block "pin <  8"
[19:40:36.109]                      // =>  TRUE
[19:40:36.109]                    <block atomic="false" info="">
[19:40:36.109]                      pos = ((pin    ) & 7) * 4;
[19:40:36.110]                        // -> [pos <= 0x0000000C]
[19:40:36.110]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:40:36.112]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:36.113]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:36.114]                    </block>
[19:40:36.114]                    // end if-block "pin <  8"
[19:40:36.115]                  </control>
[19:40:36.115]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:40:36.115]                    // if-block "pin >= 8"
[19:40:36.116]                      // =>  FALSE
[19:40:36.116]                    // skip if-block "pin >= 8"
[19:40:36.117]                  </control>
[19:40:36.117]                </sequence>
[19:40:36.117]            </block>
[19:40:36.118]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:40:36.118]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:40:36.119]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:36.120]            </block>
[19:40:36.120]          </sequence>
[19:40:36.120]      </block>
[19:40:36.120]      // end if-block "traceSWO"
[19:40:36.122]    </control>
[19:40:36.122]    <control if="traceTPIU" while="" timeout="0" info="">
[19:40:36.122]      // if-block "traceTPIU"
[19:40:36.122]        // =>  FALSE
[19:40:36.123]      // skip if-block "traceTPIU"
[19:40:36.123]    </control>
[19:40:36.123]  </sequence>
[19:40:36.123]  
[19:40:51.399]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:40:51.399]  
[19:40:51.447]  <debugvars>
[19:40:51.447]    // Pre-defined
[19:40:51.448]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:51.448]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:40:51.448]    __dp=0x00000000
[19:40:51.449]    __ap=0x00000000
[19:40:51.449]    __traceout=0x00000001      (SWO Trace)
[19:40:51.450]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:51.450]    __FlashAddr=0x00000000
[19:40:51.451]    __FlashLen=0x00000000
[19:40:51.451]    __FlashArg=0x00000000
[19:40:51.451]    __FlashOp=0x00000000
[19:40:51.452]    __Result=0x00000000
[19:40:51.452]    
[19:40:51.452]    // User-defined
[19:40:51.452]    DbgMCU_CR=0x00000007
[19:40:51.452]    DbgMCU_APB1_Fz=0x00000000
[19:40:51.453]    DbgMCU_APB2_Fz=0x00000000
[19:40:51.453]    TraceClk_Pin=0x00040002
[19:40:51.453]    TraceD0_Pin=0x00040003
[19:40:51.453]    TraceD1_Pin=0x00040004
[19:40:51.454]    TraceD2_Pin=0x00040005
[19:40:51.454]    TraceD3_Pin=0x00040006
[19:40:51.454]  </debugvars>
[19:40:51.454]  
[19:40:51.454]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:40:51.455]    <block atomic="false" info="">
[19:40:51.455]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:40:51.456]        // -> [traceSWO <= 0x00000001]
[19:40:51.456]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:40:51.456]        // -> [traceTPIU <= 0x00000000]
[19:40:51.456]    </block>
[19:40:51.457]    <control if="traceSWO" while="" timeout="0" info="">
[19:40:51.457]      // if-block "traceSWO"
[19:40:51.457]        // =>  TRUE
[19:40:51.457]      <block atomic="false" info="">
[19:40:51.457]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:40:51.457]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:40:51.457]            <block atomic="false" info="">
[19:40:51.457]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:40:51.458]                // -> [dbgmcu_val <= 0x00000000]
[19:40:51.458]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:40:51.458]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:40:51.458]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:40:51.459]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:40:51.459]                // -> [dbgmcu_val <= 0x00000007]
[19:40:51.459]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:40:51.459]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:40:51.459]              Sequence("ConfigureTraceSWOPin");
[19:40:51.460]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:40:51.460]                  <block atomic="false" info="">
[19:40:51.460]                    __var pin     = 0;
[19:40:51.460]                      // -> [pin <= 0x00000000]
[19:40:51.460]                    __var port    = 0;
[19:40:51.460]                      // -> [port <= 0x00000000]
[19:40:51.460]                    __var portAdr = 0;
[19:40:51.461]                      // -> [portAdr <= 0x00000000]
[19:40:51.461]                    __var pos     = 0;
[19:40:51.461]                      // -> [pos <= 0x00000000]
[19:40:51.461]                    __var SWO_Pin = 0x00010003;          // PB3
[19:40:51.461]                      // -> [SWO_Pin <= 0x00010003]
[19:40:51.461]                  </block>
[19:40:51.461]                  <block atomic="false" info="configure SWO">
[19:40:51.463]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:40:51.463]                      // -> [pin <= 0x00000003]
[19:40:51.463]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:40:51.463]                      // -> [port <= 0x00000001]
[19:40:51.464]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:40:51.464]                      // -> [portAdr <= 0x40020400]
[19:40:51.464]                    pos = pin * 2;
[19:40:51.464]                      // -> [pos <= 0x00000006]
[19:40:51.464]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:40:51.465]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:51.466]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:51.466]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:40:51.467]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:40:51.467]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:51.469]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:40:51.469]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:40:51.470]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:51.470]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:40:51.471]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:40:51.472]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:51.472]                  </block>
[19:40:51.472]                  <control if="pin <  8" while="" timeout="0" info="">
[19:40:51.472]                    // if-block "pin <  8"
[19:40:51.473]                      // =>  TRUE
[19:40:51.473]                    <block atomic="false" info="">
[19:40:51.473]                      pos = ((pin    ) & 7) * 4;
[19:40:51.473]                        // -> [pos <= 0x0000000C]
[19:40:51.473]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:40:51.474]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:51.475]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:51.475]                    </block>
[19:40:51.475]                    // end if-block "pin <  8"
[19:40:51.475]                  </control>
[19:40:51.475]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:40:51.475]                    // if-block "pin >= 8"
[19:40:51.476]                      // =>  FALSE
[19:40:51.476]                    // skip if-block "pin >= 8"
[19:40:51.476]                  </control>
[19:40:51.476]                </sequence>
[19:40:51.476]            </block>
[19:40:51.476]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:40:51.476]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:40:51.478]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:51.478]            </block>
[19:40:51.479]          </sequence>
[19:40:51.479]      </block>
[19:40:51.479]      // end if-block "traceSWO"
[19:40:51.479]    </control>
[19:40:51.479]    <control if="traceTPIU" while="" timeout="0" info="">
[19:40:51.479]      // if-block "traceTPIU"
[19:40:51.480]        // =>  FALSE
[19:40:51.480]      // skip if-block "traceTPIU"
[19:40:51.480]    </control>
[19:40:51.480]  </sequence>
[19:40:51.480]  
[19:40:52.168]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:40:52.168]  
[19:40:52.214]  <debugvars>
[19:40:52.214]    // Pre-defined
[19:40:52.215]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:52.215]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:40:52.216]    __dp=0x00000000
[19:40:52.216]    __ap=0x00000000
[19:40:52.216]    __traceout=0x00000001      (SWO Trace)
[19:40:52.216]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:52.217]    __FlashAddr=0x00000000
[19:40:52.217]    __FlashLen=0x00000000
[19:40:52.217]    __FlashArg=0x00000000
[19:40:52.217]    __FlashOp=0x00000000
[19:40:52.217]    __Result=0x00000000
[19:40:52.217]    
[19:40:52.217]    // User-defined
[19:40:52.217]    DbgMCU_CR=0x00000007
[19:40:52.218]    DbgMCU_APB1_Fz=0x00000000
[19:40:52.218]    DbgMCU_APB2_Fz=0x00000000
[19:40:52.218]    TraceClk_Pin=0x00040002
[19:40:52.218]    TraceD0_Pin=0x00040003
[19:40:52.218]    TraceD1_Pin=0x00040004
[19:40:52.218]    TraceD2_Pin=0x00040005
[19:40:52.219]    TraceD3_Pin=0x00040006
[19:40:52.219]  </debugvars>
[19:40:52.219]  
[19:40:52.219]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:40:52.219]    <block atomic="false" info="">
[19:40:52.219]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:40:52.219]        // -> [traceSWO <= 0x00000001]
[19:40:52.220]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:40:52.220]        // -> [traceTPIU <= 0x00000000]
[19:40:52.220]    </block>
[19:40:52.220]    <control if="traceSWO" while="" timeout="0" info="">
[19:40:52.220]      // if-block "traceSWO"
[19:40:52.220]        // =>  TRUE
[19:40:52.220]      <block atomic="false" info="">
[19:40:52.221]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:40:52.221]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:40:52.221]            <block atomic="false" info="">
[19:40:52.221]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:40:52.221]                // -> [dbgmcu_val <= 0x00000000]
[19:40:52.221]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:40:52.221]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:40:52.222]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:40:52.223]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.224]                // -> [dbgmcu_val <= 0x00000007]
[19:40:52.224]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:40:52.224]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:40:52.224]              Sequence("ConfigureTraceSWOPin");
[19:40:52.224]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:40:52.224]                  <block atomic="false" info="">
[19:40:52.224]                    __var pin     = 0;
[19:40:52.225]                      // -> [pin <= 0x00000000]
[19:40:52.225]                    __var port    = 0;
[19:40:52.225]                      // -> [port <= 0x00000000]
[19:40:52.225]                    __var portAdr = 0;
[19:40:52.225]                      // -> [portAdr <= 0x00000000]
[19:40:52.225]                    __var pos     = 0;
[19:40:52.225]                      // -> [pos <= 0x00000000]
[19:40:52.226]                    __var SWO_Pin = 0x00010003;          // PB3
[19:40:52.226]                      // -> [SWO_Pin <= 0x00010003]
[19:40:52.226]                  </block>
[19:40:52.226]                  <block atomic="false" info="configure SWO">
[19:40:52.226]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:40:52.227]                      // -> [pin <= 0x00000003]
[19:40:52.227]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:40:52.227]                      // -> [port <= 0x00000001]
[19:40:52.227]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:40:52.227]                      // -> [portAdr <= 0x40020400]
[19:40:52.228]                    pos = pin * 2;
[19:40:52.228]                      // -> [pos <= 0x00000006]
[19:40:52.228]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:40:52.229]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.229]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.229]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:40:52.230]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.231]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.231]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:40:52.232]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.232]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.232]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:40:52.234]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.235]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.235]                  </block>
[19:40:52.235]                  <control if="pin <  8" while="" timeout="0" info="">
[19:40:52.236]                    // if-block "pin <  8"
[19:40:52.236]                      // =>  TRUE
[19:40:52.236]                    <block atomic="false" info="">
[19:40:52.236]                      pos = ((pin    ) & 7) * 4;
[19:40:52.236]                        // -> [pos <= 0x0000000C]
[19:40:52.236]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:40:52.237]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.238]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.238]                    </block>
[19:40:52.238]                    // end if-block "pin <  8"
[19:40:52.239]                  </control>
[19:40:52.239]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:40:52.239]                    // if-block "pin >= 8"
[19:40:52.239]                      // =>  FALSE
[19:40:52.239]                    // skip if-block "pin >= 8"
[19:40:52.239]                  </control>
[19:40:52.240]                </sequence>
[19:40:52.240]            </block>
[19:40:52.240]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:40:52.240]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:40:52.241]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.241]            </block>
[19:40:52.241]          </sequence>
[19:40:52.241]      </block>
[19:40:52.242]      // end if-block "traceSWO"
[19:40:52.242]    </control>
[19:40:52.242]    <control if="traceTPIU" while="" timeout="0" info="">
[19:40:52.242]      // if-block "traceTPIU"
[19:40:52.242]        // =>  FALSE
[19:40:52.242]      // skip if-block "traceTPIU"
[19:40:52.243]    </control>
[19:40:52.243]  </sequence>
[19:40:52.243]  
[19:40:52.637]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:40:52.637]  
[19:40:52.685]  <debugvars>
[19:40:52.685]    // Pre-defined
[19:40:52.685]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:52.685]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:40:52.686]    __dp=0x00000000
[19:40:52.686]    __ap=0x00000000
[19:40:52.686]    __traceout=0x00000001      (SWO Trace)
[19:40:52.686]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:52.687]    __FlashAddr=0x00000000
[19:40:52.687]    __FlashLen=0x00000000
[19:40:52.687]    __FlashArg=0x00000000
[19:40:52.687]    __FlashOp=0x00000000
[19:40:52.688]    __Result=0x00000000
[19:40:52.688]    
[19:40:52.688]    // User-defined
[19:40:52.688]    DbgMCU_CR=0x00000007
[19:40:52.688]    DbgMCU_APB1_Fz=0x00000000
[19:40:52.688]    DbgMCU_APB2_Fz=0x00000000
[19:40:52.689]    TraceClk_Pin=0x00040002
[19:40:52.690]    TraceD0_Pin=0x00040003
[19:40:52.690]    TraceD1_Pin=0x00040004
[19:40:52.690]    TraceD2_Pin=0x00040005
[19:40:52.690]    TraceD3_Pin=0x00040006
[19:40:52.691]  </debugvars>
[19:40:52.691]  
[19:40:52.691]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:40:52.691]    <block atomic="false" info="">
[19:40:52.691]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:40:52.692]        // -> [traceSWO <= 0x00000001]
[19:40:52.692]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:40:52.692]        // -> [traceTPIU <= 0x00000000]
[19:40:52.692]    </block>
[19:40:52.693]    <control if="traceSWO" while="" timeout="0" info="">
[19:40:52.693]      // if-block "traceSWO"
[19:40:52.693]        // =>  TRUE
[19:40:52.694]      <block atomic="false" info="">
[19:40:52.694]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:40:52.694]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:40:52.694]            <block atomic="false" info="">
[19:40:52.695]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:40:52.695]                // -> [dbgmcu_val <= 0x00000000]
[19:40:52.695]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:40:52.696]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:40:52.696]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:40:52.697]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.697]                // -> [dbgmcu_val <= 0x00000007]
[19:40:52.698]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:40:52.698]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:40:52.698]              Sequence("ConfigureTraceSWOPin");
[19:40:52.699]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:40:52.699]                  <block atomic="false" info="">
[19:40:52.700]                    __var pin     = 0;
[19:40:52.700]                      // -> [pin <= 0x00000000]
[19:40:52.700]                    __var port    = 0;
[19:40:52.700]                      // -> [port <= 0x00000000]
[19:40:52.701]                    __var portAdr = 0;
[19:40:52.701]                      // -> [portAdr <= 0x00000000]
[19:40:52.701]                    __var pos     = 0;
[19:40:52.701]                      // -> [pos <= 0x00000000]
[19:40:52.701]                    __var SWO_Pin = 0x00010003;          // PB3
[19:40:52.701]                      // -> [SWO_Pin <= 0x00010003]
[19:40:52.701]                  </block>
[19:40:52.701]                  <block atomic="false" info="configure SWO">
[19:40:52.701]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:40:52.702]                      // -> [pin <= 0x00000003]
[19:40:52.702]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:40:52.702]                      // -> [port <= 0x00000001]
[19:40:52.702]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:40:52.702]                      // -> [portAdr <= 0x40020400]
[19:40:52.702]                    pos = pin * 2;
[19:40:52.702]                      // -> [pos <= 0x00000006]
[19:40:52.703]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:40:52.704]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.705]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.706]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:40:52.707]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.707]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.708]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:40:52.708]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.709]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.710]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:40:52.710]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.711]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.712]                  </block>
[19:40:52.713]                  <control if="pin <  8" while="" timeout="0" info="">
[19:40:52.713]                    // if-block "pin <  8"
[19:40:52.713]                      // =>  TRUE
[19:40:52.713]                    <block atomic="false" info="">
[19:40:52.713]                      pos = ((pin    ) & 7) * 4;
[19:40:52.713]                        // -> [pos <= 0x0000000C]
[19:40:52.714]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:40:52.714]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.715]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.715]                    </block>
[19:40:52.716]                    // end if-block "pin <  8"
[19:40:52.716]                  </control>
[19:40:52.716]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:40:52.716]                    // if-block "pin >= 8"
[19:40:52.716]                      // =>  FALSE
[19:40:52.716]                    // skip if-block "pin >= 8"
[19:40:52.716]                  </control>
[19:40:52.717]                </sequence>
[19:40:52.717]            </block>
[19:40:52.717]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:40:52.717]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:40:52.718]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:52.718]            </block>
[19:40:52.718]          </sequence>
[19:40:52.718]      </block>
[19:40:52.718]      // end if-block "traceSWO"
[19:40:52.719]    </control>
[19:40:52.719]    <control if="traceTPIU" while="" timeout="0" info="">
[19:40:52.719]      // if-block "traceTPIU"
[19:40:52.719]        // =>  FALSE
[19:40:52.719]      // skip if-block "traceTPIU"
[19:40:52.720]    </control>
[19:40:52.720]  </sequence>
[19:40:52.720]  
[19:40:53.197]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:40:53.197]  
[19:40:53.244]  <debugvars>
[19:40:53.245]    // Pre-defined
[19:40:53.245]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:40:53.245]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:40:53.246]    __dp=0x00000000
[19:40:53.246]    __ap=0x00000000
[19:40:53.247]    __traceout=0x00000001      (SWO Trace)
[19:40:53.247]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:40:53.247]    __FlashAddr=0x00000000
[19:40:53.248]    __FlashLen=0x00000000
[19:40:53.249]    __FlashArg=0x00000000
[19:40:53.249]    __FlashOp=0x00000000
[19:40:53.249]    __Result=0x00000000
[19:40:53.249]    
[19:40:53.249]    // User-defined
[19:40:53.250]    DbgMCU_CR=0x00000007
[19:40:53.250]    DbgMCU_APB1_Fz=0x00000000
[19:40:53.250]    DbgMCU_APB2_Fz=0x00000000
[19:40:53.250]    TraceClk_Pin=0x00040002
[19:40:53.250]    TraceD0_Pin=0x00040003
[19:40:53.251]    TraceD1_Pin=0x00040004
[19:40:53.251]    TraceD2_Pin=0x00040005
[19:40:53.252]    TraceD3_Pin=0x00040006
[19:40:53.252]  </debugvars>
[19:40:53.252]  
[19:40:53.253]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:40:53.253]    <block atomic="false" info="">
[19:40:53.253]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:40:53.253]        // -> [traceSWO <= 0x00000001]
[19:40:53.254]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:40:53.254]        // -> [traceTPIU <= 0x00000000]
[19:40:53.254]    </block>
[19:40:53.255]    <control if="traceSWO" while="" timeout="0" info="">
[19:40:53.255]      // if-block "traceSWO"
[19:40:53.255]        // =>  TRUE
[19:40:53.256]      <block atomic="false" info="">
[19:40:53.256]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:40:53.257]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:40:53.257]            <block atomic="false" info="">
[19:40:53.258]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:40:53.258]                // -> [dbgmcu_val <= 0x00000000]
[19:40:53.259]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:40:53.259]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:40:53.260]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:40:53.261]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:40:53.261]                // -> [dbgmcu_val <= 0x00000007]
[19:40:53.262]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:40:53.263]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:40:53.263]              Sequence("ConfigureTraceSWOPin");
[19:40:53.263]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:40:53.263]                  <block atomic="false" info="">
[19:40:53.264]                    __var pin     = 0;
[19:40:53.264]                      // -> [pin <= 0x00000000]
[19:40:53.265]                    __var port    = 0;
[19:40:53.265]                      // -> [port <= 0x00000000]
[19:40:53.265]                    __var portAdr = 0;
[19:40:53.265]                      // -> [portAdr <= 0x00000000]
[19:40:53.266]                    __var pos     = 0;
[19:40:53.266]                      // -> [pos <= 0x00000000]
[19:40:53.266]                    __var SWO_Pin = 0x00010003;          // PB3
[19:40:53.267]                      // -> [SWO_Pin <= 0x00010003]
[19:40:53.267]                  </block>
[19:40:53.267]                  <block atomic="false" info="configure SWO">
[19:40:53.267]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:40:53.268]                      // -> [pin <= 0x00000003]
[19:40:53.268]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:40:53.269]                      // -> [port <= 0x00000001]
[19:40:53.269]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:40:53.269]                      // -> [portAdr <= 0x40020400]
[19:40:53.270]                    pos = pin * 2;
[19:40:53.270]                      // -> [pos <= 0x00000006]
[19:40:53.271]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:40:53.272]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:53.274]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:53.274]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:40:53.276]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:40:53.277]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:53.278]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:40:53.279]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:40:53.281]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:53.281]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:40:53.283]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:40:53.285]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:53.285]                  </block>
[19:40:53.286]                  <control if="pin <  8" while="" timeout="0" info="">
[19:40:53.286]                    // if-block "pin <  8"
[19:40:53.286]                      // =>  TRUE
[19:40:53.286]                    <block atomic="false" info="">
[19:40:53.287]                      pos = ((pin    ) & 7) * 4;
[19:40:53.287]                        // -> [pos <= 0x0000000C]
[19:40:53.287]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:40:53.289]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:40:53.291]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:53.291]                    </block>
[19:40:53.291]                    // end if-block "pin <  8"
[19:40:53.292]                  </control>
[19:40:53.292]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:40:53.293]                    // if-block "pin >= 8"
[19:40:53.293]                      // =>  FALSE
[19:40:53.293]                    // skip if-block "pin >= 8"
[19:40:53.293]                  </control>
[19:40:53.294]                </sequence>
[19:40:53.294]            </block>
[19:40:53.295]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:40:53.295]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:40:53.297]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:40:53.298]            </block>
[19:40:53.298]          </sequence>
[19:40:53.298]      </block>
[19:40:53.299]      // end if-block "traceSWO"
[19:40:53.299]    </control>
[19:40:53.300]    <control if="traceTPIU" while="" timeout="0" info="">
[19:40:53.300]      // if-block "traceTPIU"
[19:40:53.301]        // =>  FALSE
[19:40:53.301]      // skip if-block "traceTPIU"
[19:40:53.302]    </control>
[19:40:53.302]  </sequence>
[19:40:53.303]  
[19:41:12.478]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:41:12.478]  
[19:41:12.525]  <debugvars>
[19:41:12.525]    // Pre-defined
[19:41:12.525]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:41:12.526]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:41:12.526]    __dp=0x00000000
[19:41:12.527]    __ap=0x00000000
[19:41:12.527]    __traceout=0x00000001      (SWO Trace)
[19:41:12.527]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:41:12.529]    __FlashAddr=0x00000000
[19:41:12.529]    __FlashLen=0x00000000
[19:41:12.529]    __FlashArg=0x00000000
[19:41:12.530]    __FlashOp=0x00000000
[19:41:12.530]    __Result=0x00000000
[19:41:12.530]    
[19:41:12.530]    // User-defined
[19:41:12.530]    DbgMCU_CR=0x00000007
[19:41:12.530]    DbgMCU_APB1_Fz=0x00000000
[19:41:12.531]    DbgMCU_APB2_Fz=0x00000000
[19:41:12.531]    TraceClk_Pin=0x00040002
[19:41:12.531]    TraceD0_Pin=0x00040003
[19:41:12.531]    TraceD1_Pin=0x00040004
[19:41:12.531]    TraceD2_Pin=0x00040005
[19:41:12.532]    TraceD3_Pin=0x00040006
[19:41:12.532]  </debugvars>
[19:41:12.532]  
[19:41:12.532]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:41:12.533]    <block atomic="false" info="">
[19:41:12.533]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:41:12.533]        // -> [traceSWO <= 0x00000001]
[19:41:12.533]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:41:12.534]        // -> [traceTPIU <= 0x00000000]
[19:41:12.534]    </block>
[19:41:12.535]    <control if="traceSWO" while="" timeout="0" info="">
[19:41:12.535]      // if-block "traceSWO"
[19:41:12.535]        // =>  TRUE
[19:41:12.535]      <block atomic="false" info="">
[19:41:12.536]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:41:12.536]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:41:12.536]            <block atomic="false" info="">
[19:41:12.536]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:41:12.537]                // -> [dbgmcu_val <= 0x00000000]
[19:41:12.537]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:41:12.537]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:41:12.537]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:41:12.538]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:41:12.538]                // -> [dbgmcu_val <= 0x00000007]
[19:41:12.538]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:41:12.539]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:41:12.539]              Sequence("ConfigureTraceSWOPin");
[19:41:12.539]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:41:12.539]                  <block atomic="false" info="">
[19:41:12.539]                    __var pin     = 0;
[19:41:12.539]                      // -> [pin <= 0x00000000]
[19:41:12.539]                    __var port    = 0;
[19:41:12.540]                      // -> [port <= 0x00000000]
[19:41:12.540]                    __var portAdr = 0;
[19:41:12.540]                      // -> [portAdr <= 0x00000000]
[19:41:12.540]                    __var pos     = 0;
[19:41:12.541]                      // -> [pos <= 0x00000000]
[19:41:12.542]                    __var SWO_Pin = 0x00010003;          // PB3
[19:41:12.542]                      // -> [SWO_Pin <= 0x00010003]
[19:41:12.542]                  </block>
[19:41:12.542]                  <block atomic="false" info="configure SWO">
[19:41:12.542]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:41:12.542]                      // -> [pin <= 0x00000003]
[19:41:12.542]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:41:12.543]                      // -> [port <= 0x00000001]
[19:41:12.543]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:41:12.543]                      // -> [portAdr <= 0x40020400]
[19:41:12.543]                    pos = pin * 2;
[19:41:12.543]                      // -> [pos <= 0x00000006]
[19:41:12.543]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:41:12.545]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:41:12.545]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:12.546]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:41:12.547]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:41:12.548]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:12.549]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:41:12.549]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:41:12.550]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:12.551]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:41:12.552]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:41:12.554]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:12.554]                  </block>
[19:41:12.554]                  <control if="pin <  8" while="" timeout="0" info="">
[19:41:12.554]                    // if-block "pin <  8"
[19:41:12.555]                      // =>  TRUE
[19:41:12.555]                    <block atomic="false" info="">
[19:41:12.555]                      pos = ((pin    ) & 7) * 4;
[19:41:12.556]                        // -> [pos <= 0x0000000C]
[19:41:12.556]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:41:12.556]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:41:12.557]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:12.557]                    </block>
[19:41:12.558]                    // end if-block "pin <  8"
[19:41:12.558]                  </control>
[19:41:12.558]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:41:12.558]                    // if-block "pin >= 8"
[19:41:12.558]                      // =>  FALSE
[19:41:12.559]                    // skip if-block "pin >= 8"
[19:41:12.559]                  </control>
[19:41:12.559]                </sequence>
[19:41:12.559]            </block>
[19:41:12.560]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:41:12.560]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:41:12.560]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:12.560]            </block>
[19:41:12.561]          </sequence>
[19:41:12.561]      </block>
[19:41:12.561]      // end if-block "traceSWO"
[19:41:12.561]    </control>
[19:41:12.561]    <control if="traceTPIU" while="" timeout="0" info="">
[19:41:12.561]      // if-block "traceTPIU"
[19:41:12.561]        // =>  FALSE
[19:41:12.561]      // skip if-block "traceTPIU"
[19:41:12.561]    </control>
[19:41:12.561]  </sequence>
[19:41:12.561]  
[19:41:13.130]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:41:13.130]  
[19:41:13.178]  <debugvars>
[19:41:13.178]    // Pre-defined
[19:41:13.178]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:41:13.178]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:41:13.179]    __dp=0x00000000
[19:41:13.179]    __ap=0x00000000
[19:41:13.179]    __traceout=0x00000001      (SWO Trace)
[19:41:13.179]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:41:13.180]    __FlashAddr=0x00000000
[19:41:13.180]    __FlashLen=0x00000000
[19:41:13.180]    __FlashArg=0x00000000
[19:41:13.180]    __FlashOp=0x00000000
[19:41:13.181]    __Result=0x00000000
[19:41:13.181]    
[19:41:13.181]    // User-defined
[19:41:13.181]    DbgMCU_CR=0x00000007
[19:41:13.181]    DbgMCU_APB1_Fz=0x00000000
[19:41:13.181]    DbgMCU_APB2_Fz=0x00000000
[19:41:13.182]    TraceClk_Pin=0x00040002
[19:41:13.182]    TraceD0_Pin=0x00040003
[19:41:13.182]    TraceD1_Pin=0x00040004
[19:41:13.182]    TraceD2_Pin=0x00040005
[19:41:13.182]    TraceD3_Pin=0x00040006
[19:41:13.182]  </debugvars>
[19:41:13.183]  
[19:41:13.183]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:41:13.183]    <block atomic="false" info="">
[19:41:13.183]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:41:13.183]        // -> [traceSWO <= 0x00000001]
[19:41:13.183]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:41:13.183]        // -> [traceTPIU <= 0x00000000]
[19:41:13.184]    </block>
[19:41:13.184]    <control if="traceSWO" while="" timeout="0" info="">
[19:41:13.184]      // if-block "traceSWO"
[19:41:13.184]        // =>  TRUE
[19:41:13.184]      <block atomic="false" info="">
[19:41:13.184]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:41:13.184]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:41:13.185]            <block atomic="false" info="">
[19:41:13.185]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:41:13.185]                // -> [dbgmcu_val <= 0x00000000]
[19:41:13.185]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:41:13.185]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:41:13.185]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:41:13.186]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.187]                // -> [dbgmcu_val <= 0x00000007]
[19:41:13.187]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:41:13.187]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:41:13.187]              Sequence("ConfigureTraceSWOPin");
[19:41:13.187]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:41:13.187]                  <block atomic="false" info="">
[19:41:13.187]                    __var pin     = 0;
[19:41:13.188]                      // -> [pin <= 0x00000000]
[19:41:13.188]                    __var port    = 0;
[19:41:13.188]                      // -> [port <= 0x00000000]
[19:41:13.188]                    __var portAdr = 0;
[19:41:13.188]                      // -> [portAdr <= 0x00000000]
[19:41:13.188]                    __var pos     = 0;
[19:41:13.188]                      // -> [pos <= 0x00000000]
[19:41:13.189]                    __var SWO_Pin = 0x00010003;          // PB3
[19:41:13.189]                      // -> [SWO_Pin <= 0x00010003]
[19:41:13.189]                  </block>
[19:41:13.189]                  <block atomic="false" info="configure SWO">
[19:41:13.189]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:41:13.189]                      // -> [pin <= 0x00000003]
[19:41:13.189]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:41:13.190]                      // -> [port <= 0x00000001]
[19:41:13.190]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:41:13.190]                      // -> [portAdr <= 0x40020400]
[19:41:13.190]                    pos = pin * 2;
[19:41:13.190]                      // -> [pos <= 0x00000006]
[19:41:13.190]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:41:13.191]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.192]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.192]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:41:13.193]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.194]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.194]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:41:13.195]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.196]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.196]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:41:13.197]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.198]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.198]                  </block>
[19:41:13.199]                  <control if="pin <  8" while="" timeout="0" info="">
[19:41:13.199]                    // if-block "pin <  8"
[19:41:13.199]                      // =>  TRUE
[19:41:13.199]                    <block atomic="false" info="">
[19:41:13.199]                      pos = ((pin    ) & 7) * 4;
[19:41:13.199]                        // -> [pos <= 0x0000000C]
[19:41:13.199]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:41:13.201]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.202]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.203]                    </block>
[19:41:13.203]                    // end if-block "pin <  8"
[19:41:13.203]                  </control>
[19:41:13.203]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:41:13.203]                    // if-block "pin >= 8"
[19:41:13.203]                      // =>  FALSE
[19:41:13.203]                    // skip if-block "pin >= 8"
[19:41:13.204]                  </control>
[19:41:13.204]                </sequence>
[19:41:13.204]            </block>
[19:41:13.204]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:41:13.204]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:41:13.205]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.205]            </block>
[19:41:13.205]          </sequence>
[19:41:13.205]      </block>
[19:41:13.205]      // end if-block "traceSWO"
[19:41:13.206]    </control>
[19:41:13.206]    <control if="traceTPIU" while="" timeout="0" info="">
[19:41:13.206]      // if-block "traceTPIU"
[19:41:13.206]        // =>  FALSE
[19:41:13.206]      // skip if-block "traceTPIU"
[19:41:13.207]    </control>
[19:41:13.207]  </sequence>
[19:41:13.207]  
[19:41:13.533]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:41:13.533]  
[19:41:13.579]  <debugvars>
[19:41:13.579]    // Pre-defined
[19:41:13.579]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:41:13.579]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:41:13.579]    __dp=0x00000000
[19:41:13.579]    __ap=0x00000000
[19:41:13.581]    __traceout=0x00000001      (SWO Trace)
[19:41:13.581]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:41:13.581]    __FlashAddr=0x00000000
[19:41:13.581]    __FlashLen=0x00000000
[19:41:13.581]    __FlashArg=0x00000000
[19:41:13.581]    __FlashOp=0x00000000
[19:41:13.581]    __Result=0x00000000
[19:41:13.581]    
[19:41:13.581]    // User-defined
[19:41:13.582]    DbgMCU_CR=0x00000007
[19:41:13.582]    DbgMCU_APB1_Fz=0x00000000
[19:41:13.582]    DbgMCU_APB2_Fz=0x00000000
[19:41:13.582]    TraceClk_Pin=0x00040002
[19:41:13.583]    TraceD0_Pin=0x00040003
[19:41:13.583]    TraceD1_Pin=0x00040004
[19:41:13.583]    TraceD2_Pin=0x00040005
[19:41:13.583]    TraceD3_Pin=0x00040006
[19:41:13.583]  </debugvars>
[19:41:13.583]  
[19:41:13.583]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:41:13.584]    <block atomic="false" info="">
[19:41:13.584]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:41:13.584]        // -> [traceSWO <= 0x00000001]
[19:41:13.584]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:41:13.584]        // -> [traceTPIU <= 0x00000000]
[19:41:13.585]    </block>
[19:41:13.585]    <control if="traceSWO" while="" timeout="0" info="">
[19:41:13.585]      // if-block "traceSWO"
[19:41:13.585]        // =>  TRUE
[19:41:13.585]      <block atomic="false" info="">
[19:41:13.585]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:41:13.585]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:41:13.585]            <block atomic="false" info="">
[19:41:13.585]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:41:13.586]                // -> [dbgmcu_val <= 0x00000000]
[19:41:13.586]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:41:13.586]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:41:13.586]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:41:13.587]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.587]                // -> [dbgmcu_val <= 0x00000007]
[19:41:13.587]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:41:13.588]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:41:13.588]              Sequence("ConfigureTraceSWOPin");
[19:41:13.588]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:41:13.588]                  <block atomic="false" info="">
[19:41:13.588]                    __var pin     = 0;
[19:41:13.588]                      // -> [pin <= 0x00000000]
[19:41:13.588]                    __var port    = 0;
[19:41:13.589]                      // -> [port <= 0x00000000]
[19:41:13.589]                    __var portAdr = 0;
[19:41:13.589]                      // -> [portAdr <= 0x00000000]
[19:41:13.589]                    __var pos     = 0;
[19:41:13.589]                      // -> [pos <= 0x00000000]
[19:41:13.589]                    __var SWO_Pin = 0x00010003;          // PB3
[19:41:13.589]                      // -> [SWO_Pin <= 0x00010003]
[19:41:13.590]                  </block>
[19:41:13.590]                  <block atomic="false" info="configure SWO">
[19:41:13.590]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:41:13.590]                      // -> [pin <= 0x00000003]
[19:41:13.590]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:41:13.590]                      // -> [port <= 0x00000001]
[19:41:13.590]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:41:13.591]                      // -> [portAdr <= 0x40020400]
[19:41:13.591]                    pos = pin * 2;
[19:41:13.591]                      // -> [pos <= 0x00000006]
[19:41:13.591]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:41:13.593]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.593]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.594]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:41:13.594]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.595]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.596]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:41:13.596]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.597]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.598]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:41:13.598]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.599]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.599]                  </block>
[19:41:13.600]                  <control if="pin <  8" while="" timeout="0" info="">
[19:41:13.600]                    // if-block "pin <  8"
[19:41:13.600]                      // =>  TRUE
[19:41:13.600]                    <block atomic="false" info="">
[19:41:13.600]                      pos = ((pin    ) & 7) * 4;
[19:41:13.600]                        // -> [pos <= 0x0000000C]
[19:41:13.600]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:41:13.601]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.601]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.601]                    </block>
[19:41:13.601]                    // end if-block "pin <  8"
[19:41:13.603]                  </control>
[19:41:13.603]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:41:13.603]                    // if-block "pin >= 8"
[19:41:13.603]                      // =>  FALSE
[19:41:13.603]                    // skip if-block "pin >= 8"
[19:41:13.603]                  </control>
[19:41:13.603]                </sequence>
[19:41:13.603]            </block>
[19:41:13.604]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:41:13.604]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:41:13.604]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:13.605]            </block>
[19:41:13.605]          </sequence>
[19:41:13.605]      </block>
[19:41:13.605]      // end if-block "traceSWO"
[19:41:13.605]    </control>
[19:41:13.605]    <control if="traceTPIU" while="" timeout="0" info="">
[19:41:13.605]      // if-block "traceTPIU"
[19:41:13.606]        // =>  FALSE
[19:41:13.606]      // skip if-block "traceTPIU"
[19:41:13.606]    </control>
[19:41:13.606]  </sequence>
[19:41:13.606]  
[19:41:14.090]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:41:14.090]  
[19:41:14.090]  <debugvars>
[19:41:14.090]    // Pre-defined
[19:41:14.091]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:41:14.091]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:41:14.091]    __dp=0x00000000
[19:41:14.091]    __ap=0x00000000
[19:41:14.091]    __traceout=0x00000001      (SWO Trace)
[19:41:14.091]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:41:14.092]    __FlashAddr=0x00000000
[19:41:14.092]    __FlashLen=0x00000000
[19:41:14.092]    __FlashArg=0x00000000
[19:41:14.092]    __FlashOp=0x00000000
[19:41:14.093]    __Result=0x00000000
[19:41:14.093]    
[19:41:14.093]    // User-defined
[19:41:14.093]    DbgMCU_CR=0x00000007
[19:41:14.093]    DbgMCU_APB1_Fz=0x00000000
[19:41:14.093]    DbgMCU_APB2_Fz=0x00000000
[19:41:14.093]    TraceClk_Pin=0x00040002
[19:41:14.094]    TraceD0_Pin=0x00040003
[19:41:14.094]    TraceD1_Pin=0x00040004
[19:41:14.094]    TraceD2_Pin=0x00040005
[19:41:14.094]    TraceD3_Pin=0x00040006
[19:41:14.094]  </debugvars>
[19:41:14.094]  
[19:41:14.094]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:41:14.094]    <block atomic="false" info="">
[19:41:14.094]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:41:14.094]        // -> [traceSWO <= 0x00000001]
[19:41:14.094]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:41:14.095]        // -> [traceTPIU <= 0x00000000]
[19:41:14.095]    </block>
[19:41:14.095]    <control if="traceSWO" while="" timeout="0" info="">
[19:41:14.095]      // if-block "traceSWO"
[19:41:14.095]        // =>  TRUE
[19:41:14.095]      <block atomic="false" info="">
[19:41:14.095]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:41:14.095]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:41:14.095]            <block atomic="false" info="">
[19:41:14.095]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:41:14.096]                // -> [dbgmcu_val <= 0x00000000]
[19:41:14.096]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:41:14.096]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:41:14.096]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:41:14.097]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:41:14.097]                // -> [dbgmcu_val <= 0x00000007]
[19:41:14.097]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:41:14.097]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:41:14.097]              Sequence("ConfigureTraceSWOPin");
[19:41:14.097]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:41:14.098]                  <block atomic="false" info="">
[19:41:14.098]                    __var pin     = 0;
[19:41:14.098]                      // -> [pin <= 0x00000000]
[19:41:14.098]                    __var port    = 0;
[19:41:14.098]                      // -> [port <= 0x00000000]
[19:41:14.098]                    __var portAdr = 0;
[19:41:14.098]                      // -> [portAdr <= 0x00000000]
[19:41:14.098]                    __var pos     = 0;
[19:41:14.098]                      // -> [pos <= 0x00000000]
[19:41:14.099]                    __var SWO_Pin = 0x00010003;          // PB3
[19:41:14.099]                      // -> [SWO_Pin <= 0x00010003]
[19:41:14.099]                  </block>
[19:41:14.099]                  <block atomic="false" info="configure SWO">
[19:41:14.099]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:41:14.099]                      // -> [pin <= 0x00000003]
[19:41:14.099]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:41:14.099]                      // -> [port <= 0x00000001]
[19:41:14.099]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:41:14.099]                      // -> [portAdr <= 0x40020400]
[19:41:14.099]                    pos = pin * 2;
[19:41:14.100]                      // -> [pos <= 0x00000006]
[19:41:14.100]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:41:14.100]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:41:14.101]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:14.101]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:41:14.102]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:41:14.103]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:14.103]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:41:14.103]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:41:14.104]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:14.104]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:41:14.105]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:41:14.106]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:14.106]                  </block>
[19:41:14.106]                  <control if="pin <  8" while="" timeout="0" info="">
[19:41:14.106]                    // if-block "pin <  8"
[19:41:14.106]                      // =>  TRUE
[19:41:14.106]                    <block atomic="false" info="">
[19:41:14.107]                      pos = ((pin    ) & 7) * 4;
[19:41:14.108]                        // -> [pos <= 0x0000000C]
[19:41:14.108]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:41:14.108]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:41:14.109]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:14.109]                    </block>
[19:41:14.109]                    // end if-block "pin <  8"
[19:41:14.109]                  </control>
[19:41:14.109]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:41:14.110]                    // if-block "pin >= 8"
[19:41:14.110]                      // =>  FALSE
[19:41:14.110]                    // skip if-block "pin >= 8"
[19:41:14.110]                  </control>
[19:41:14.110]                </sequence>
[19:41:14.110]            </block>
[19:41:14.110]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:41:14.110]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:41:14.111]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:14.111]            </block>
[19:41:14.111]          </sequence>
[19:41:14.111]      </block>
[19:41:14.111]      // end if-block "traceSWO"
[19:41:14.111]    </control>
[19:41:14.111]    <control if="traceTPIU" while="" timeout="0" info="">
[19:41:14.111]      // if-block "traceTPIU"
[19:41:14.112]        // =>  FALSE
[19:41:14.112]      // skip if-block "traceTPIU"
[19:41:14.112]    </control>
[19:41:14.112]  </sequence>
[19:41:14.112]  
[19:41:17.703]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:41:17.703]  
[19:41:17.751]  <debugvars>
[19:41:17.751]    // Pre-defined
[19:41:17.751]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:41:17.751]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:41:17.751]    __dp=0x00000000
[19:41:17.752]    __ap=0x00000000
[19:41:17.752]    __traceout=0x00000001      (SWO Trace)
[19:41:17.752]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:41:17.752]    __FlashAddr=0x00000000
[19:41:17.752]    __FlashLen=0x00000000
[19:41:17.753]    __FlashArg=0x00000000
[19:41:17.753]    __FlashOp=0x00000000
[19:41:17.753]    __Result=0x00000000
[19:41:17.753]    
[19:41:17.753]    // User-defined
[19:41:17.754]    DbgMCU_CR=0x00000007
[19:41:17.754]    DbgMCU_APB1_Fz=0x00000000
[19:41:17.754]    DbgMCU_APB2_Fz=0x00000000
[19:41:17.754]    TraceClk_Pin=0x00040002
[19:41:17.756]    TraceD0_Pin=0x00040003
[19:41:17.756]    TraceD1_Pin=0x00040004
[19:41:17.756]    TraceD2_Pin=0x00040005
[19:41:17.756]    TraceD3_Pin=0x00040006
[19:41:17.756]  </debugvars>
[19:41:17.757]  
[19:41:17.757]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:41:17.758]    <block atomic="false" info="">
[19:41:17.758]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:41:17.758]        // -> [traceSWO <= 0x00000001]
[19:41:17.758]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:41:17.758]        // -> [traceTPIU <= 0x00000000]
[19:41:17.758]    </block>
[19:41:17.760]    <control if="traceSWO" while="" timeout="0" info="">
[19:41:17.760]      // if-block "traceSWO"
[19:41:17.760]        // =>  TRUE
[19:41:17.760]      <block atomic="false" info="">
[19:41:17.761]        Sequence("DisableTraceSWO");
[19:41:17.761]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:41:17.761]            <block atomic="false" info="">
[19:41:17.761]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:41:17.762]                // -> [dbgmcu_val <= 0x00000000]
[19:41:17.762]            </block>
[19:41:17.762]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:41:17.762]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:41:17.763]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:41:17.764]                // -> [dbgmcu_val <= 0x00000007]
[19:41:17.764]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:41:17.766]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:17.766]            </block>
[19:41:17.766]          </sequence>
[19:41:17.767]      </block>
[19:41:17.767]      // end if-block "traceSWO"
[19:41:17.767]    </control>
[19:41:17.767]    <control if="traceTPIU" while="" timeout="0" info="">
[19:41:17.768]      // if-block "traceTPIU"
[19:41:17.768]        // =>  FALSE
[19:41:17.768]      // skip if-block "traceTPIU"
[19:41:17.768]    </control>
[19:41:17.768]  </sequence>
[19:41:17.769]  
[19:41:41.083]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:41:41.083]  
[19:41:41.131]  <debugvars>
[19:41:41.131]    // Pre-defined
[19:41:41.132]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:41:41.132]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:41:41.132]    __dp=0x00000000
[19:41:41.133]    __ap=0x00000000
[19:41:41.133]    __traceout=0x00000001      (SWO Trace)
[19:41:41.134]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:41:41.134]    __FlashAddr=0x00000000
[19:41:41.134]    __FlashLen=0x00000000
[19:41:41.135]    __FlashArg=0x00000000
[19:41:41.135]    __FlashOp=0x00000000
[19:41:41.135]    __Result=0x00000000
[19:41:41.136]    
[19:41:41.136]    // User-defined
[19:41:41.136]    DbgMCU_CR=0x00000007
[19:41:41.136]    DbgMCU_APB1_Fz=0x00000000
[19:41:41.136]    DbgMCU_APB2_Fz=0x00000000
[19:41:41.136]    TraceClk_Pin=0x00040002
[19:41:41.137]    TraceD0_Pin=0x00040003
[19:41:41.137]    TraceD1_Pin=0x00040004
[19:41:41.138]    TraceD2_Pin=0x00040005
[19:41:41.138]    TraceD3_Pin=0x00040006
[19:41:41.138]  </debugvars>
[19:41:41.138]  
[19:41:41.138]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:41:41.138]    <block atomic="false" info="">
[19:41:41.138]      Sequence("CheckID");
[19:41:41.140]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:41:41.140]          <block atomic="false" info="">
[19:41:41.140]            __var pidr1 = 0;
[19:41:41.140]              // -> [pidr1 <= 0x00000000]
[19:41:41.140]            __var pidr2 = 0;
[19:41:41.141]              // -> [pidr2 <= 0x00000000]
[19:41:41.141]            __var jep106id = 0;
[19:41:41.142]              // -> [jep106id <= 0x00000000]
[19:41:41.142]            __var ROMTableBase = 0;
[19:41:41.142]              // -> [ROMTableBase <= 0x00000000]
[19:41:41.143]            __ap = 0;      // AHB-AP
[19:41:41.143]              // -> [__ap <= 0x00000000]
[19:41:41.143]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:41:41.143]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.143]              // -> [ROMTableBase <= 0xE00FF000]
[19:41:41.143]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:41:41.145]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.146]              // -> [pidr1 <= 0x00000004]
[19:41:41.146]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:41:41.147]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.147]              // -> [pidr2 <= 0x0000000A]
[19:41:41.147]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:41:41.147]              // -> [jep106id <= 0x00000020]
[19:41:41.147]          </block>
[19:41:41.148]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:41:41.148]            // if-block "jep106id != 0x20"
[19:41:41.148]              // =>  FALSE
[19:41:41.148]            // skip if-block "jep106id != 0x20"
[19:41:41.148]          </control>
[19:41:41.148]        </sequence>
[19:41:41.149]    </block>
[19:41:41.149]  </sequence>
[19:41:41.149]  
[19:41:41.149]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:41:41.149]  
[19:41:41.150]  <debugvars>
[19:41:41.150]    // Pre-defined
[19:41:41.150]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:41:41.150]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:41:41.150]    __dp=0x00000000
[19:41:41.151]    __ap=0x00000000
[19:41:41.151]    __traceout=0x00000001      (SWO Trace)
[19:41:41.151]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:41:41.151]    __FlashAddr=0x00000000
[19:41:41.151]    __FlashLen=0x00000000
[19:41:41.151]    __FlashArg=0x00000000
[19:41:41.151]    __FlashOp=0x00000000
[19:41:41.151]    __Result=0x00000000
[19:41:41.151]    
[19:41:41.151]    // User-defined
[19:41:41.152]    DbgMCU_CR=0x00000007
[19:41:41.152]    DbgMCU_APB1_Fz=0x00000000
[19:41:41.152]    DbgMCU_APB2_Fz=0x00000000
[19:41:41.152]    TraceClk_Pin=0x00040002
[19:41:41.152]    TraceD0_Pin=0x00040003
[19:41:41.152]    TraceD1_Pin=0x00040004
[19:41:41.152]    TraceD2_Pin=0x00040005
[19:41:41.153]    TraceD3_Pin=0x00040006
[19:41:41.153]  </debugvars>
[19:41:41.153]  
[19:41:41.153]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:41:41.153]    <block atomic="false" info="">
[19:41:41.153]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:41:41.154]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.154]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:41:41.155]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.157]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:41:41.157]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.158]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:41:41.158]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.159]    </block>
[19:41:41.159]  </sequence>
[19:41:41.159]  
[19:41:41.182]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:41:41.182]  
[19:41:41.182]  <debugvars>
[19:41:41.182]    // Pre-defined
[19:41:41.182]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:41:41.182]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:41:41.183]    __dp=0x00000000
[19:41:41.183]    __ap=0x00000000
[19:41:41.183]    __traceout=0x00000001      (SWO Trace)
[19:41:41.183]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:41:41.183]    __FlashAddr=0x00000000
[19:41:41.183]    __FlashLen=0x00000000
[19:41:41.183]    __FlashArg=0x00000000
[19:41:41.183]    __FlashOp=0x00000000
[19:41:41.183]    __Result=0x00000000
[19:41:41.184]    
[19:41:41.184]    // User-defined
[19:41:41.184]    DbgMCU_CR=0x00000007
[19:41:41.184]    DbgMCU_APB1_Fz=0x00000000
[19:41:41.184]    DbgMCU_APB2_Fz=0x00000000
[19:41:41.184]    TraceClk_Pin=0x00040002
[19:41:41.184]    TraceD0_Pin=0x00040003
[19:41:41.184]    TraceD1_Pin=0x00040004
[19:41:41.184]    TraceD2_Pin=0x00040005
[19:41:41.184]    TraceD3_Pin=0x00040006
[19:41:41.184]  </debugvars>
[19:41:41.185]  
[19:41:41.185]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:41:41.185]    <block atomic="false" info="">
[19:41:41.185]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:41:41.185]        // -> [traceSWO <= 0x00000001]
[19:41:41.185]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:41:41.185]        // -> [traceTPIU <= 0x00000000]
[19:41:41.185]    </block>
[19:41:41.185]    <control if="traceSWO" while="" timeout="0" info="">
[19:41:41.185]      // if-block "traceSWO"
[19:41:41.186]        // =>  TRUE
[19:41:41.186]      <block atomic="false" info="">
[19:41:41.186]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:41:41.186]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:41:41.186]            <block atomic="false" info="">
[19:41:41.186]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:41:41.187]                // -> [dbgmcu_val <= 0x00000000]
[19:41:41.187]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:41:41.187]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:41:41.187]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:41:41.188]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.188]                // -> [dbgmcu_val <= 0x00000007]
[19:41:41.188]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:41:41.188]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:41:41.188]              Sequence("ConfigureTraceSWOPin");
[19:41:41.188]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:41:41.188]                  <block atomic="false" info="">
[19:41:41.188]                    __var pin     = 0;
[19:41:41.188]                      // -> [pin <= 0x00000000]
[19:41:41.189]                    __var port    = 0;
[19:41:41.189]                      // -> [port <= 0x00000000]
[19:41:41.189]                    __var portAdr = 0;
[19:41:41.189]                      // -> [portAdr <= 0x00000000]
[19:41:41.189]                    __var pos     = 0;
[19:41:41.189]                      // -> [pos <= 0x00000000]
[19:41:41.189]                    __var SWO_Pin = 0x00010003;          // PB3
[19:41:41.189]                      // -> [SWO_Pin <= 0x00010003]
[19:41:41.189]                  </block>
[19:41:41.190]                  <block atomic="false" info="configure SWO">
[19:41:41.190]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:41:41.190]                      // -> [pin <= 0x00000003]
[19:41:41.190]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:41:41.190]                      // -> [port <= 0x00000001]
[19:41:41.190]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:41:41.190]                      // -> [portAdr <= 0x40020400]
[19:41:41.190]                    pos = pin * 2;
[19:41:41.190]                      // -> [pos <= 0x00000006]
[19:41:41.190]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:41:41.191]                      // -> [Read32(0x40023830) => 0x00000002]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.192]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.192]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:41:41.192]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.194]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.194]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:41:41.195]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.195]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.195]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:41:41.196]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.197]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.197]                  </block>
[19:41:41.197]                  <control if="pin <  8" while="" timeout="0" info="">
[19:41:41.197]                    // if-block "pin <  8"
[19:41:41.197]                      // =>  TRUE
[19:41:41.197]                    <block atomic="false" info="">
[19:41:41.197]                      pos = ((pin    ) & 7) * 4;
[19:41:41.197]                        // -> [pos <= 0x0000000C]
[19:41:41.197]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:41:41.198]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.199]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.199]                    </block>
[19:41:41.199]                    // end if-block "pin <  8"
[19:41:41.199]                  </control>
[19:41:41.199]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:41:41.199]                    // if-block "pin >= 8"
[19:41:41.199]                      // =>  FALSE
[19:41:41.199]                    // skip if-block "pin >= 8"
[19:41:41.199]                  </control>
[19:41:41.200]                </sequence>
[19:41:41.200]            </block>
[19:41:41.200]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:41:41.200]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:41:41.201]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.201]            </block>
[19:41:41.201]          </sequence>
[19:41:41.201]      </block>
[19:41:41.201]      // end if-block "traceSWO"
[19:41:41.201]    </control>
[19:41:41.201]    <control if="traceTPIU" while="" timeout="0" info="">
[19:41:41.201]      // if-block "traceTPIU"
[19:41:41.201]        // =>  FALSE
[19:41:41.202]      // skip if-block "traceTPIU"
[19:41:41.202]    </control>
[19:41:41.202]  </sequence>
[19:41:41.202]  
[19:41:41.213]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:41:41.213]  
[19:41:41.213]  <debugvars>
[19:41:41.213]    // Pre-defined
[19:41:41.213]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:41:41.213]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:41:41.213]    __dp=0x00000000
[19:41:41.213]    __ap=0x00000000
[19:41:41.214]    __traceout=0x00000001      (SWO Trace)
[19:41:41.214]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:41:41.214]    __FlashAddr=0x00000000
[19:41:41.214]    __FlashLen=0x00000000
[19:41:41.214]    __FlashArg=0x00000000
[19:41:41.214]    __FlashOp=0x00000000
[19:41:41.214]    __Result=0x00000000
[19:41:41.214]    
[19:41:41.214]    // User-defined
[19:41:41.214]    DbgMCU_CR=0x00000007
[19:41:41.215]    DbgMCU_APB1_Fz=0x00000000
[19:41:41.215]    DbgMCU_APB2_Fz=0x00000000
[19:41:41.215]    TraceClk_Pin=0x00040002
[19:41:41.215]    TraceD0_Pin=0x00040003
[19:41:41.215]    TraceD1_Pin=0x00040004
[19:41:41.215]    TraceD2_Pin=0x00040005
[19:41:41.215]    TraceD3_Pin=0x00040006
[19:41:41.215]  </debugvars>
[19:41:41.215]  
[19:41:41.215]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:41:41.216]    <block atomic="false" info="">
[19:41:41.216]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:41:41.216]        // -> [traceSWO <= 0x00000001]
[19:41:41.216]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:41:41.216]        // -> [traceTPIU <= 0x00000000]
[19:41:41.216]    </block>
[19:41:41.216]    <control if="traceSWO" while="" timeout="0" info="">
[19:41:41.216]      // if-block "traceSWO"
[19:41:41.216]        // =>  TRUE
[19:41:41.217]      <block atomic="false" info="">
[19:41:41.217]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:41:41.217]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:41:41.217]            <block atomic="false" info="">
[19:41:41.217]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:41:41.217]                // -> [dbgmcu_val <= 0x00000000]
[19:41:41.217]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:41:41.217]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:41:41.218]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:41:41.218]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.219]                // -> [dbgmcu_val <= 0x00000007]
[19:41:41.219]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:41:41.220]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:41:41.220]              Sequence("ConfigureTraceSWOPin");
[19:41:41.220]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:41:41.220]                  <block atomic="false" info="">
[19:41:41.220]                    __var pin     = 0;
[19:41:41.220]                      // -> [pin <= 0x00000000]
[19:41:41.220]                    __var port    = 0;
[19:41:41.220]                      // -> [port <= 0x00000000]
[19:41:41.220]                    __var portAdr = 0;
[19:41:41.220]                      // -> [portAdr <= 0x00000000]
[19:41:41.221]                    __var pos     = 0;
[19:41:41.221]                      // -> [pos <= 0x00000000]
[19:41:41.221]                    __var SWO_Pin = 0x00010003;          // PB3
[19:41:41.221]                      // -> [SWO_Pin <= 0x00010003]
[19:41:41.221]                  </block>
[19:41:41.221]                  <block atomic="false" info="configure SWO">
[19:41:41.221]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:41:41.221]                      // -> [pin <= 0x00000003]
[19:41:41.221]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:41:41.222]                      // -> [port <= 0x00000001]
[19:41:41.222]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:41:41.222]                      // -> [portAdr <= 0x40020400]
[19:41:41.222]                    pos = pin * 2;
[19:41:41.222]                      // -> [pos <= 0x00000006]
[19:41:41.222]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:41:41.223]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.223]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.223]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:41:41.224]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.224]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.225]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:41:41.225]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.226]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.226]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:41:41.226]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.227]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.227]                  </block>
[19:41:41.227]                  <control if="pin <  8" while="" timeout="0" info="">
[19:41:41.227]                    // if-block "pin <  8"
[19:41:41.227]                      // =>  TRUE
[19:41:41.227]                    <block atomic="false" info="">
[19:41:41.227]                      pos = ((pin    ) & 7) * 4;
[19:41:41.227]                        // -> [pos <= 0x0000000C]
[19:41:41.229]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:41:41.229]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.230]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.230]                    </block>
[19:41:41.230]                    // end if-block "pin <  8"
[19:41:41.230]                  </control>
[19:41:41.230]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:41:41.230]                    // if-block "pin >= 8"
[19:41:41.230]                      // =>  FALSE
[19:41:41.230]                    // skip if-block "pin >= 8"
[19:41:41.230]                  </control>
[19:41:41.230]                </sequence>
[19:41:41.231]            </block>
[19:41:41.231]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:41:41.231]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:41:41.231]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.231]            </block>
[19:41:41.232]          </sequence>
[19:41:41.232]      </block>
[19:41:41.232]      // end if-block "traceSWO"
[19:41:41.232]    </control>
[19:41:41.232]    <control if="traceTPIU" while="" timeout="0" info="">
[19:41:41.232]      // if-block "traceTPIU"
[19:41:41.232]        // =>  FALSE
[19:41:41.232]      // skip if-block "traceTPIU"
[19:41:41.232]    </control>
[19:41:41.233]  </sequence>
[19:41:41.233]  
[19:41:41.545]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:41:41.545]  
[19:41:41.592]  <debugvars>
[19:41:41.592]    // Pre-defined
[19:41:41.593]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:41:41.593]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:41:41.593]    __dp=0x00000000
[19:41:41.593]    __ap=0x00000000
[19:41:41.593]    __traceout=0x00000001      (SWO Trace)
[19:41:41.594]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:41:41.594]    __FlashAddr=0x00000000
[19:41:41.594]    __FlashLen=0x00000000
[19:41:41.594]    __FlashArg=0x00000000
[19:41:41.595]    __FlashOp=0x00000000
[19:41:41.595]    __Result=0x00000000
[19:41:41.595]    
[19:41:41.595]    // User-defined
[19:41:41.596]    DbgMCU_CR=0x00000007
[19:41:41.596]    DbgMCU_APB1_Fz=0x00000000
[19:41:41.596]    DbgMCU_APB2_Fz=0x00000000
[19:41:41.597]    TraceClk_Pin=0x00040002
[19:41:41.597]    TraceD0_Pin=0x00040003
[19:41:41.597]    TraceD1_Pin=0x00040004
[19:41:41.597]    TraceD2_Pin=0x00040005
[19:41:41.598]    TraceD3_Pin=0x00040006
[19:41:41.598]  </debugvars>
[19:41:41.599]  
[19:41:41.599]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:41:41.599]    <block atomic="false" info="">
[19:41:41.599]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:41:41.600]        // -> [traceSWO <= 0x00000001]
[19:41:41.600]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:41:41.600]        // -> [traceTPIU <= 0x00000000]
[19:41:41.601]    </block>
[19:41:41.601]    <control if="traceSWO" while="" timeout="0" info="">
[19:41:41.601]      // if-block "traceSWO"
[19:41:41.601]        // =>  TRUE
[19:41:41.602]      <block atomic="false" info="">
[19:41:41.602]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:41:41.602]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:41:41.602]            <block atomic="false" info="">
[19:41:41.602]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:41:41.602]                // -> [dbgmcu_val <= 0x00000000]
[19:41:41.602]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:41:41.602]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:41:41.602]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:41:41.604]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.604]                // -> [dbgmcu_val <= 0x00000007]
[19:41:41.604]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:41:41.604]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:41:41.604]              Sequence("ConfigureTraceSWOPin");
[19:41:41.605]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:41:41.605]                  <block atomic="false" info="">
[19:41:41.605]                    __var pin     = 0;
[19:41:41.605]                      // -> [pin <= 0x00000000]
[19:41:41.605]                    __var port    = 0;
[19:41:41.605]                      // -> [port <= 0x00000000]
[19:41:41.605]                    __var portAdr = 0;
[19:41:41.606]                      // -> [portAdr <= 0x00000000]
[19:41:41.606]                    __var pos     = 0;
[19:41:41.606]                      // -> [pos <= 0x00000000]
[19:41:41.606]                    __var SWO_Pin = 0x00010003;          // PB3
[19:41:41.606]                      // -> [SWO_Pin <= 0x00010003]
[19:41:41.606]                  </block>
[19:41:41.606]                  <block atomic="false" info="configure SWO">
[19:41:41.607]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:41:41.607]                      // -> [pin <= 0x00000003]
[19:41:41.607]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:41:41.607]                      // -> [port <= 0x00000001]
[19:41:41.607]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:41:41.607]                      // -> [portAdr <= 0x40020400]
[19:41:41.608]                    pos = pin * 2;
[19:41:41.608]                      // -> [pos <= 0x00000006]
[19:41:41.608]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:41:41.609]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.609]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.611]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:41:41.612]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.613]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.613]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:41:41.613]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.615]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.615]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:41:41.616]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.617]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.617]                  </block>
[19:41:41.617]                  <control if="pin <  8" while="" timeout="0" info="">
[19:41:41.617]                    // if-block "pin <  8"
[19:41:41.618]                      // =>  TRUE
[19:41:41.618]                    <block atomic="false" info="">
[19:41:41.618]                      pos = ((pin    ) & 7) * 4;
[19:41:41.618]                        // -> [pos <= 0x0000000C]
[19:41:41.618]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:41:41.619]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.621]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.622]                    </block>
[19:41:41.622]                    // end if-block "pin <  8"
[19:41:41.622]                  </control>
[19:41:41.622]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:41:41.622]                    // if-block "pin >= 8"
[19:41:41.622]                      // =>  FALSE
[19:41:41.622]                    // skip if-block "pin >= 8"
[19:41:41.623]                  </control>
[19:41:41.623]                </sequence>
[19:41:41.623]            </block>
[19:41:41.623]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:41:41.623]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:41:41.624]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:41:41.624]            </block>
[19:41:41.624]          </sequence>
[19:41:41.625]      </block>
[19:41:41.625]      // end if-block "traceSWO"
[19:41:41.625]    </control>
[19:41:41.625]    <control if="traceTPIU" while="" timeout="0" info="">
[19:41:41.625]      // if-block "traceTPIU"
[19:41:41.625]        // =>  FALSE
[19:41:41.625]      // skip if-block "traceTPIU"
[19:41:41.626]    </control>
[19:41:41.626]  </sequence>
[19:41:41.626]  
[19:42:07.331]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:42:07.331]  
[19:42:07.378]  <debugvars>
[19:42:07.378]    // Pre-defined
[19:42:07.378]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:42:07.379]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:42:07.379]    __dp=0x00000000
[19:42:07.379]    __ap=0x00000000
[19:42:07.379]    __traceout=0x00000001      (SWO Trace)
[19:42:07.380]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:42:07.380]    __FlashAddr=0x00000000
[19:42:07.380]    __FlashLen=0x00000000
[19:42:07.381]    __FlashArg=0x00000000
[19:42:07.381]    __FlashOp=0x00000000
[19:42:07.381]    __Result=0x00000000
[19:42:07.381]    
[19:42:07.381]    // User-defined
[19:42:07.381]    DbgMCU_CR=0x00000007
[19:42:07.381]    DbgMCU_APB1_Fz=0x00000000
[19:42:07.382]    DbgMCU_APB2_Fz=0x00000000
[19:42:07.383]    TraceClk_Pin=0x00040002
[19:42:07.383]    TraceD0_Pin=0x00040003
[19:42:07.383]    TraceD1_Pin=0x00040004
[19:42:07.384]    TraceD2_Pin=0x00040005
[19:42:07.384]    TraceD3_Pin=0x00040006
[19:42:07.384]  </debugvars>
[19:42:07.384]  
[19:42:07.384]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:42:07.384]    <block atomic="false" info="">
[19:42:07.385]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:42:07.385]        // -> [traceSWO <= 0x00000001]
[19:42:07.385]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:42:07.385]        // -> [traceTPIU <= 0x00000000]
[19:42:07.387]    </block>
[19:42:07.387]    <control if="traceSWO" while="" timeout="0" info="">
[19:42:07.387]      // if-block "traceSWO"
[19:42:07.387]        // =>  TRUE
[19:42:07.387]      <block atomic="false" info="">
[19:42:07.388]        Sequence("DisableTraceSWO");
[19:42:07.388]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:42:07.388]            <block atomic="false" info="">
[19:42:07.388]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:42:07.389]                // -> [dbgmcu_val <= 0x00000000]
[19:42:07.389]            </block>
[19:42:07.389]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:42:07.389]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:42:07.390]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:42:07.391]                // -> [dbgmcu_val <= 0x00000007]
[19:42:07.391]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:42:07.392]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:42:07.393]            </block>
[19:42:07.393]          </sequence>
[19:42:07.394]      </block>
[19:42:07.394]      // end if-block "traceSWO"
[19:42:07.394]    </control>
[19:42:07.394]    <control if="traceTPIU" while="" timeout="0" info="">
[19:42:07.395]      // if-block "traceTPIU"
[19:42:07.395]        // =>  FALSE
[19:42:07.395]      // skip if-block "traceTPIU"
[19:42:07.395]    </control>
[19:42:07.395]  </sequence>
[19:42:07.395]  
[19:43:05.048]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[19:43:05.048]  
[19:43:05.097]  <debugvars>
[19:43:05.097]    // Pre-defined
[19:43:05.097]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:43:05.098]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:43:05.098]    __dp=0x00000000
[19:43:05.098]    __ap=0x00000000
[19:43:05.099]    __traceout=0x00000001      (SWO Trace)
[19:43:05.099]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:43:05.099]    __FlashAddr=0x00000000
[19:43:05.100]    __FlashLen=0x00000000
[19:43:05.100]    __FlashArg=0x00000000
[19:43:05.100]    __FlashOp=0x00000000
[19:43:05.101]    __Result=0x00000000
[19:43:05.101]    
[19:43:05.101]    // User-defined
[19:43:05.101]    DbgMCU_CR=0x00000007
[19:43:05.102]    DbgMCU_APB1_Fz=0x00000000
[19:43:05.102]    DbgMCU_APB2_Fz=0x00000000
[19:43:05.103]    TraceClk_Pin=0x00040002
[19:43:05.103]    TraceD0_Pin=0x00040003
[19:43:05.103]    TraceD1_Pin=0x00040004
[19:43:05.104]    TraceD2_Pin=0x00040005
[19:43:05.104]    TraceD3_Pin=0x00040006
[19:43:05.104]  </debugvars>
[19:43:05.105]  
[19:43:05.105]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[19:43:05.105]    <block atomic="false" info="">
[19:43:05.106]      Sequence("CheckID");
[19:43:05.106]        <sequence name="CheckID" Pname="" disable="false" info="">
[19:43:05.107]          <block atomic="false" info="">
[19:43:05.107]            __var pidr1 = 0;
[19:43:05.107]              // -> [pidr1 <= 0x00000000]
[19:43:05.108]            __var pidr2 = 0;
[19:43:05.108]              // -> [pidr2 <= 0x00000000]
[19:43:05.108]            __var jep106id = 0;
[19:43:05.109]              // -> [jep106id <= 0x00000000]
[19:43:05.109]            __var ROMTableBase = 0;
[19:43:05.109]              // -> [ROMTableBase <= 0x00000000]
[19:43:05.110]            __ap = 0;      // AHB-AP
[19:43:05.110]              // -> [__ap <= 0x00000000]
[19:43:05.111]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[19:43:05.112]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.112]              // -> [ROMTableBase <= 0xE00FF000]
[19:43:05.113]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[19:43:05.115]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.115]              // -> [pidr1 <= 0x00000004]
[19:43:05.116]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[19:43:05.117]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.117]              // -> [pidr2 <= 0x0000000A]
[19:43:05.117]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[19:43:05.117]              // -> [jep106id <= 0x00000020]
[19:43:05.118]          </block>
[19:43:05.118]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[19:43:05.118]            // if-block "jep106id != 0x20"
[19:43:05.119]              // =>  FALSE
[19:43:05.119]            // skip if-block "jep106id != 0x20"
[19:43:05.120]          </control>
[19:43:05.120]        </sequence>
[19:43:05.120]    </block>
[19:43:05.121]  </sequence>
[19:43:05.121]  
[19:43:05.122]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[19:43:05.122]  
[19:43:05.122]  <debugvars>
[19:43:05.123]    // Pre-defined
[19:43:05.123]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:43:05.123]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:43:05.124]    __dp=0x00000000
[19:43:05.124]    __ap=0x00000000
[19:43:05.125]    __traceout=0x00000001      (SWO Trace)
[19:43:05.125]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:43:05.125]    __FlashAddr=0x00000000
[19:43:05.126]    __FlashLen=0x00000000
[19:43:05.126]    __FlashArg=0x00000000
[19:43:05.127]    __FlashOp=0x00000000
[19:43:05.127]    __Result=0x00000000
[19:43:05.127]    
[19:43:05.127]    // User-defined
[19:43:05.128]    DbgMCU_CR=0x00000007
[19:43:05.128]    DbgMCU_APB1_Fz=0x00000000
[19:43:05.128]    DbgMCU_APB2_Fz=0x00000000
[19:43:05.129]    TraceClk_Pin=0x00040002
[19:43:05.129]    TraceD0_Pin=0x00040003
[19:43:05.129]    TraceD1_Pin=0x00040004
[19:43:05.130]    TraceD2_Pin=0x00040005
[19:43:05.130]    TraceD3_Pin=0x00040006
[19:43:05.131]  </debugvars>
[19:43:05.132]  
[19:43:05.132]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[19:43:05.132]    <block atomic="false" info="">
[19:43:05.133]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[19:43:05.134]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.135]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[19:43:05.136]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.136]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[19:43:05.138]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.138]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[19:43:05.140]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.140]    </block>
[19:43:05.141]  </sequence>
[19:43:05.141]  
[19:43:05.167]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[19:43:05.167]  
[19:43:05.167]  <debugvars>
[19:43:05.167]    // Pre-defined
[19:43:05.167]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:43:05.167]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:43:05.167]    __dp=0x00000000
[19:43:05.167]    __ap=0x00000000
[19:43:05.167]    __traceout=0x00000001      (SWO Trace)
[19:43:05.168]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:43:05.168]    __FlashAddr=0x00000000
[19:43:05.168]    __FlashLen=0x00000000
[19:43:05.168]    __FlashArg=0x00000000
[19:43:05.168]    __FlashOp=0x00000000
[19:43:05.168]    __Result=0x00000000
[19:43:05.168]    
[19:43:05.168]    // User-defined
[19:43:05.168]    DbgMCU_CR=0x00000007
[19:43:05.169]    DbgMCU_APB1_Fz=0x00000000
[19:43:05.169]    DbgMCU_APB2_Fz=0x00000000
[19:43:05.169]    TraceClk_Pin=0x00040002
[19:43:05.169]    TraceD0_Pin=0x00040003
[19:43:05.169]    TraceD1_Pin=0x00040004
[19:43:05.170]    TraceD2_Pin=0x00040005
[19:43:05.170]    TraceD3_Pin=0x00040006
[19:43:05.170]  </debugvars>
[19:43:05.170]  
[19:43:05.170]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:43:05.170]    <block atomic="false" info="">
[19:43:05.170]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:43:05.170]        // -> [traceSWO <= 0x00000001]
[19:43:05.170]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:43:05.171]        // -> [traceTPIU <= 0x00000000]
[19:43:05.171]    </block>
[19:43:05.171]    <control if="traceSWO" while="" timeout="0" info="">
[19:43:05.171]      // if-block "traceSWO"
[19:43:05.171]        // =>  TRUE
[19:43:05.171]      <block atomic="false" info="">
[19:43:05.171]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:43:05.171]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:43:05.171]            <block atomic="false" info="">
[19:43:05.171]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:43:05.172]                // -> [dbgmcu_val <= 0x00000000]
[19:43:05.172]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:43:05.172]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:43:05.172]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:43:05.172]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.173]                // -> [dbgmcu_val <= 0x00000007]
[19:43:05.173]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:43:05.173]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:43:05.173]              Sequence("ConfigureTraceSWOPin");
[19:43:05.173]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:43:05.174]                  <block atomic="false" info="">
[19:43:05.174]                    __var pin     = 0;
[19:43:05.174]                      // -> [pin <= 0x00000000]
[19:43:05.174]                    __var port    = 0;
[19:43:05.174]                      // -> [port <= 0x00000000]
[19:43:05.174]                    __var portAdr = 0;
[19:43:05.174]                      // -> [portAdr <= 0x00000000]
[19:43:05.174]                    __var pos     = 0;
[19:43:05.174]                      // -> [pos <= 0x00000000]
[19:43:05.174]                    __var SWO_Pin = 0x00010003;          // PB3
[19:43:05.175]                      // -> [SWO_Pin <= 0x00010003]
[19:43:05.175]                  </block>
[19:43:05.175]                  <block atomic="false" info="configure SWO">
[19:43:05.175]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:43:05.175]                      // -> [pin <= 0x00000003]
[19:43:05.175]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:43:05.175]                      // -> [port <= 0x00000001]
[19:43:05.175]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:43:05.175]                      // -> [portAdr <= 0x40020400]
[19:43:05.176]                    pos = pin * 2;
[19:43:05.176]                      // -> [pos <= 0x00000006]
[19:43:05.176]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:43:05.177]                      // -> [Read32(0x40023830) => 0x00000002]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.178]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.178]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:43:05.179]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.180]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.180]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:43:05.181]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.182]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.182]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:43:05.183]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.184]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.185]                  </block>
[19:43:05.185]                  <control if="pin <  8" while="" timeout="0" info="">
[19:43:05.185]                    // if-block "pin <  8"
[19:43:05.185]                      // =>  TRUE
[19:43:05.185]                    <block atomic="false" info="">
[19:43:05.185]                      pos = ((pin    ) & 7) * 4;
[19:43:05.186]                        // -> [pos <= 0x0000000C]
[19:43:05.186]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:43:05.186]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.187]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.188]                    </block>
[19:43:05.188]                    // end if-block "pin <  8"
[19:43:05.188]                  </control>
[19:43:05.188]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:43:05.188]                    // if-block "pin >= 8"
[19:43:05.188]                      // =>  FALSE
[19:43:05.189]                    // skip if-block "pin >= 8"
[19:43:05.189]                  </control>
[19:43:05.189]                </sequence>
[19:43:05.189]            </block>
[19:43:05.189]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:43:05.189]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:43:05.190]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.190]            </block>
[19:43:05.190]          </sequence>
[19:43:05.191]      </block>
[19:43:05.191]      // end if-block "traceSWO"
[19:43:05.191]    </control>
[19:43:05.191]    <control if="traceTPIU" while="" timeout="0" info="">
[19:43:05.191]      // if-block "traceTPIU"
[19:43:05.191]        // =>  FALSE
[19:43:05.191]      // skip if-block "traceTPIU"
[19:43:05.191]    </control>
[19:43:05.191]  </sequence>
[19:43:05.192]  
[19:43:05.206]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:43:05.206]  
[19:43:05.206]  <debugvars>
[19:43:05.206]    // Pre-defined
[19:43:05.206]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:43:05.206]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:43:05.207]    __dp=0x00000000
[19:43:05.207]    __ap=0x00000000
[19:43:05.207]    __traceout=0x00000001      (SWO Trace)
[19:43:05.207]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:43:05.207]    __FlashAddr=0x00000000
[19:43:05.207]    __FlashLen=0x00000000
[19:43:05.207]    __FlashArg=0x00000000
[19:43:05.207]    __FlashOp=0x00000000
[19:43:05.208]    __Result=0x00000000
[19:43:05.209]    
[19:43:05.209]    // User-defined
[19:43:05.209]    DbgMCU_CR=0x00000007
[19:43:05.209]    DbgMCU_APB1_Fz=0x00000000
[19:43:05.209]    DbgMCU_APB2_Fz=0x00000000
[19:43:05.209]    TraceClk_Pin=0x00040002
[19:43:05.209]    TraceD0_Pin=0x00040003
[19:43:05.210]    TraceD1_Pin=0x00040004
[19:43:05.210]    TraceD2_Pin=0x00040005
[19:43:05.210]    TraceD3_Pin=0x00040006
[19:43:05.210]  </debugvars>
[19:43:05.210]  
[19:43:05.211]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:43:05.211]    <block atomic="false" info="">
[19:43:05.211]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:43:05.211]        // -> [traceSWO <= 0x00000001]
[19:43:05.211]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:43:05.211]        // -> [traceTPIU <= 0x00000000]
[19:43:05.211]    </block>
[19:43:05.211]    <control if="traceSWO" while="" timeout="0" info="">
[19:43:05.212]      // if-block "traceSWO"
[19:43:05.212]        // =>  TRUE
[19:43:05.212]      <block atomic="false" info="">
[19:43:05.212]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:43:05.212]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:43:05.212]            <block atomic="false" info="">
[19:43:05.212]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:43:05.212]                // -> [dbgmcu_val <= 0x00000000]
[19:43:05.213]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:43:05.213]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:43:05.213]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:43:05.214]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.214]                // -> [dbgmcu_val <= 0x00000007]
[19:43:05.214]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:43:05.214]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:43:05.214]              Sequence("ConfigureTraceSWOPin");
[19:43:05.214]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:43:05.215]                  <block atomic="false" info="">
[19:43:05.215]                    __var pin     = 0;
[19:43:05.215]                      // -> [pin <= 0x00000000]
[19:43:05.215]                    __var port    = 0;
[19:43:05.215]                      // -> [port <= 0x00000000]
[19:43:05.215]                    __var portAdr = 0;
[19:43:05.215]                      // -> [portAdr <= 0x00000000]
[19:43:05.215]                    __var pos     = 0;
[19:43:05.215]                      // -> [pos <= 0x00000000]
[19:43:05.216]                    __var SWO_Pin = 0x00010003;          // PB3
[19:43:05.216]                      // -> [SWO_Pin <= 0x00010003]
[19:43:05.216]                  </block>
[19:43:05.216]                  <block atomic="false" info="configure SWO">
[19:43:05.216]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:43:05.216]                      // -> [pin <= 0x00000003]
[19:43:05.217]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:43:05.217]                      // -> [port <= 0x00000001]
[19:43:05.217]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:43:05.217]                      // -> [portAdr <= 0x40020400]
[19:43:05.218]                    pos = pin * 2;
[19:43:05.218]                      // -> [pos <= 0x00000006]
[19:43:05.218]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:43:05.218]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.219]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.219]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:43:05.220]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.221]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.221]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:43:05.222]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.223]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.223]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:43:05.224]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.225]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.225]                  </block>
[19:43:05.225]                  <control if="pin <  8" while="" timeout="0" info="">
[19:43:05.226]                    // if-block "pin <  8"
[19:43:05.226]                      // =>  TRUE
[19:43:05.226]                    <block atomic="false" info="">
[19:43:05.226]                      pos = ((pin    ) & 7) * 4;
[19:43:05.226]                        // -> [pos <= 0x0000000C]
[19:43:05.226]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:43:05.227]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.227]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.228]                    </block>
[19:43:05.228]                    // end if-block "pin <  8"
[19:43:05.228]                  </control>
[19:43:05.228]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:43:05.228]                    // if-block "pin >= 8"
[19:43:05.228]                      // =>  FALSE
[19:43:05.228]                    // skip if-block "pin >= 8"
[19:43:05.228]                  </control>
[19:43:05.229]                </sequence>
[19:43:05.229]            </block>
[19:43:05.229]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:43:05.229]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:43:05.230]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.230]            </block>
[19:43:05.230]          </sequence>
[19:43:05.230]      </block>
[19:43:05.230]      // end if-block "traceSWO"
[19:43:05.230]    </control>
[19:43:05.231]    <control if="traceTPIU" while="" timeout="0" info="">
[19:43:05.231]      // if-block "traceTPIU"
[19:43:05.231]        // =>  FALSE
[19:43:05.232]      // skip if-block "traceTPIU"
[19:43:05.232]    </control>
[19:43:05.232]  </sequence>
[19:43:05.232]  
[19:43:05.368]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[19:43:05.368]  
[19:43:05.416]  <debugvars>
[19:43:05.416]    // Pre-defined
[19:43:05.416]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:43:05.417]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:43:05.417]    __dp=0x00000000
[19:43:05.417]    __ap=0x00000000
[19:43:05.417]    __traceout=0x00000001      (SWO Trace)
[19:43:05.418]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:43:05.419]    __FlashAddr=0x00000000
[19:43:05.419]    __FlashLen=0x00000000
[19:43:05.419]    __FlashArg=0x00000000
[19:43:05.419]    __FlashOp=0x00000000
[19:43:05.419]    __Result=0x00000000
[19:43:05.419]    
[19:43:05.419]    // User-defined
[19:43:05.420]    DbgMCU_CR=0x00000007
[19:43:05.420]    DbgMCU_APB1_Fz=0x00000000
[19:43:05.420]    DbgMCU_APB2_Fz=0x00000000
[19:43:05.420]    TraceClk_Pin=0x00040002
[19:43:05.420]    TraceD0_Pin=0x00040003
[19:43:05.420]    TraceD1_Pin=0x00040004
[19:43:05.420]    TraceD2_Pin=0x00040005
[19:43:05.420]    TraceD3_Pin=0x00040006
[19:43:05.421]  </debugvars>
[19:43:05.421]  
[19:43:05.421]  <sequence name="TraceStart" Pname="" disable="false" info="">
[19:43:05.421]    <block atomic="false" info="">
[19:43:05.421]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[19:43:05.421]        // -> [traceSWO <= 0x00000001]
[19:43:05.421]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[19:43:05.421]        // -> [traceTPIU <= 0x00000000]
[19:43:05.422]    </block>
[19:43:05.422]    <control if="traceSWO" while="" timeout="0" info="">
[19:43:05.422]      // if-block "traceSWO"
[19:43:05.422]        // =>  TRUE
[19:43:05.422]      <block atomic="false" info="">
[19:43:05.422]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[19:43:05.422]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[19:43:05.423]            <block atomic="false" info="">
[19:43:05.423]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:43:05.424]                // -> [dbgmcu_val <= 0x00000000]
[19:43:05.424]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[19:43:05.424]                // -> [dbgmcu_trace_val <= 0x00000000]
[19:43:05.424]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[19:43:05.424]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.425]                // -> [dbgmcu_val <= 0x00000007]
[19:43:05.425]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[19:43:05.425]                // -> [dbgmcu_trace_val <= 0x00000020]
[19:43:05.425]              Sequence("ConfigureTraceSWOPin");
[19:43:05.425]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[19:43:05.425]                  <block atomic="false" info="">
[19:43:05.425]                    __var pin     = 0;
[19:43:05.426]                      // -> [pin <= 0x00000000]
[19:43:05.426]                    __var port    = 0;
[19:43:05.426]                      // -> [port <= 0x00000000]
[19:43:05.426]                    __var portAdr = 0;
[19:43:05.426]                      // -> [portAdr <= 0x00000000]
[19:43:05.427]                    __var pos     = 0;
[19:43:05.427]                      // -> [pos <= 0x00000000]
[19:43:05.427]                    __var SWO_Pin = 0x00010003;          // PB3
[19:43:05.427]                      // -> [SWO_Pin <= 0x00010003]
[19:43:05.428]                  </block>
[19:43:05.428]                  <block atomic="false" info="configure SWO">
[19:43:05.428]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[19:43:05.429]                      // -> [pin <= 0x00000003]
[19:43:05.429]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[19:43:05.429]                      // -> [port <= 0x00000001]
[19:43:05.429]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[19:43:05.429]                      // -> [portAdr <= 0x40020400]
[19:43:05.429]                    pos = pin * 2;
[19:43:05.429]                      // -> [pos <= 0x00000006]
[19:43:05.429]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[19:43:05.430]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.431]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.431]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[19:43:05.433]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.434]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.434]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[19:43:05.435]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.436]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.436]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[19:43:05.437]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.438]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.438]                  </block>
[19:43:05.439]                  <control if="pin <  8" while="" timeout="0" info="">
[19:43:05.439]                    // if-block "pin <  8"
[19:43:05.439]                      // =>  TRUE
[19:43:05.439]                    <block atomic="false" info="">
[19:43:05.439]                      pos = ((pin    ) & 7) * 4;
[19:43:05.439]                        // -> [pos <= 0x0000000C]
[19:43:05.440]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[19:43:05.440]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.441]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.442]                    </block>
[19:43:05.442]                    // end if-block "pin <  8"
[19:43:05.442]                  </control>
[19:43:05.442]                  <control if="pin >= 8" while="" timeout="0" info="">
[19:43:05.442]                    // if-block "pin >= 8"
[19:43:05.442]                      // =>  FALSE
[19:43:05.443]                    // skip if-block "pin >= 8"
[19:43:05.443]                  </control>
[19:43:05.443]                </sequence>
[19:43:05.443]            </block>
[19:43:05.443]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[19:43:05.443]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[19:43:05.444]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:05.444]            </block>
[19:43:05.445]          </sequence>
[19:43:05.445]      </block>
[19:43:05.445]      // end if-block "traceSWO"
[19:43:05.445]    </control>
[19:43:05.446]    <control if="traceTPIU" while="" timeout="0" info="">
[19:43:05.446]      // if-block "traceTPIU"
[19:43:05.446]        // =>  FALSE
[19:43:05.446]      // skip if-block "traceTPIU"
[19:43:05.446]    </control>
[19:43:05.446]  </sequence>
[19:43:05.446]  
[19:43:33.190]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[19:43:33.190]  
[19:43:33.237]  <debugvars>
[19:43:33.237]    // Pre-defined
[19:43:33.238]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[19:43:33.238]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[19:43:33.238]    __dp=0x00000000
[19:43:33.239]    __ap=0x00000000
[19:43:33.239]    __traceout=0x00000001      (SWO Trace)
[19:43:33.239]    __errorcontrol=0x00000000  (Skip Errors="False")
[19:43:33.239]    __FlashAddr=0x00000000
[19:43:33.239]    __FlashLen=0x00000000
[19:43:33.239]    __FlashArg=0x00000000
[19:43:33.240]    __FlashOp=0x00000000
[19:43:33.240]    __Result=0x00000000
[19:43:33.241]    
[19:43:33.241]    // User-defined
[19:43:33.241]    DbgMCU_CR=0x00000007
[19:43:33.241]    DbgMCU_APB1_Fz=0x00000000
[19:43:33.241]    DbgMCU_APB2_Fz=0x00000000
[19:43:33.242]    TraceClk_Pin=0x00040002
[19:43:33.242]    TraceD0_Pin=0x00040003
[19:43:33.243]    TraceD1_Pin=0x00040004
[19:43:33.243]    TraceD2_Pin=0x00040005
[19:43:33.243]    TraceD3_Pin=0x00040006
[19:43:33.244]  </debugvars>
[19:43:33.244]  
[19:43:33.244]  <sequence name="TraceStop" Pname="" disable="false" info="">
[19:43:33.245]    <block atomic="false" info="">
[19:43:33.245]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[19:43:33.245]        // -> [traceSWO <= 0x00000001]
[19:43:33.246]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[19:43:33.246]        // -> [traceTPIU <= 0x00000000]
[19:43:33.246]    </block>
[19:43:33.246]    <control if="traceSWO" while="" timeout="0" info="">
[19:43:33.247]      // if-block "traceSWO"
[19:43:33.247]        // =>  TRUE
[19:43:33.247]      <block atomic="false" info="">
[19:43:33.247]        Sequence("DisableTraceSWO");
[19:43:33.248]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[19:43:33.248]            <block atomic="false" info="">
[19:43:33.248]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[19:43:33.248]                // -> [dbgmcu_val <= 0x00000000]
[19:43:33.248]            </block>
[19:43:33.248]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[19:43:33.248]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[19:43:33.249]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[19:43:33.249]                // -> [dbgmcu_val <= 0x00000007]
[19:43:33.249]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[19:43:33.250]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[19:43:33.250]            </block>
[19:43:33.250]          </sequence>
[19:43:33.250]      </block>
[19:43:33.250]      // end if-block "traceSWO"
[19:43:33.251]    </control>
[19:43:33.251]    <control if="traceTPIU" while="" timeout="0" info="">
[19:43:33.251]      // if-block "traceTPIU"
[19:43:33.251]        // =>  FALSE
[19:43:33.251]      // skip if-block "traceTPIU"
[19:43:33.251]    </control>
[19:43:33.252]  </sequence>
[19:43:33.252]  
