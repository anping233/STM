/*
 *  CMSIS Pack Debug Access Sequence Log
 *  File        : D:\study\STM32\practice\gpio\prj\f411_proj_Sequences_0005.log
 *  Created     : 21:11:02 (06/06/2023)
 *  Device      : STM32F411CEUx
 *  PDSC File   : C:/Users/anping/AppData/Local/Arm/Packs/Keil/STM32F4xx_DFP/2.17.0/Keil.STM32F4xx_DFP.pdsc
 *  Config File : D:\study\STM32\practice\gpio\prj\DebugConfig\Target_1_STM32F411CEUx.dbgconf
 *
 */

[21:11:02.967]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:11:02.967]  
[21:11:02.968]  <debugvars>
[21:11:02.969]    // Pre-defined
[21:11:02.969]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:11:02.970]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[21:11:02.971]    __dp=0x00000000
[21:11:02.971]    __ap=0x00000000
[21:11:02.971]    __traceout=0x00000001      (SWO Trace)
[21:11:02.971]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:11:02.972]    __FlashAddr=0x00000000
[21:11:02.972]    __FlashLen=0x00000000
[21:11:02.972]    __FlashArg=0x00000000
[21:11:02.973]    __FlashOp=0x00000000
[21:11:02.973]    __Result=0x00000000
[21:11:02.973]    
[21:11:02.973]    // User-defined
[21:11:02.974]    DbgMCU_CR=0x00000007
[21:11:02.974]    DbgMCU_APB1_Fz=0x00000000
[21:11:02.974]    DbgMCU_APB2_Fz=0x00000000
[21:11:02.974]    TraceClk_Pin=0x00040002
[21:11:02.975]    TraceD0_Pin=0x00040003
[21:11:02.975]    TraceD1_Pin=0x00040004
[21:11:02.975]    TraceD2_Pin=0x00040005
[21:11:02.975]    TraceD3_Pin=0x00040006
[21:11:02.976]  </debugvars>
[21:11:02.976]  
[21:11:02.976]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:11:02.976]    <block atomic="false" info="">
[21:11:02.977]      Sequence("CheckID");
[21:11:02.977]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:11:02.978]          <block atomic="false" info="">
[21:11:02.978]            __var pidr1 = 0;
[21:11:02.978]              // -> [pidr1 <= 0x00000000]
[21:11:02.979]            __var pidr2 = 0;
[21:11:02.979]              // -> [pidr2 <= 0x00000000]
[21:11:02.979]            __var jep106id = 0;
[21:11:02.980]              // -> [jep106id <= 0x00000000]
[21:11:02.980]            __var ROMTableBase = 0;
[21:11:02.980]              // -> [ROMTableBase <= 0x00000000]
[21:11:02.981]            __ap = 0;      // AHB-AP
[21:11:02.981]              // -> [__ap <= 0x00000000]
[21:11:02.981]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:11:02.982]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[21:11:02.982]              // -> [ROMTableBase <= 0xE00FF000]
[21:11:02.983]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:11:02.984]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:11:02.984]              // -> [pidr1 <= 0x00000004]
[21:11:02.985]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:11:02.986]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[21:11:02.986]              // -> [pidr2 <= 0x0000000A]
[21:11:02.987]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:11:02.987]              // -> [jep106id <= 0x00000020]
[21:11:02.987]          </block>
[21:11:02.987]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:11:02.988]            // if-block "jep106id != 0x20"
[21:11:02.988]              // =>  FALSE
[21:11:02.988]            // skip if-block "jep106id != 0x20"
[21:11:02.988]          </control>
[21:11:02.989]        </sequence>
[21:11:02.989]    </block>
[21:11:02.989]  </sequence>
[21:11:02.989]  
[21:11:02.990]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:11:02.990]  
[21:11:02.990]  <debugvars>
[21:11:02.990]    // Pre-defined
[21:11:02.991]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:11:02.991]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[21:11:02.992]    __dp=0x00000000
[21:11:02.992]    __ap=0x00000000
[21:11:02.992]    __traceout=0x00000001      (SWO Trace)
[21:11:02.992]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:11:02.993]    __FlashAddr=0x00000000
[21:11:02.993]    __FlashLen=0x00000000
[21:11:02.993]    __FlashArg=0x00000000
[21:11:02.994]    __FlashOp=0x00000000
[21:11:02.994]    __Result=0x00000000
[21:11:02.994]    
[21:11:02.994]    // User-defined
[21:11:02.995]    DbgMCU_CR=0x00000007
[21:11:02.995]    DbgMCU_APB1_Fz=0x00000000
[21:11:02.995]    DbgMCU_APB2_Fz=0x00000000
[21:11:02.996]    TraceClk_Pin=0x00040002
[21:11:02.996]    TraceD0_Pin=0x00040003
[21:11:02.996]    TraceD1_Pin=0x00040004
[21:11:02.996]    TraceD2_Pin=0x00040005
[21:11:02.997]    TraceD3_Pin=0x00040006
[21:11:02.997]  </debugvars>
[21:11:02.997]  
[21:11:02.998]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:11:02.998]    <block atomic="false" info="">
[21:11:02.998]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:11:02.999]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:03.000]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:11:03.001]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:03.001]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:11:03.002]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:03.002]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:11:03.003]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:03.004]    </block>
[21:11:03.004]  </sequence>
[21:11:03.004]  
[21:11:04.368]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:11:04.368]  
[21:11:04.368]  <debugvars>
[21:11:04.369]    // Pre-defined
[21:11:04.369]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:11:04.370]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:11:04.370]    __dp=0x00000000
[21:11:04.370]    __ap=0x00000000
[21:11:04.370]    __traceout=0x00000001      (SWO Trace)
[21:11:04.371]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:11:04.371]    __FlashAddr=0x00000000
[21:11:04.371]    __FlashLen=0x00000000
[21:11:04.372]    __FlashArg=0x00000000
[21:11:04.372]    __FlashOp=0x00000000
[21:11:04.372]    __Result=0x00000000
[21:11:04.373]    
[21:11:04.373]    // User-defined
[21:11:04.373]    DbgMCU_CR=0x00000007
[21:11:04.374]    DbgMCU_APB1_Fz=0x00000000
[21:11:04.374]    DbgMCU_APB2_Fz=0x00000000
[21:11:04.374]    TraceClk_Pin=0x00040002
[21:11:04.375]    TraceD0_Pin=0x00040003
[21:11:04.375]    TraceD1_Pin=0x00040004
[21:11:04.375]    TraceD2_Pin=0x00040005
[21:11:04.376]    TraceD3_Pin=0x00040006
[21:11:04.376]  </debugvars>
[21:11:04.376]  
[21:11:04.377]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:11:04.377]    <block atomic="false" info="">
[21:11:04.378]      Sequence("CheckID");
[21:11:04.378]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:11:04.378]          <block atomic="false" info="">
[21:11:04.379]            __var pidr1 = 0;
[21:11:04.379]              // -> [pidr1 <= 0x00000000]
[21:11:04.380]            __var pidr2 = 0;
[21:11:04.380]              // -> [pidr2 <= 0x00000000]
[21:11:04.380]            __var jep106id = 0;
[21:11:04.381]              // -> [jep106id <= 0x00000000]
[21:11:04.381]            __var ROMTableBase = 0;
[21:11:04.382]              // -> [ROMTableBase <= 0x00000000]
[21:11:04.382]            __ap = 0;      // AHB-AP
[21:11:04.383]              // -> [__ap <= 0x00000000]
[21:11:04.383]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:11:04.384]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.384]              // -> [ROMTableBase <= 0xE00FF000]
[21:11:04.385]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:11:04.387]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.387]              // -> [pidr1 <= 0x00000004]
[21:11:04.388]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:11:04.389]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.389]              // -> [pidr2 <= 0x0000000A]
[21:11:04.390]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:11:04.390]              // -> [jep106id <= 0x00000020]
[21:11:04.391]          </block>
[21:11:04.391]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:11:04.391]            // if-block "jep106id != 0x20"
[21:11:04.391]              // =>  FALSE
[21:11:04.392]            // skip if-block "jep106id != 0x20"
[21:11:04.392]          </control>
[21:11:04.392]        </sequence>
[21:11:04.393]    </block>
[21:11:04.393]  </sequence>
[21:11:04.394]  
[21:11:04.394]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:11:04.394]  
[21:11:04.394]  <debugvars>
[21:11:04.395]    // Pre-defined
[21:11:04.395]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:11:04.395]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:11:04.396]    __dp=0x00000000
[21:11:04.396]    __ap=0x00000000
[21:11:04.396]    __traceout=0x00000001      (SWO Trace)
[21:11:04.397]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:11:04.397]    __FlashAddr=0x00000000
[21:11:04.398]    __FlashLen=0x00000000
[21:11:04.398]    __FlashArg=0x00000000
[21:11:04.399]    __FlashOp=0x00000000
[21:11:04.399]    __Result=0x00000000
[21:11:04.399]    
[21:11:04.399]    // User-defined
[21:11:04.400]    DbgMCU_CR=0x00000007
[21:11:04.400]    DbgMCU_APB1_Fz=0x00000000
[21:11:04.400]    DbgMCU_APB2_Fz=0x00000000
[21:11:04.400]    TraceClk_Pin=0x00040002
[21:11:04.401]    TraceD0_Pin=0x00040003
[21:11:04.401]    TraceD1_Pin=0x00040004
[21:11:04.402]    TraceD2_Pin=0x00040005
[21:11:04.402]    TraceD3_Pin=0x00040006
[21:11:04.402]  </debugvars>
[21:11:04.403]  
[21:11:04.403]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:11:04.403]    <block atomic="false" info="">
[21:11:04.404]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:11:04.405]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.406]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:11:04.407]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.408]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:11:04.409]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.410]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:11:04.411]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.412]    </block>
[21:11:04.412]  </sequence>
[21:11:04.412]  
[21:11:04.465]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[21:11:04.465]  
[21:11:04.465]  <debugvars>
[21:11:04.466]    // Pre-defined
[21:11:04.466]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:11:04.466]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:11:04.466]    __dp=0x00000000
[21:11:04.467]    __ap=0x00000000
[21:11:04.467]    __traceout=0x00000001      (SWO Trace)
[21:11:04.468]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:11:04.468]    __FlashAddr=0x00000000
[21:11:04.468]    __FlashLen=0x00000000
[21:11:04.468]    __FlashArg=0x00000000
[21:11:04.469]    __FlashOp=0x00000000
[21:11:04.469]    __Result=0x00000000
[21:11:04.469]    
[21:11:04.469]    // User-defined
[21:11:04.470]    DbgMCU_CR=0x00000007
[21:11:04.470]    DbgMCU_APB1_Fz=0x00000000
[21:11:04.471]    DbgMCU_APB2_Fz=0x00000000
[21:11:04.471]    TraceClk_Pin=0x00040002
[21:11:04.471]    TraceD0_Pin=0x00040003
[21:11:04.471]    TraceD1_Pin=0x00040004
[21:11:04.472]    TraceD2_Pin=0x00040005
[21:11:04.472]    TraceD3_Pin=0x00040006
[21:11:04.472]  </debugvars>
[21:11:04.473]  
[21:11:04.473]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:11:04.474]    <block atomic="false" info="">
[21:11:04.474]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:11:04.475]        // -> [traceSWO <= 0x00000001]
[21:11:04.475]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:11:04.475]        // -> [traceTPIU <= 0x00000000]
[21:11:04.476]    </block>
[21:11:04.476]    <control if="traceSWO" while="" timeout="0" info="">
[21:11:04.477]      // if-block "traceSWO"
[21:11:04.477]        // =>  TRUE
[21:11:04.477]      <block atomic="false" info="">
[21:11:04.478]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:11:04.478]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:11:04.479]            <block atomic="false" info="">
[21:11:04.479]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:11:04.479]                // -> [dbgmcu_val <= 0x00000000]
[21:11:04.480]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:11:04.480]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:11:04.480]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:11:04.482]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.482]                // -> [dbgmcu_val <= 0x00000007]
[21:11:04.483]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:11:04.483]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:11:04.483]              Sequence("ConfigureTraceSWOPin");
[21:11:04.484]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:11:04.484]                  <block atomic="false" info="">
[21:11:04.485]                    __var pin     = 0;
[21:11:04.485]                      // -> [pin <= 0x00000000]
[21:11:04.486]                    __var port    = 0;
[21:11:04.486]                      // -> [port <= 0x00000000]
[21:11:04.487]                    __var portAdr = 0;
[21:11:04.487]                      // -> [portAdr <= 0x00000000]
[21:11:04.488]                    __var pos     = 0;
[21:11:04.488]                      // -> [pos <= 0x00000000]
[21:11:04.488]                    __var SWO_Pin = 0x00010003;          // PB3
[21:11:04.489]                      // -> [SWO_Pin <= 0x00010003]
[21:11:04.489]                  </block>
[21:11:04.490]                  <block atomic="false" info="configure SWO">
[21:11:04.490]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:11:04.490]                      // -> [pin <= 0x00000003]
[21:11:04.491]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:11:04.491]                      // -> [port <= 0x00000001]
[21:11:04.491]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:11:04.492]                      // -> [portAdr <= 0x40020400]
[21:11:04.492]                    pos = pin * 2;
[21:11:04.493]                      // -> [pos <= 0x00000006]
[21:11:04.493]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:11:04.495]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.497]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.497]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:11:04.498]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.500]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.500]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:11:04.502]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.503]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.503]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:11:04.505]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.506]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.507]                  </block>
[21:11:04.507]                  <control if="pin <  8" while="" timeout="0" info="">
[21:11:04.508]                    // if-block "pin <  8"
[21:11:04.508]                      // =>  TRUE
[21:11:04.509]                    <block atomic="false" info="">
[21:11:04.509]                      pos = ((pin    ) & 7) * 4;
[21:11:04.509]                        // -> [pos <= 0x0000000C]
[21:11:04.510]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:11:04.511]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.513]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.513]                    </block>
[21:11:04.513]                    // end if-block "pin <  8"
[21:11:04.514]                  </control>
[21:11:04.514]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:11:04.514]                    // if-block "pin >= 8"
[21:11:04.514]                      // =>  FALSE
[21:11:04.515]                    // skip if-block "pin >= 8"
[21:11:04.515]                  </control>
[21:11:04.515]                </sequence>
[21:11:04.516]            </block>
[21:11:04.516]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:11:04.516]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:11:04.518]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.518]            </block>
[21:11:04.519]          </sequence>
[21:11:04.519]      </block>
[21:11:04.520]      // end if-block "traceSWO"
[21:11:04.520]    </control>
[21:11:04.521]    <control if="traceTPIU" while="" timeout="0" info="">
[21:11:04.521]      // if-block "traceTPIU"
[21:11:04.522]        // =>  FALSE
[21:11:04.522]      // skip if-block "traceTPIU"
[21:11:04.522]    </control>
[21:11:04.523]  </sequence>
[21:11:04.523]  
[21:11:04.547]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:11:04.547]  
[21:11:04.547]  <debugvars>
[21:11:04.547]    // Pre-defined
[21:11:04.548]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:11:04.548]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:11:04.548]    __dp=0x00000000
[21:11:04.549]    __ap=0x00000000
[21:11:04.549]    __traceout=0x00000001      (SWO Trace)
[21:11:04.549]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:11:04.550]    __FlashAddr=0x00000000
[21:11:04.550]    __FlashLen=0x00000000
[21:11:04.551]    __FlashArg=0x00000000
[21:11:04.551]    __FlashOp=0x00000000
[21:11:04.552]    __Result=0x00000000
[21:11:04.552]    
[21:11:04.552]    // User-defined
[21:11:04.552]    DbgMCU_CR=0x00000007
[21:11:04.553]    DbgMCU_APB1_Fz=0x00000000
[21:11:04.553]    DbgMCU_APB2_Fz=0x00000000
[21:11:04.554]    TraceClk_Pin=0x00040002
[21:11:04.554]    TraceD0_Pin=0x00040003
[21:11:04.554]    TraceD1_Pin=0x00040004
[21:11:04.555]    TraceD2_Pin=0x00040005
[21:11:04.555]    TraceD3_Pin=0x00040006
[21:11:04.555]  </debugvars>
[21:11:04.556]  
[21:11:04.556]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:11:04.556]    <block atomic="false" info="">
[21:11:04.557]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:11:04.557]        // -> [traceSWO <= 0x00000001]
[21:11:04.558]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:11:04.558]        // -> [traceTPIU <= 0x00000000]
[21:11:04.558]    </block>
[21:11:04.559]    <control if="traceSWO" while="" timeout="0" info="">
[21:11:04.559]      // if-block "traceSWO"
[21:11:04.559]        // =>  TRUE
[21:11:04.560]      <block atomic="false" info="">
[21:11:04.560]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:11:04.560]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:11:04.561]            <block atomic="false" info="">
[21:11:04.561]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:11:04.561]                // -> [dbgmcu_val <= 0x00000000]
[21:11:04.562]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:11:04.562]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:11:04.563]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:11:04.563]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.565]                // -> [dbgmcu_val <= 0x00000007]
[21:11:04.565]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:11:04.565]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:11:04.566]              Sequence("ConfigureTraceSWOPin");
[21:11:04.566]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:11:04.566]                  <block atomic="false" info="">
[21:11:04.568]                    __var pin     = 0;
[21:11:04.568]                      // -> [pin <= 0x00000000]
[21:11:04.568]                    __var port    = 0;
[21:11:04.568]                      // -> [port <= 0x00000000]
[21:11:04.568]                    __var portAdr = 0;
[21:11:04.569]                      // -> [portAdr <= 0x00000000]
[21:11:04.569]                    __var pos     = 0;
[21:11:04.569]                      // -> [pos <= 0x00000000]
[21:11:04.570]                    __var SWO_Pin = 0x00010003;          // PB3
[21:11:04.570]                      // -> [SWO_Pin <= 0x00010003]
[21:11:04.570]                  </block>
[21:11:04.571]                  <block atomic="false" info="configure SWO">
[21:11:04.571]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:11:04.571]                      // -> [pin <= 0x00000003]
[21:11:04.572]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:11:04.572]                      // -> [port <= 0x00000001]
[21:11:04.572]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:11:04.574]                      // -> [portAdr <= 0x40020400]
[21:11:04.574]                    pos = pin * 2;
[21:11:04.574]                      // -> [pos <= 0x00000006]
[21:11:04.575]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:11:04.576]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.578]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.578]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:11:04.579]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.581]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.581]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:11:04.583]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.585]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.585]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:11:04.586]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.588]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.588]                  </block>
[21:11:04.589]                  <control if="pin <  8" while="" timeout="0" info="">
[21:11:04.589]                    // if-block "pin <  8"
[21:11:04.589]                      // =>  TRUE
[21:11:04.589]                    <block atomic="false" info="">
[21:11:04.591]                      pos = ((pin    ) & 7) * 4;
[21:11:04.591]                        // -> [pos <= 0x0000000C]
[21:11:04.591]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:11:04.592]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.594]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.595]                    </block>
[21:11:04.595]                    // end if-block "pin <  8"
[21:11:04.595]                  </control>
[21:11:04.596]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:11:04.596]                    // if-block "pin >= 8"
[21:11:04.596]                      // =>  FALSE
[21:11:04.596]                    // skip if-block "pin >= 8"
[21:11:04.596]                  </control>
[21:11:04.597]                </sequence>
[21:11:04.597]            </block>
[21:11:04.598]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:11:04.598]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:11:04.599]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:04.600]            </block>
[21:11:04.601]          </sequence>
[21:11:04.601]      </block>
[21:11:04.601]      // end if-block "traceSWO"
[21:11:04.602]    </control>
[21:11:04.602]    <control if="traceTPIU" while="" timeout="0" info="">
[21:11:04.602]      // if-block "traceTPIU"
[21:11:04.603]        // =>  FALSE
[21:11:04.603]      // skip if-block "traceTPIU"
[21:11:04.604]    </control>
[21:11:04.604]  </sequence>
[21:11:04.605]  
[21:11:05.114]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:11:05.114]  
[21:11:05.130]  <debugvars>
[21:11:05.130]    // Pre-defined
[21:11:05.131]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:11:05.131]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:11:05.131]    __dp=0x00000000
[21:11:05.131]    __ap=0x00000000
[21:11:05.132]    __traceout=0x00000001      (SWO Trace)
[21:11:05.132]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:11:05.132]    __FlashAddr=0x00000000
[21:11:05.132]    __FlashLen=0x00000000
[21:11:05.133]    __FlashArg=0x00000000
[21:11:05.133]    __FlashOp=0x00000000
[21:11:05.133]    __Result=0x00000000
[21:11:05.133]    
[21:11:05.134]    // User-defined
[21:11:05.134]    DbgMCU_CR=0x00000007
[21:11:05.134]    DbgMCU_APB1_Fz=0x00000000
[21:11:05.134]    DbgMCU_APB2_Fz=0x00000000
[21:11:05.134]    TraceClk_Pin=0x00040002
[21:11:05.134]    TraceD0_Pin=0x00040003
[21:11:05.134]    TraceD1_Pin=0x00040004
[21:11:05.135]    TraceD2_Pin=0x00040005
[21:11:05.135]    TraceD3_Pin=0x00040006
[21:11:05.135]  </debugvars>
[21:11:05.135]  
[21:11:05.136]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:11:05.136]    <block atomic="false" info="">
[21:11:05.137]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:11:05.137]        // -> [traceSWO <= 0x00000001]
[21:11:05.137]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:11:05.137]        // -> [traceTPIU <= 0x00000000]
[21:11:05.138]    </block>
[21:11:05.138]    <control if="traceSWO" while="" timeout="0" info="">
[21:11:05.138]      // if-block "traceSWO"
[21:11:05.138]        // =>  TRUE
[21:11:05.139]      <block atomic="false" info="">
[21:11:05.139]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:11:05.140]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:11:05.140]            <block atomic="false" info="">
[21:11:05.140]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:11:05.140]                // -> [dbgmcu_val <= 0x00000000]
[21:11:05.140]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:11:05.140]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:11:05.141]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:11:05.142]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:11:05.142]                // -> [dbgmcu_val <= 0x00000007]
[21:11:05.143]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:11:05.143]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:11:05.144]              Sequence("ConfigureTraceSWOPin");
[21:11:05.144]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:11:05.145]                  <block atomic="false" info="">
[21:11:05.145]                    __var pin     = 0;
[21:11:05.145]                      // -> [pin <= 0x00000000]
[21:11:05.145]                    __var port    = 0;
[21:11:05.146]                      // -> [port <= 0x00000000]
[21:11:05.146]                    __var portAdr = 0;
[21:11:05.146]                      // -> [portAdr <= 0x00000000]
[21:11:05.147]                    __var pos     = 0;
[21:11:05.147]                      // -> [pos <= 0x00000000]
[21:11:05.147]                    __var SWO_Pin = 0x00010003;          // PB3
[21:11:05.148]                      // -> [SWO_Pin <= 0x00010003]
[21:11:05.148]                  </block>
[21:11:05.149]                  <block atomic="false" info="configure SWO">
[21:11:05.149]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:11:05.149]                      // -> [pin <= 0x00000003]
[21:11:05.149]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:11:05.149]                      // -> [port <= 0x00000001]
[21:11:05.150]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:11:05.150]                      // -> [portAdr <= 0x40020400]
[21:11:05.150]                    pos = pin * 2;
[21:11:05.150]                      // -> [pos <= 0x00000006]
[21:11:05.151]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:11:05.152]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:11:05.153]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:05.154]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:11:05.155]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:11:05.156]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:05.157]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:11:05.158]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:11:05.159]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:05.159]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:11:05.161]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:11:05.162]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:05.162]                  </block>
[21:11:05.163]                  <control if="pin <  8" while="" timeout="0" info="">
[21:11:05.163]                    // if-block "pin <  8"
[21:11:05.163]                      // =>  TRUE
[21:11:05.164]                    <block atomic="false" info="">
[21:11:05.164]                      pos = ((pin    ) & 7) * 4;
[21:11:05.165]                        // -> [pos <= 0x0000000C]
[21:11:05.165]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:11:05.166]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:11:05.168]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:05.168]                    </block>
[21:11:05.168]                    // end if-block "pin <  8"
[21:11:05.169]                  </control>
[21:11:05.169]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:11:05.169]                    // if-block "pin >= 8"
[21:11:05.170]                      // =>  FALSE
[21:11:05.170]                    // skip if-block "pin >= 8"
[21:11:05.170]                  </control>
[21:11:05.170]                </sequence>
[21:11:05.171]            </block>
[21:11:05.171]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:11:05.171]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:11:05.172]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:11:05.173]            </block>
[21:11:05.173]          </sequence>
[21:11:05.173]      </block>
[21:11:05.173]      // end if-block "traceSWO"
[21:11:05.174]    </control>
[21:11:05.174]    <control if="traceTPIU" while="" timeout="0" info="">
[21:11:05.175]      // if-block "traceTPIU"
[21:11:05.175]        // =>  FALSE
[21:11:05.175]      // skip if-block "traceTPIU"
[21:11:05.176]    </control>
[21:11:05.176]  </sequence>
[21:11:05.176]  
[21:12:34.512]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[21:12:34.512]  
[21:12:34.559]  <debugvars>
[21:12:34.559]    // Pre-defined
[21:12:34.559]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:12:34.560]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:12:34.560]    __dp=0x00000000
[21:12:34.561]    __ap=0x00000000
[21:12:34.562]    __traceout=0x00000001      (SWO Trace)
[21:12:34.562]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:12:34.563]    __FlashAddr=0x00000000
[21:12:34.563]    __FlashLen=0x00000000
[21:12:34.564]    __FlashArg=0x00000000
[21:12:34.564]    __FlashOp=0x00000000
[21:12:34.565]    __Result=0x00000000
[21:12:34.566]    
[21:12:34.566]    // User-defined
[21:12:34.566]    DbgMCU_CR=0x00000007
[21:12:34.566]    DbgMCU_APB1_Fz=0x00000000
[21:12:34.567]    DbgMCU_APB2_Fz=0x00000000
[21:12:34.567]    TraceClk_Pin=0x00040002
[21:12:34.568]    TraceD0_Pin=0x00040003
[21:12:34.568]    TraceD1_Pin=0x00040004
[21:12:34.569]    TraceD2_Pin=0x00040005
[21:12:34.569]    TraceD3_Pin=0x00040006
[21:12:34.569]  </debugvars>
[21:12:34.570]  
[21:12:34.570]  <sequence name="TraceStop" Pname="" disable="false" info="">
[21:12:34.571]    <block atomic="false" info="">
[21:12:34.571]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[21:12:34.572]        // -> [traceSWO <= 0x00000001]
[21:12:34.572]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[21:12:34.572]        // -> [traceTPIU <= 0x00000000]
[21:12:34.573]    </block>
[21:12:34.573]    <control if="traceSWO" while="" timeout="0" info="">
[21:12:34.573]      // if-block "traceSWO"
[21:12:34.574]        // =>  TRUE
[21:12:34.575]      <block atomic="false" info="">
[21:12:34.575]        Sequence("DisableTraceSWO");
[21:12:34.576]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[21:12:34.576]            <block atomic="false" info="">
[21:12:34.577]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:12:34.577]                // -> [dbgmcu_val <= 0x00000000]
[21:12:34.578]            </block>
[21:12:34.578]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[21:12:34.578]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[21:12:34.580]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:12:34.580]                // -> [dbgmcu_val <= 0x00000007]
[21:12:34.581]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[21:12:34.583]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:34.583]            </block>
[21:12:34.584]          </sequence>
[21:12:34.585]      </block>
[21:12:34.585]      // end if-block "traceSWO"
[21:12:34.586]    </control>
[21:12:34.586]    <control if="traceTPIU" while="" timeout="0" info="">
[21:12:34.587]      // if-block "traceTPIU"
[21:12:34.587]        // =>  FALSE
[21:12:34.588]      // skip if-block "traceTPIU"
[21:12:34.588]    </control>
[21:12:34.589]  </sequence>
[21:12:34.589]  
[21:12:44.371]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:12:44.371]  
[21:12:44.419]  <debugvars>
[21:12:44.419]    // Pre-defined
[21:12:44.420]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:12:44.420]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:12:44.421]    __dp=0x00000000
[21:12:44.421]    __ap=0x00000000
[21:12:44.421]    __traceout=0x00000001      (SWO Trace)
[21:12:44.422]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:12:44.422]    __FlashAddr=0x00000000
[21:12:44.423]    __FlashLen=0x00000000
[21:12:44.423]    __FlashArg=0x00000000
[21:12:44.423]    __FlashOp=0x00000000
[21:12:44.424]    __Result=0x00000000
[21:12:44.424]    
[21:12:44.424]    // User-defined
[21:12:44.425]    DbgMCU_CR=0x00000007
[21:12:44.425]    DbgMCU_APB1_Fz=0x00000000
[21:12:44.425]    DbgMCU_APB2_Fz=0x00000000
[21:12:44.426]    TraceClk_Pin=0x00040002
[21:12:44.427]    TraceD0_Pin=0x00040003
[21:12:44.427]    TraceD1_Pin=0x00040004
[21:12:44.428]    TraceD2_Pin=0x00040005
[21:12:44.428]    TraceD3_Pin=0x00040006
[21:12:44.429]  </debugvars>
[21:12:44.429]  
[21:12:44.430]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:12:44.430]    <block atomic="false" info="">
[21:12:44.430]      Sequence("CheckID");
[21:12:44.431]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:12:44.431]          <block atomic="false" info="">
[21:12:44.431]            __var pidr1 = 0;
[21:12:44.432]              // -> [pidr1 <= 0x00000000]
[21:12:44.432]            __var pidr2 = 0;
[21:12:44.432]              // -> [pidr2 <= 0x00000000]
[21:12:44.433]            __var jep106id = 0;
[21:12:44.433]              // -> [jep106id <= 0x00000000]
[21:12:44.433]            __var ROMTableBase = 0;
[21:12:44.434]              // -> [ROMTableBase <= 0x00000000]
[21:12:44.434]            __ap = 0;      // AHB-AP
[21:12:44.434]              // -> [__ap <= 0x00000000]
[21:12:44.434]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:12:44.435]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.436]              // -> [ROMTableBase <= 0xE00FF000]
[21:12:44.436]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:12:44.438]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.438]              // -> [pidr1 <= 0x00000004]
[21:12:44.439]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:12:44.440]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.441]              // -> [pidr2 <= 0x0000000A]
[21:12:44.441]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:12:44.442]              // -> [jep106id <= 0x00000020]
[21:12:44.442]          </block>
[21:12:44.443]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:12:44.443]            // if-block "jep106id != 0x20"
[21:12:44.443]              // =>  FALSE
[21:12:44.444]            // skip if-block "jep106id != 0x20"
[21:12:44.444]          </control>
[21:12:44.444]        </sequence>
[21:12:44.445]    </block>
[21:12:44.445]  </sequence>
[21:12:44.446]  
[21:12:44.446]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:12:44.446]  
[21:12:44.446]  <debugvars>
[21:12:44.447]    // Pre-defined
[21:12:44.447]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:12:44.448]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:12:44.448]    __dp=0x00000000
[21:12:44.448]    __ap=0x00000000
[21:12:44.449]    __traceout=0x00000001      (SWO Trace)
[21:12:44.449]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:12:44.449]    __FlashAddr=0x00000000
[21:12:44.450]    __FlashLen=0x00000000
[21:12:44.450]    __FlashArg=0x00000000
[21:12:44.450]    __FlashOp=0x00000000
[21:12:44.451]    __Result=0x00000000
[21:12:44.451]    
[21:12:44.451]    // User-defined
[21:12:44.451]    DbgMCU_CR=0x00000007
[21:12:44.452]    DbgMCU_APB1_Fz=0x00000000
[21:12:44.452]    DbgMCU_APB2_Fz=0x00000000
[21:12:44.453]    TraceClk_Pin=0x00040002
[21:12:44.453]    TraceD0_Pin=0x00040003
[21:12:44.453]    TraceD1_Pin=0x00040004
[21:12:44.454]    TraceD2_Pin=0x00040005
[21:12:44.454]    TraceD3_Pin=0x00040006
[21:12:44.455]  </debugvars>
[21:12:44.455]  
[21:12:44.456]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:12:44.456]    <block atomic="false" info="">
[21:12:44.457]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:12:44.459]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.459]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:12:44.461]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.462]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:12:44.463]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.464]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:12:44.465]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.465]    </block>
[21:12:44.465]  </sequence>
[21:12:44.467]  
[21:12:44.524]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[21:12:44.524]  
[21:12:44.525]  <debugvars>
[21:12:44.525]    // Pre-defined
[21:12:44.526]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:12:44.526]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:12:44.527]    __dp=0x00000000
[21:12:44.527]    __ap=0x00000000
[21:12:44.527]    __traceout=0x00000001      (SWO Trace)
[21:12:44.528]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:12:44.528]    __FlashAddr=0x00000000
[21:12:44.528]    __FlashLen=0x00000000
[21:12:44.529]    __FlashArg=0x00000000
[21:12:44.529]    __FlashOp=0x00000000
[21:12:44.529]    __Result=0x00000000
[21:12:44.529]    
[21:12:44.529]    // User-defined
[21:12:44.530]    DbgMCU_CR=0x00000007
[21:12:44.530]    DbgMCU_APB1_Fz=0x00000000
[21:12:44.530]    DbgMCU_APB2_Fz=0x00000000
[21:12:44.531]    TraceClk_Pin=0x00040002
[21:12:44.531]    TraceD0_Pin=0x00040003
[21:12:44.531]    TraceD1_Pin=0x00040004
[21:12:44.532]    TraceD2_Pin=0x00040005
[21:12:44.532]    TraceD3_Pin=0x00040006
[21:12:44.533]  </debugvars>
[21:12:44.533]  
[21:12:44.533]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:12:44.533]    <block atomic="false" info="">
[21:12:44.534]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:12:44.534]        // -> [traceSWO <= 0x00000001]
[21:12:44.534]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:12:44.534]        // -> [traceTPIU <= 0x00000000]
[21:12:44.535]    </block>
[21:12:44.535]    <control if="traceSWO" while="" timeout="0" info="">
[21:12:44.535]      // if-block "traceSWO"
[21:12:44.536]        // =>  TRUE
[21:12:44.536]      <block atomic="false" info="">
[21:12:44.536]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:12:44.537]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:12:44.537]            <block atomic="false" info="">
[21:12:44.538]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:12:44.538]                // -> [dbgmcu_val <= 0x00000000]
[21:12:44.538]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:12:44.539]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:12:44.539]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:12:44.541]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.541]                // -> [dbgmcu_val <= 0x00000007]
[21:12:44.541]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:12:44.542]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:12:44.542]              Sequence("ConfigureTraceSWOPin");
[21:12:44.543]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:12:44.543]                  <block atomic="false" info="">
[21:12:44.544]                    __var pin     = 0;
[21:12:44.544]                      // -> [pin <= 0x00000000]
[21:12:44.544]                    __var port    = 0;
[21:12:44.545]                      // -> [port <= 0x00000000]
[21:12:44.545]                    __var portAdr = 0;
[21:12:44.545]                      // -> [portAdr <= 0x00000000]
[21:12:44.546]                    __var pos     = 0;
[21:12:44.546]                      // -> [pos <= 0x00000000]
[21:12:44.546]                    __var SWO_Pin = 0x00010003;          // PB3
[21:12:44.547]                      // -> [SWO_Pin <= 0x00010003]
[21:12:44.547]                  </block>
[21:12:44.547]                  <block atomic="false" info="configure SWO">
[21:12:44.548]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:12:44.548]                      // -> [pin <= 0x00000003]
[21:12:44.549]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:12:44.549]                      // -> [port <= 0x00000001]
[21:12:44.549]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:12:44.550]                      // -> [portAdr <= 0x40020400]
[21:12:44.551]                    pos = pin * 2;
[21:12:44.551]                      // -> [pos <= 0x00000006]
[21:12:44.552]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:12:44.553]                      // -> [Read32(0x40023830) => 0x00000007]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.554]                      // -> [Write32(0x40023830, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.555]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:12:44.557]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.558]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.559]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:12:44.561]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.561]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.562]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:12:44.563]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.565]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.565]                  </block>
[21:12:44.566]                  <control if="pin <  8" while="" timeout="0" info="">
[21:12:44.566]                    // if-block "pin <  8"
[21:12:44.567]                      // =>  TRUE
[21:12:44.567]                    <block atomic="false" info="">
[21:12:44.567]                      pos = ((pin    ) & 7) * 4;
[21:12:44.568]                        // -> [pos <= 0x0000000C]
[21:12:44.568]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:12:44.570]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.571]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.572]                    </block>
[21:12:44.572]                    // end if-block "pin <  8"
[21:12:44.572]                  </control>
[21:12:44.573]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:12:44.573]                    // if-block "pin >= 8"
[21:12:44.573]                      // =>  FALSE
[21:12:44.574]                    // skip if-block "pin >= 8"
[21:12:44.574]                  </control>
[21:12:44.575]                </sequence>
[21:12:44.575]            </block>
[21:12:44.575]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:12:44.576]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:12:44.577]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.578]            </block>
[21:12:44.578]          </sequence>
[21:12:44.578]      </block>
[21:12:44.579]      // end if-block "traceSWO"
[21:12:44.579]    </control>
[21:12:44.579]    <control if="traceTPIU" while="" timeout="0" info="">
[21:12:44.580]      // if-block "traceTPIU"
[21:12:44.580]        // =>  FALSE
[21:12:44.581]      // skip if-block "traceTPIU"
[21:12:44.581]    </control>
[21:12:44.581]  </sequence>
[21:12:44.582]  
[21:12:44.605]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:12:44.605]  
[21:12:44.606]  <debugvars>
[21:12:44.606]    // Pre-defined
[21:12:44.606]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:12:44.607]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:12:44.607]    __dp=0x00000000
[21:12:44.608]    __ap=0x00000000
[21:12:44.608]    __traceout=0x00000001      (SWO Trace)
[21:12:44.609]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:12:44.609]    __FlashAddr=0x00000000
[21:12:44.609]    __FlashLen=0x00000000
[21:12:44.609]    __FlashArg=0x00000000
[21:12:44.610]    __FlashOp=0x00000000
[21:12:44.610]    __Result=0x00000000
[21:12:44.610]    
[21:12:44.610]    // User-defined
[21:12:44.611]    DbgMCU_CR=0x00000007
[21:12:44.612]    DbgMCU_APB1_Fz=0x00000000
[21:12:44.612]    DbgMCU_APB2_Fz=0x00000000
[21:12:44.612]    TraceClk_Pin=0x00040002
[21:12:44.613]    TraceD0_Pin=0x00040003
[21:12:44.613]    TraceD1_Pin=0x00040004
[21:12:44.613]    TraceD2_Pin=0x00040005
[21:12:44.614]    TraceD3_Pin=0x00040006
[21:12:44.614]  </debugvars>
[21:12:44.614]  
[21:12:44.615]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:12:44.615]    <block atomic="false" info="">
[21:12:44.616]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:12:44.616]        // -> [traceSWO <= 0x00000001]
[21:12:44.616]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:12:44.617]        // -> [traceTPIU <= 0x00000000]
[21:12:44.617]    </block>
[21:12:44.617]    <control if="traceSWO" while="" timeout="0" info="">
[21:12:44.618]      // if-block "traceSWO"
[21:12:44.618]        // =>  TRUE
[21:12:44.619]      <block atomic="false" info="">
[21:12:44.619]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:12:44.619]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:12:44.620]            <block atomic="false" info="">
[21:12:44.620]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:12:44.620]                // -> [dbgmcu_val <= 0x00000000]
[21:12:44.621]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:12:44.621]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:12:44.622]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:12:44.623]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.624]                // -> [dbgmcu_val <= 0x00000007]
[21:12:44.624]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:12:44.625]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:12:44.625]              Sequence("ConfigureTraceSWOPin");
[21:12:44.625]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:12:44.626]                  <block atomic="false" info="">
[21:12:44.626]                    __var pin     = 0;
[21:12:44.627]                      // -> [pin <= 0x00000000]
[21:12:44.627]                    __var port    = 0;
[21:12:44.628]                      // -> [port <= 0x00000000]
[21:12:44.628]                    __var portAdr = 0;
[21:12:44.629]                      // -> [portAdr <= 0x00000000]
[21:12:44.630]                    __var pos     = 0;
[21:12:44.630]                      // -> [pos <= 0x00000000]
[21:12:44.631]                    __var SWO_Pin = 0x00010003;          // PB3
[21:12:44.631]                      // -> [SWO_Pin <= 0x00010003]
[21:12:44.632]                  </block>
[21:12:44.632]                  <block atomic="false" info="configure SWO">
[21:12:44.633]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:12:44.633]                      // -> [pin <= 0x00000003]
[21:12:44.633]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:12:44.633]                      // -> [port <= 0x00000001]
[21:12:44.633]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:12:44.634]                      // -> [portAdr <= 0x40020400]
[21:12:44.634]                    pos = pin * 2;
[21:12:44.635]                      // -> [pos <= 0x00000006]
[21:12:44.635]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:12:44.637]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.638]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.639]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:12:44.640]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.642]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.642]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:12:44.643]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.645]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.645]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:12:44.647]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.649]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.649]                  </block>
[21:12:44.649]                  <control if="pin <  8" while="" timeout="0" info="">
[21:12:44.650]                    // if-block "pin <  8"
[21:12:44.650]                      // =>  TRUE
[21:12:44.650]                    <block atomic="false" info="">
[21:12:44.651]                      pos = ((pin    ) & 7) * 4;
[21:12:44.651]                        // -> [pos <= 0x0000000C]
[21:12:44.651]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:12:44.652]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.654]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.655]                    </block>
[21:12:44.655]                    // end if-block "pin <  8"
[21:12:44.655]                  </control>
[21:12:44.656]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:12:44.656]                    // if-block "pin >= 8"
[21:12:44.657]                      // =>  FALSE
[21:12:44.657]                    // skip if-block "pin >= 8"
[21:12:44.657]                  </control>
[21:12:44.658]                </sequence>
[21:12:44.658]            </block>
[21:12:44.658]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:12:44.659]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:12:44.661]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:44.661]            </block>
[21:12:44.661]          </sequence>
[21:12:44.662]      </block>
[21:12:44.662]      // end if-block "traceSWO"
[21:12:44.662]    </control>
[21:12:44.663]    <control if="traceTPIU" while="" timeout="0" info="">
[21:12:44.663]      // if-block "traceTPIU"
[21:12:44.663]        // =>  FALSE
[21:12:44.664]      // skip if-block "traceTPIU"
[21:12:44.664]    </control>
[21:12:44.664]  </sequence>
[21:12:44.665]  
[21:12:45.071]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:12:45.071]  
[21:12:45.119]  <debugvars>
[21:12:45.119]    // Pre-defined
[21:12:45.120]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:12:45.120]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:12:45.120]    __dp=0x00000000
[21:12:45.121]    __ap=0x00000000
[21:12:45.121]    __traceout=0x00000001      (SWO Trace)
[21:12:45.121]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:12:45.122]    __FlashAddr=0x00000000
[21:12:45.122]    __FlashLen=0x00000000
[21:12:45.122]    __FlashArg=0x00000000
[21:12:45.123]    __FlashOp=0x00000000
[21:12:45.123]    __Result=0x00000000
[21:12:45.123]    
[21:12:45.123]    // User-defined
[21:12:45.124]    DbgMCU_CR=0x00000007
[21:12:45.124]    DbgMCU_APB1_Fz=0x00000000
[21:12:45.125]    DbgMCU_APB2_Fz=0x00000000
[21:12:45.125]    TraceClk_Pin=0x00040002
[21:12:45.126]    TraceD0_Pin=0x00040003
[21:12:45.126]    TraceD1_Pin=0x00040004
[21:12:45.127]    TraceD2_Pin=0x00040005
[21:12:45.127]    TraceD3_Pin=0x00040006
[21:12:45.128]  </debugvars>
[21:12:45.128]  
[21:12:45.128]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:12:45.129]    <block atomic="false" info="">
[21:12:45.129]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:12:45.129]        // -> [traceSWO <= 0x00000001]
[21:12:45.130]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:12:45.130]        // -> [traceTPIU <= 0x00000000]
[21:12:45.130]    </block>
[21:12:45.131]    <control if="traceSWO" while="" timeout="0" info="">
[21:12:45.131]      // if-block "traceSWO"
[21:12:45.131]        // =>  TRUE
[21:12:45.132]      <block atomic="false" info="">
[21:12:45.132]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:12:45.133]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:12:45.133]            <block atomic="false" info="">
[21:12:45.133]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:12:45.134]                // -> [dbgmcu_val <= 0x00000000]
[21:12:45.134]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:12:45.134]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:12:45.135]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:12:45.136]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:12:45.137]                // -> [dbgmcu_val <= 0x00000007]
[21:12:45.137]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:12:45.137]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:12:45.138]              Sequence("ConfigureTraceSWOPin");
[21:12:45.138]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:12:45.139]                  <block atomic="false" info="">
[21:12:45.139]                    __var pin     = 0;
[21:12:45.140]                      // -> [pin <= 0x00000000]
[21:12:45.141]                    __var port    = 0;
[21:12:45.141]                      // -> [port <= 0x00000000]
[21:12:45.142]                    __var portAdr = 0;
[21:12:45.142]                      // -> [portAdr <= 0x00000000]
[21:12:45.142]                    __var pos     = 0;
[21:12:45.143]                      // -> [pos <= 0x00000000]
[21:12:45.143]                    __var SWO_Pin = 0x00010003;          // PB3
[21:12:45.144]                      // -> [SWO_Pin <= 0x00010003]
[21:12:45.144]                  </block>
[21:12:45.144]                  <block atomic="false" info="configure SWO">
[21:12:45.145]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:12:45.145]                      // -> [pin <= 0x00000003]
[21:12:45.146]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:12:45.146]                      // -> [port <= 0x00000001]
[21:12:45.146]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:12:45.146]                      // -> [portAdr <= 0x40020400]
[21:12:45.146]                    pos = pin * 2;
[21:12:45.146]                      // -> [pos <= 0x00000006]
[21:12:45.148]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:12:45.149]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:12:45.151]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:45.152]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:12:45.152]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:12:45.154]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:45.155]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:12:45.156]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:12:45.158]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:45.158]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:12:45.159]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:12:45.162]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:45.162]                  </block>
[21:12:45.162]                  <control if="pin <  8" while="" timeout="0" info="">
[21:12:45.163]                    // if-block "pin <  8"
[21:12:45.163]                      // =>  TRUE
[21:12:45.164]                    <block atomic="false" info="">
[21:12:45.164]                      pos = ((pin    ) & 7) * 4;
[21:12:45.164]                        // -> [pos <= 0x0000000C]
[21:12:45.164]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:12:45.165]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:12:45.167]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:45.167]                    </block>
[21:12:45.167]                    // end if-block "pin <  8"
[21:12:45.169]                  </control>
[21:12:45.169]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:12:45.169]                    // if-block "pin >= 8"
[21:12:45.170]                      // =>  FALSE
[21:12:45.170]                    // skip if-block "pin >= 8"
[21:12:45.170]                  </control>
[21:12:45.170]                </sequence>
[21:12:45.172]            </block>
[21:12:45.172]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:12:45.172]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:12:45.174]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:12:45.175]            </block>
[21:12:45.175]          </sequence>
[21:12:45.175]      </block>
[21:12:45.176]      // end if-block "traceSWO"
[21:12:45.176]    </control>
[21:12:45.176]    <control if="traceTPIU" while="" timeout="0" info="">
[21:12:45.176]      // if-block "traceTPIU"
[21:12:45.177]        // =>  FALSE
[21:12:45.177]      // skip if-block "traceTPIU"
[21:12:45.177]    </control>
[21:12:45.178]  </sequence>
[21:12:45.178]  
[21:13:12.403]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:13:12.403]  
[21:13:12.451]  <debugvars>
[21:13:12.451]    // Pre-defined
[21:13:12.452]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:13:12.452]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:13:12.453]    __dp=0x00000000
[21:13:12.453]    __ap=0x00000000
[21:13:12.454]    __traceout=0x00000001      (SWO Trace)
[21:13:12.454]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:13:12.454]    __FlashAddr=0x00000000
[21:13:12.455]    __FlashLen=0x00000000
[21:13:12.455]    __FlashArg=0x00000000
[21:13:12.456]    __FlashOp=0x00000000
[21:13:12.456]    __Result=0x00000000
[21:13:12.457]    
[21:13:12.457]    // User-defined
[21:13:12.457]    DbgMCU_CR=0x00000007
[21:13:12.458]    DbgMCU_APB1_Fz=0x00000000
[21:13:12.458]    DbgMCU_APB2_Fz=0x00000000
[21:13:12.458]    TraceClk_Pin=0x00040002
[21:13:12.459]    TraceD0_Pin=0x00040003
[21:13:12.459]    TraceD1_Pin=0x00040004
[21:13:12.459]    TraceD2_Pin=0x00040005
[21:13:12.459]    TraceD3_Pin=0x00040006
[21:13:12.460]  </debugvars>
[21:13:12.460]  
[21:13:12.460]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:13:12.461]    <block atomic="false" info="">
[21:13:12.461]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:13:12.461]        // -> [traceSWO <= 0x00000001]
[21:13:12.462]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:13:12.462]        // -> [traceTPIU <= 0x00000000]
[21:13:12.462]    </block>
[21:13:12.463]    <control if="traceSWO" while="" timeout="0" info="">
[21:13:12.463]      // if-block "traceSWO"
[21:13:12.463]        // =>  TRUE
[21:13:12.464]      <block atomic="false" info="">
[21:13:12.464]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:13:12.464]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:13:12.465]            <block atomic="false" info="">
[21:13:12.465]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:13:12.466]                // -> [dbgmcu_val <= 0x00000000]
[21:13:12.466]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:13:12.466]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:13:12.467]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:13:12.468]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:13:12.468]                // -> [dbgmcu_val <= 0x00000007]
[21:13:12.469]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:13:12.469]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:13:12.470]              Sequence("ConfigureTraceSWOPin");
[21:13:12.470]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:13:12.471]                  <block atomic="false" info="">
[21:13:12.471]                    __var pin     = 0;
[21:13:12.471]                      // -> [pin <= 0x00000000]
[21:13:12.472]                    __var port    = 0;
[21:13:12.472]                      // -> [port <= 0x00000000]
[21:13:12.472]                    __var portAdr = 0;
[21:13:12.473]                      // -> [portAdr <= 0x00000000]
[21:13:12.473]                    __var pos     = 0;
[21:13:12.474]                      // -> [pos <= 0x00000000]
[21:13:12.474]                    __var SWO_Pin = 0x00010003;          // PB3
[21:13:12.474]                      // -> [SWO_Pin <= 0x00010003]
[21:13:12.475]                  </block>
[21:13:12.475]                  <block atomic="false" info="configure SWO">
[21:13:12.475]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:13:12.475]                      // -> [pin <= 0x00000003]
[21:13:12.476]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:13:12.476]                      // -> [port <= 0x00000001]
[21:13:12.477]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:13:12.477]                      // -> [portAdr <= 0x40020400]
[21:13:12.477]                    pos = pin * 2;
[21:13:12.478]                      // -> [pos <= 0x00000006]
[21:13:12.478]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:13:12.479]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:13:12.481]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:13:12.482]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:13:12.483]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:13:12.485]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:13:12.485]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:13:12.487]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:13:12.488]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:13:12.489]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:13:12.490]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:13:12.492]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:13:12.492]                  </block>
[21:13:12.492]                  <control if="pin <  8" while="" timeout="0" info="">
[21:13:12.493]                    // if-block "pin <  8"
[21:13:12.493]                      // =>  TRUE
[21:13:12.494]                    <block atomic="false" info="">
[21:13:12.494]                      pos = ((pin    ) & 7) * 4;
[21:13:12.494]                        // -> [pos <= 0x0000000C]
[21:13:12.494]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:13:12.496]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:13:12.497]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:13:12.498]                    </block>
[21:13:12.498]                    // end if-block "pin <  8"
[21:13:12.499]                  </control>
[21:13:12.499]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:13:12.499]                    // if-block "pin >= 8"
[21:13:12.500]                      // =>  FALSE
[21:13:12.500]                    // skip if-block "pin >= 8"
[21:13:12.501]                  </control>
[21:13:12.501]                </sequence>
[21:13:12.501]            </block>
[21:13:12.502]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:13:12.502]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:13:12.504]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:13:12.504]            </block>
[21:13:12.505]          </sequence>
[21:13:12.505]      </block>
[21:13:12.506]      // end if-block "traceSWO"
[21:13:12.506]    </control>
[21:13:12.506]    <control if="traceTPIU" while="" timeout="0" info="">
[21:13:12.507]      // if-block "traceTPIU"
[21:13:12.507]        // =>  FALSE
[21:13:12.507]      // skip if-block "traceTPIU"
[21:13:12.507]    </control>
[21:13:12.508]  </sequence>
[21:13:12.508]  
[21:13:27.018]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[21:13:27.018]  
[21:13:27.018]  <debugvars>
[21:13:27.019]    // Pre-defined
[21:13:27.019]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:13:27.020]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:13:27.020]    __dp=0x00000000
[21:13:27.021]    __ap=0x00000000
[21:13:27.022]    __traceout=0x00000001      (SWO Trace)
[21:13:27.022]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:13:27.022]    __FlashAddr=0x00000000
[21:13:27.022]    __FlashLen=0x00000000
[21:13:27.022]    __FlashArg=0x00000000
[21:13:27.024]    __FlashOp=0x00000000
[21:13:27.024]    __Result=0x00000000
[21:13:27.024]    
[21:13:27.024]    // User-defined
[21:13:27.024]    DbgMCU_CR=0x00000007
[21:13:27.024]    DbgMCU_APB1_Fz=0x00000000
[21:13:27.025]    DbgMCU_APB2_Fz=0x00000000
[21:13:27.025]    TraceClk_Pin=0x00040002
[21:13:27.026]    TraceD0_Pin=0x00040003
[21:13:27.026]    TraceD1_Pin=0x00040004
[21:13:27.027]    TraceD2_Pin=0x00040005
[21:13:27.027]    TraceD3_Pin=0x00040006
[21:13:27.027]  </debugvars>
[21:13:27.029]  
[21:13:27.029]  <sequence name="TraceStop" Pname="" disable="false" info="">
[21:13:27.029]    <block atomic="false" info="">
[21:13:27.029]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[21:13:27.029]        // -> [traceSWO <= 0x00000001]
[21:13:27.030]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[21:13:27.030]        // -> [traceTPIU <= 0x00000000]
[21:13:27.031]    </block>
[21:13:27.031]    <control if="traceSWO" while="" timeout="0" info="">
[21:13:27.032]      // if-block "traceSWO"
[21:13:27.032]        // =>  TRUE
[21:13:27.033]      <block atomic="false" info="">
[21:13:27.033]        Sequence("DisableTraceSWO");
[21:13:27.033]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[21:13:27.033]            <block atomic="false" info="">
[21:13:27.034]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:13:27.034]                // -> [dbgmcu_val <= 0x00000000]
[21:13:27.034]            </block>
[21:13:27.035]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[21:13:27.035]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[21:13:27.037]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:13:27.037]                // -> [dbgmcu_val <= 0x00000007]
[21:13:27.037]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[21:13:27.039]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:13:27.039]            </block>
[21:13:27.041]          </sequence>
[21:13:27.041]      </block>
[21:13:27.041]      // end if-block "traceSWO"
[21:13:27.041]    </control>
[21:13:27.041]    <control if="traceTPIU" while="" timeout="0" info="">
[21:13:27.042]      // if-block "traceTPIU"
[21:13:27.043]        // =>  FALSE
[21:13:27.043]      // skip if-block "traceTPIU"
[21:13:27.043]    </control>
[21:13:27.044]  </sequence>
[21:13:27.044]  
[21:14:03.844]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:14:03.845]  
[21:14:03.845]  <debugvars>
[21:14:03.846]    // Pre-defined
[21:14:03.846]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:14:03.846]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[21:14:03.846]    __dp=0x00000000
[21:14:03.847]    __ap=0x00000000
[21:14:03.847]    __traceout=0x00000001      (SWO Trace)
[21:14:03.847]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:14:03.848]    __FlashAddr=0x00000000
[21:14:03.848]    __FlashLen=0x00000000
[21:14:03.848]    __FlashArg=0x00000000
[21:14:03.848]    __FlashOp=0x00000000
[21:14:03.849]    __Result=0x00000000
[21:14:03.849]    
[21:14:03.849]    // User-defined
[21:14:03.849]    DbgMCU_CR=0x00000007
[21:14:03.850]    DbgMCU_APB1_Fz=0x00000000
[21:14:03.850]    DbgMCU_APB2_Fz=0x00000000
[21:14:03.850]    TraceClk_Pin=0x00040002
[21:14:03.851]    TraceD0_Pin=0x00040003
[21:14:03.852]    TraceD1_Pin=0x00040004
[21:14:03.852]    TraceD2_Pin=0x00040005
[21:14:03.853]    TraceD3_Pin=0x00040006
[21:14:03.853]  </debugvars>
[21:14:03.854]  
[21:14:03.854]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:14:03.854]    <block atomic="false" info="">
[21:14:03.855]      Sequence("CheckID");
[21:14:03.855]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:14:03.855]          <block atomic="false" info="">
[21:14:03.856]            __var pidr1 = 0;
[21:14:03.857]              // -> [pidr1 <= 0x00000000]
[21:14:03.857]            __var pidr2 = 0;
[21:14:03.858]              // -> [pidr2 <= 0x00000000]
[21:14:03.858]            __var jep106id = 0;
[21:14:03.858]              // -> [jep106id <= 0x00000000]
[21:14:03.858]            __var ROMTableBase = 0;
[21:14:03.859]              // -> [ROMTableBase <= 0x00000000]
[21:14:03.859]            __ap = 0;      // AHB-AP
[21:14:03.859]              // -> [__ap <= 0x00000000]
[21:14:03.860]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:14:03.861]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[21:14:03.861]              // -> [ROMTableBase <= 0xE00FF000]
[21:14:03.861]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:14:03.863]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:14:03.863]              // -> [pidr1 <= 0x00000004]
[21:14:03.864]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:14:03.865]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[21:14:03.865]              // -> [pidr2 <= 0x0000000A]
[21:14:03.865]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:14:03.866]              // -> [jep106id <= 0x00000020]
[21:14:03.866]          </block>
[21:14:03.866]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:14:03.867]            // if-block "jep106id != 0x20"
[21:14:03.867]              // =>  FALSE
[21:14:03.868]            // skip if-block "jep106id != 0x20"
[21:14:03.868]          </control>
[21:14:03.868]        </sequence>
[21:14:03.869]    </block>
[21:14:03.869]  </sequence>
[21:14:03.870]  
[21:14:03.870]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:14:03.870]  
[21:14:03.870]  <debugvars>
[21:14:03.871]    // Pre-defined
[21:14:03.871]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:14:03.872]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[21:14:03.872]    __dp=0x00000000
[21:14:03.873]    __ap=0x00000000
[21:14:03.873]    __traceout=0x00000001      (SWO Trace)
[21:14:03.873]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:14:03.874]    __FlashAddr=0x00000000
[21:14:03.874]    __FlashLen=0x00000000
[21:14:03.874]    __FlashArg=0x00000000
[21:14:03.875]    __FlashOp=0x00000000
[21:14:03.875]    __Result=0x00000000
[21:14:03.875]    
[21:14:03.875]    // User-defined
[21:14:03.876]    DbgMCU_CR=0x00000007
[21:14:03.876]    DbgMCU_APB1_Fz=0x00000000
[21:14:03.876]    DbgMCU_APB2_Fz=0x00000000
[21:14:03.877]    TraceClk_Pin=0x00040002
[21:14:03.877]    TraceD0_Pin=0x00040003
[21:14:03.877]    TraceD1_Pin=0x00040004
[21:14:03.878]    TraceD2_Pin=0x00040005
[21:14:03.878]    TraceD3_Pin=0x00040006
[21:14:03.878]  </debugvars>
[21:14:03.879]  
[21:14:03.879]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:14:03.879]    <block atomic="false" info="">
[21:14:03.879]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:14:03.881]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:03.881]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:14:03.883]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:03.883]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:14:03.885]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:03.885]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:14:03.887]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:03.887]    </block>
[21:14:03.888]  </sequence>
[21:14:03.888]  
[21:14:06.016]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:14:06.016]  
[21:14:06.064]  <debugvars>
[21:14:06.064]    // Pre-defined
[21:14:06.065]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:14:06.065]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:14:06.065]    __dp=0x00000000
[21:14:06.066]    __ap=0x00000000
[21:14:06.066]    __traceout=0x00000001      (SWO Trace)
[21:14:06.067]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:14:06.067]    __FlashAddr=0x00000000
[21:14:06.067]    __FlashLen=0x00000000
[21:14:06.068]    __FlashArg=0x00000000
[21:14:06.068]    __FlashOp=0x00000000
[21:14:06.068]    __Result=0x00000000
[21:14:06.069]    
[21:14:06.069]    // User-defined
[21:14:06.069]    DbgMCU_CR=0x00000007
[21:14:06.069]    DbgMCU_APB1_Fz=0x00000000
[21:14:06.070]    DbgMCU_APB2_Fz=0x00000000
[21:14:06.070]    TraceClk_Pin=0x00040002
[21:14:06.070]    TraceD0_Pin=0x00040003
[21:14:06.071]    TraceD1_Pin=0x00040004
[21:14:06.071]    TraceD2_Pin=0x00040005
[21:14:06.072]    TraceD3_Pin=0x00040006
[21:14:06.072]  </debugvars>
[21:14:06.072]  
[21:14:06.073]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:14:06.073]    <block atomic="false" info="">
[21:14:06.074]      Sequence("CheckID");
[21:14:06.074]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:14:06.075]          <block atomic="false" info="">
[21:14:06.075]            __var pidr1 = 0;
[21:14:06.075]              // -> [pidr1 <= 0x00000000]
[21:14:06.075]            __var pidr2 = 0;
[21:14:06.076]              // -> [pidr2 <= 0x00000000]
[21:14:06.076]            __var jep106id = 0;
[21:14:06.077]              // -> [jep106id <= 0x00000000]
[21:14:06.077]            __var ROMTableBase = 0;
[21:14:06.077]              // -> [ROMTableBase <= 0x00000000]
[21:14:06.078]            __ap = 0;      // AHB-AP
[21:14:06.078]              // -> [__ap <= 0x00000000]
[21:14:06.079]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:14:06.080]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.080]              // -> [ROMTableBase <= 0xE00FF000]
[21:14:06.081]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:14:06.083]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.083]              // -> [pidr1 <= 0x00000004]
[21:14:06.083]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:14:06.085]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.085]              // -> [pidr2 <= 0x0000000A]
[21:14:06.086]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:14:06.086]              // -> [jep106id <= 0x00000020]
[21:14:06.087]          </block>
[21:14:06.087]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:14:06.088]            // if-block "jep106id != 0x20"
[21:14:06.088]              // =>  FALSE
[21:14:06.088]            // skip if-block "jep106id != 0x20"
[21:14:06.089]          </control>
[21:14:06.089]        </sequence>
[21:14:06.090]    </block>
[21:14:06.090]  </sequence>
[21:14:06.090]  
[21:14:06.091]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:14:06.091]  
[21:14:06.091]  <debugvars>
[21:14:06.092]    // Pre-defined
[21:14:06.092]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:14:06.093]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:14:06.093]    __dp=0x00000000
[21:14:06.093]    __ap=0x00000000
[21:14:06.094]    __traceout=0x00000001      (SWO Trace)
[21:14:06.094]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:14:06.095]    __FlashAddr=0x00000000
[21:14:06.095]    __FlashLen=0x00000000
[21:14:06.095]    __FlashArg=0x00000000
[21:14:06.096]    __FlashOp=0x00000000
[21:14:06.096]    __Result=0x00000000
[21:14:06.097]    
[21:14:06.097]    // User-defined
[21:14:06.097]    DbgMCU_CR=0x00000007
[21:14:06.097]    DbgMCU_APB1_Fz=0x00000000
[21:14:06.097]    DbgMCU_APB2_Fz=0x00000000
[21:14:06.098]    TraceClk_Pin=0x00040002
[21:14:06.098]    TraceD0_Pin=0x00040003
[21:14:06.099]    TraceD1_Pin=0x00040004
[21:14:06.099]    TraceD2_Pin=0x00040005
[21:14:06.099]    TraceD3_Pin=0x00040006
[21:14:06.100]  </debugvars>
[21:14:06.100]  
[21:14:06.101]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:14:06.101]    <block atomic="false" info="">
[21:14:06.102]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:14:06.104]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.104]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:14:06.106]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.107]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:14:06.108]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.109]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:14:06.110]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.111]    </block>
[21:14:06.111]  </sequence>
[21:14:06.111]  
[21:14:06.168]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[21:14:06.168]  
[21:14:06.169]  <debugvars>
[21:14:06.169]    // Pre-defined
[21:14:06.170]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:14:06.170]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:14:06.170]    __dp=0x00000000
[21:14:06.170]    __ap=0x00000000
[21:14:06.171]    __traceout=0x00000001      (SWO Trace)
[21:14:06.171]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:14:06.171]    __FlashAddr=0x00000000
[21:14:06.172]    __FlashLen=0x00000000
[21:14:06.173]    __FlashArg=0x00000000
[21:14:06.173]    __FlashOp=0x00000000
[21:14:06.173]    __Result=0x00000000
[21:14:06.173]    
[21:14:06.173]    // User-defined
[21:14:06.173]    DbgMCU_CR=0x00000007
[21:14:06.174]    DbgMCU_APB1_Fz=0x00000000
[21:14:06.175]    DbgMCU_APB2_Fz=0x00000000
[21:14:06.175]    TraceClk_Pin=0x00040002
[21:14:06.175]    TraceD0_Pin=0x00040003
[21:14:06.176]    TraceD1_Pin=0x00040004
[21:14:06.176]    TraceD2_Pin=0x00040005
[21:14:06.176]    TraceD3_Pin=0x00040006
[21:14:06.177]  </debugvars>
[21:14:06.177]  
[21:14:06.177]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:14:06.177]    <block atomic="false" info="">
[21:14:06.178]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:14:06.178]        // -> [traceSWO <= 0x00000001]
[21:14:06.179]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:14:06.179]        // -> [traceTPIU <= 0x00000000]
[21:14:06.179]    </block>
[21:14:06.179]    <control if="traceSWO" while="" timeout="0" info="">
[21:14:06.180]      // if-block "traceSWO"
[21:14:06.180]        // =>  TRUE
[21:14:06.180]      <block atomic="false" info="">
[21:14:06.181]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:14:06.181]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:14:06.181]            <block atomic="false" info="">
[21:14:06.182]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:14:06.182]                // -> [dbgmcu_val <= 0x00000000]
[21:14:06.183]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:14:06.183]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:14:06.184]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:14:06.185]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.186]                // -> [dbgmcu_val <= 0x00000007]
[21:14:06.186]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:14:06.187]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:14:06.187]              Sequence("ConfigureTraceSWOPin");
[21:14:06.188]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:14:06.188]                  <block atomic="false" info="">
[21:14:06.189]                    __var pin     = 0;
[21:14:06.189]                      // -> [pin <= 0x00000000]
[21:14:06.189]                    __var port    = 0;
[21:14:06.190]                      // -> [port <= 0x00000000]
[21:14:06.190]                    __var portAdr = 0;
[21:14:06.191]                      // -> [portAdr <= 0x00000000]
[21:14:06.191]                    __var pos     = 0;
[21:14:06.192]                      // -> [pos <= 0x00000000]
[21:14:06.192]                    __var SWO_Pin = 0x00010003;          // PB3
[21:14:06.193]                      // -> [SWO_Pin <= 0x00010003]
[21:14:06.193]                  </block>
[21:14:06.193]                  <block atomic="false" info="configure SWO">
[21:14:06.194]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:14:06.194]                      // -> [pin <= 0x00000003]
[21:14:06.195]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:14:06.195]                      // -> [port <= 0x00000001]
[21:14:06.195]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:14:06.196]                      // -> [portAdr <= 0x40020400]
[21:14:06.196]                    pos = pin * 2;
[21:14:06.196]                      // -> [pos <= 0x00000006]
[21:14:06.197]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:14:06.199]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.200]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.201]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:14:06.203]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.204]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.205]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:14:06.206]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.208]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.208]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:14:06.210]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.211]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.212]                  </block>
[21:14:06.212]                  <control if="pin <  8" while="" timeout="0" info="">
[21:14:06.212]                    // if-block "pin <  8"
[21:14:06.213]                      // =>  TRUE
[21:14:06.213]                    <block atomic="false" info="">
[21:14:06.214]                      pos = ((pin    ) & 7) * 4;
[21:14:06.215]                        // -> [pos <= 0x0000000C]
[21:14:06.215]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:14:06.216]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.217]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.218]                    </block>
[21:14:06.219]                    // end if-block "pin <  8"
[21:14:06.219]                  </control>
[21:14:06.219]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:14:06.220]                    // if-block "pin >= 8"
[21:14:06.221]                      // =>  FALSE
[21:14:06.221]                    // skip if-block "pin >= 8"
[21:14:06.221]                  </control>
[21:14:06.221]                </sequence>
[21:14:06.222]            </block>
[21:14:06.222]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:14:06.222]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:14:06.224]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.225]            </block>
[21:14:06.225]          </sequence>
[21:14:06.225]      </block>
[21:14:06.226]      // end if-block "traceSWO"
[21:14:06.226]    </control>
[21:14:06.226]    <control if="traceTPIU" while="" timeout="0" info="">
[21:14:06.227]      // if-block "traceTPIU"
[21:14:06.227]        // =>  FALSE
[21:14:06.227]      // skip if-block "traceTPIU"
[21:14:06.228]    </control>
[21:14:06.228]  </sequence>
[21:14:06.228]  
[21:14:06.247]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:14:06.248]  
[21:14:06.248]  <debugvars>
[21:14:06.249]    // Pre-defined
[21:14:06.249]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:14:06.249]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:14:06.250]    __dp=0x00000000
[21:14:06.250]    __ap=0x00000000
[21:14:06.251]    __traceout=0x00000001      (SWO Trace)
[21:14:06.251]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:14:06.251]    __FlashAddr=0x00000000
[21:14:06.252]    __FlashLen=0x00000000
[21:14:06.252]    __FlashArg=0x00000000
[21:14:06.252]    __FlashOp=0x00000000
[21:14:06.253]    __Result=0x00000000
[21:14:06.253]    
[21:14:06.253]    // User-defined
[21:14:06.254]    DbgMCU_CR=0x00000007
[21:14:06.255]    DbgMCU_APB1_Fz=0x00000000
[21:14:06.255]    DbgMCU_APB2_Fz=0x00000000
[21:14:06.255]    TraceClk_Pin=0x00040002
[21:14:06.255]    TraceD0_Pin=0x00040003
[21:14:06.255]    TraceD1_Pin=0x00040004
[21:14:06.256]    TraceD2_Pin=0x00040005
[21:14:06.256]    TraceD3_Pin=0x00040006
[21:14:06.256]  </debugvars>
[21:14:06.257]  
[21:14:06.257]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:14:06.257]    <block atomic="false" info="">
[21:14:06.258]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:14:06.258]        // -> [traceSWO <= 0x00000001]
[21:14:06.259]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:14:06.259]        // -> [traceTPIU <= 0x00000000]
[21:14:06.259]    </block>
[21:14:06.260]    <control if="traceSWO" while="" timeout="0" info="">
[21:14:06.260]      // if-block "traceSWO"
[21:14:06.261]        // =>  TRUE
[21:14:06.261]      <block atomic="false" info="">
[21:14:06.261]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:14:06.262]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:14:06.263]            <block atomic="false" info="">
[21:14:06.263]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:14:06.263]                // -> [dbgmcu_val <= 0x00000000]
[21:14:06.264]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:14:06.264]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:14:06.265]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:14:06.267]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.267]                // -> [dbgmcu_val <= 0x00000007]
[21:14:06.268]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:14:06.268]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:14:06.269]              Sequence("ConfigureTraceSWOPin");
[21:14:06.269]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:14:06.270]                  <block atomic="false" info="">
[21:14:06.270]                    __var pin     = 0;
[21:14:06.270]                      // -> [pin <= 0x00000000]
[21:14:06.271]                    __var port    = 0;
[21:14:06.271]                      // -> [port <= 0x00000000]
[21:14:06.272]                    __var portAdr = 0;
[21:14:06.272]                      // -> [portAdr <= 0x00000000]
[21:14:06.272]                    __var pos     = 0;
[21:14:06.272]                      // -> [pos <= 0x00000000]
[21:14:06.273]                    __var SWO_Pin = 0x00010003;          // PB3
[21:14:06.273]                      // -> [SWO_Pin <= 0x00010003]
[21:14:06.273]                  </block>
[21:14:06.273]                  <block atomic="false" info="configure SWO">
[21:14:06.274]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:14:06.274]                      // -> [pin <= 0x00000003]
[21:14:06.274]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:14:06.275]                      // -> [port <= 0x00000001]
[21:14:06.275]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:14:06.275]                      // -> [portAdr <= 0x40020400]
[21:14:06.276]                    pos = pin * 2;
[21:14:06.276]                      // -> [pos <= 0x00000006]
[21:14:06.277]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:14:06.278]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.280]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.281]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:14:06.281]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.283]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.283]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:14:06.285]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.286]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.286]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:14:06.288]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.289]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.290]                  </block>
[21:14:06.290]                  <control if="pin <  8" while="" timeout="0" info="">
[21:14:06.291]                    // if-block "pin <  8"
[21:14:06.291]                      // =>  TRUE
[21:14:06.292]                    <block atomic="false" info="">
[21:14:06.292]                      pos = ((pin    ) & 7) * 4;
[21:14:06.293]                        // -> [pos <= 0x0000000C]
[21:14:06.293]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:14:06.294]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.296]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.297]                    </block>
[21:14:06.297]                    // end if-block "pin <  8"
[21:14:06.298]                  </control>
[21:14:06.298]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:14:06.299]                    // if-block "pin >= 8"
[21:14:06.299]                      // =>  FALSE
[21:14:06.300]                    // skip if-block "pin >= 8"
[21:14:06.300]                  </control>
[21:14:06.301]                </sequence>
[21:14:06.301]            </block>
[21:14:06.302]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:14:06.302]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:14:06.303]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:06.304]            </block>
[21:14:06.304]          </sequence>
[21:14:06.305]      </block>
[21:14:06.305]      // end if-block "traceSWO"
[21:14:06.305]    </control>
[21:14:06.306]    <control if="traceTPIU" while="" timeout="0" info="">
[21:14:06.306]      // if-block "traceTPIU"
[21:14:06.306]        // =>  FALSE
[21:14:06.307]      // skip if-block "traceTPIU"
[21:14:06.307]    </control>
[21:14:06.308]  </sequence>
[21:14:06.308]  
[21:14:06.991]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:14:06.991]  
[21:14:07.038]  <debugvars>
[21:14:07.038]    // Pre-defined
[21:14:07.039]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:14:07.039]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:14:07.039]    __dp=0x00000000
[21:14:07.040]    __ap=0x00000000
[21:14:07.040]    __traceout=0x00000001      (SWO Trace)
[21:14:07.040]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:14:07.041]    __FlashAddr=0x00000000
[21:14:07.041]    __FlashLen=0x00000000
[21:14:07.042]    __FlashArg=0x00000000
[21:14:07.042]    __FlashOp=0x00000000
[21:14:07.042]    __Result=0x00000000
[21:14:07.043]    
[21:14:07.043]    // User-defined
[21:14:07.043]    DbgMCU_CR=0x00000007
[21:14:07.043]    DbgMCU_APB1_Fz=0x00000000
[21:14:07.044]    DbgMCU_APB2_Fz=0x00000000
[21:14:07.044]    TraceClk_Pin=0x00040002
[21:14:07.044]    TraceD0_Pin=0x00040003
[21:14:07.045]    TraceD1_Pin=0x00040004
[21:14:07.045]    TraceD2_Pin=0x00040005
[21:14:07.045]    TraceD3_Pin=0x00040006
[21:14:07.046]  </debugvars>
[21:14:07.046]  
[21:14:07.047]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:14:07.047]    <block atomic="false" info="">
[21:14:07.047]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:14:07.048]        // -> [traceSWO <= 0x00000001]
[21:14:07.049]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:14:07.049]        // -> [traceTPIU <= 0x00000000]
[21:14:07.049]    </block>
[21:14:07.050]    <control if="traceSWO" while="" timeout="0" info="">
[21:14:07.050]      // if-block "traceSWO"
[21:14:07.051]        // =>  TRUE
[21:14:07.051]      <block atomic="false" info="">
[21:14:07.051]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:14:07.052]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:14:07.052]            <block atomic="false" info="">
[21:14:07.053]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:14:07.053]                // -> [dbgmcu_val <= 0x00000000]
[21:14:07.054]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:14:07.054]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:14:07.054]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:14:07.056]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:14:07.056]                // -> [dbgmcu_val <= 0x00000007]
[21:14:07.056]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:14:07.057]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:14:07.057]              Sequence("ConfigureTraceSWOPin");
[21:14:07.058]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:14:07.058]                  <block atomic="false" info="">
[21:14:07.059]                    __var pin     = 0;
[21:14:07.059]                      // -> [pin <= 0x00000000]
[21:14:07.060]                    __var port    = 0;
[21:14:07.060]                      // -> [port <= 0x00000000]
[21:14:07.060]                    __var portAdr = 0;
[21:14:07.060]                      // -> [portAdr <= 0x00000000]
[21:14:07.061]                    __var pos     = 0;
[21:14:07.061]                      // -> [pos <= 0x00000000]
[21:14:07.062]                    __var SWO_Pin = 0x00010003;          // PB3
[21:14:07.062]                      // -> [SWO_Pin <= 0x00010003]
[21:14:07.062]                  </block>
[21:14:07.063]                  <block atomic="false" info="configure SWO">
[21:14:07.063]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:14:07.064]                      // -> [pin <= 0x00000003]
[21:14:07.064]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:14:07.064]                      // -> [port <= 0x00000001]
[21:14:07.065]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:14:07.065]                      // -> [portAdr <= 0x40020400]
[21:14:07.065]                    pos = pin * 2;
[21:14:07.066]                      // -> [pos <= 0x00000006]
[21:14:07.066]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:14:07.068]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:14:07.070]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:07.070]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:14:07.072]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:14:07.073]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:07.074]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:14:07.075]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:14:07.077]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:07.077]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:14:07.079]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:14:07.081]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:07.081]                  </block>
[21:14:07.081]                  <control if="pin <  8" while="" timeout="0" info="">
[21:14:07.082]                    // if-block "pin <  8"
[21:14:07.082]                      // =>  TRUE
[21:14:07.082]                    <block atomic="false" info="">
[21:14:07.083]                      pos = ((pin    ) & 7) * 4;
[21:14:07.083]                        // -> [pos <= 0x0000000C]
[21:14:07.084]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:14:07.085]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:14:07.087]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:07.087]                    </block>
[21:14:07.088]                    // end if-block "pin <  8"
[21:14:07.088]                  </control>
[21:14:07.088]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:14:07.089]                    // if-block "pin >= 8"
[21:14:07.089]                      // =>  FALSE
[21:14:07.089]                    // skip if-block "pin >= 8"
[21:14:07.090]                  </control>
[21:14:07.090]                </sequence>
[21:14:07.090]            </block>
[21:14:07.091]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:14:07.091]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:14:07.093]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:07.093]            </block>
[21:14:07.093]          </sequence>
[21:14:07.094]      </block>
[21:14:07.094]      // end if-block "traceSWO"
[21:14:07.095]    </control>
[21:14:07.095]    <control if="traceTPIU" while="" timeout="0" info="">
[21:14:07.096]      // if-block "traceTPIU"
[21:14:07.096]        // =>  FALSE
[21:14:07.096]      // skip if-block "traceTPIU"
[21:14:07.097]    </control>
[21:14:07.097]  </sequence>
[21:14:07.097]  
[21:14:23.978]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:14:23.978]  
[21:14:24.026]  <debugvars>
[21:14:24.026]    // Pre-defined
[21:14:24.027]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:14:24.027]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:14:24.027]    __dp=0x00000000
[21:14:24.028]    __ap=0x00000000
[21:14:24.028]    __traceout=0x00000001      (SWO Trace)
[21:14:24.029]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:14:24.029]    __FlashAddr=0x00000000
[21:14:24.029]    __FlashLen=0x00000000
[21:14:24.029]    __FlashArg=0x00000000
[21:14:24.030]    __FlashOp=0x00000000
[21:14:24.030]    __Result=0x00000000
[21:14:24.030]    
[21:14:24.030]    // User-defined
[21:14:24.031]    DbgMCU_CR=0x00000007
[21:14:24.031]    DbgMCU_APB1_Fz=0x00000000
[21:14:24.031]    DbgMCU_APB2_Fz=0x00000000
[21:14:24.031]    TraceClk_Pin=0x00040002
[21:14:24.032]    TraceD0_Pin=0x00040003
[21:14:24.032]    TraceD1_Pin=0x00040004
[21:14:24.032]    TraceD2_Pin=0x00040005
[21:14:24.033]    TraceD3_Pin=0x00040006
[21:14:24.033]  </debugvars>
[21:14:24.033]  
[21:14:24.033]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:14:24.034]    <block atomic="false" info="">
[21:14:24.034]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:14:24.034]        // -> [traceSWO <= 0x00000001]
[21:14:24.035]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:14:24.035]        // -> [traceTPIU <= 0x00000000]
[21:14:24.035]    </block>
[21:14:24.036]    <control if="traceSWO" while="" timeout="0" info="">
[21:14:24.036]      // if-block "traceSWO"
[21:14:24.036]        // =>  TRUE
[21:14:24.037]      <block atomic="false" info="">
[21:14:24.037]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:14:24.038]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:14:24.038]            <block atomic="false" info="">
[21:14:24.039]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:14:24.039]                // -> [dbgmcu_val <= 0x00000000]
[21:14:24.039]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:14:24.040]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:14:24.040]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:14:24.042]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:14:24.042]                // -> [dbgmcu_val <= 0x00000007]
[21:14:24.043]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:14:24.043]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:14:24.044]              Sequence("ConfigureTraceSWOPin");
[21:14:24.044]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:14:24.044]                  <block atomic="false" info="">
[21:14:24.045]                    __var pin     = 0;
[21:14:24.045]                      // -> [pin <= 0x00000000]
[21:14:24.045]                    __var port    = 0;
[21:14:24.045]                      // -> [port <= 0x00000000]
[21:14:24.046]                    __var portAdr = 0;
[21:14:24.046]                      // -> [portAdr <= 0x00000000]
[21:14:24.046]                    __var pos     = 0;
[21:14:24.047]                      // -> [pos <= 0x00000000]
[21:14:24.047]                    __var SWO_Pin = 0x00010003;          // PB3
[21:14:24.047]                      // -> [SWO_Pin <= 0x00010003]
[21:14:24.048]                  </block>
[21:14:24.048]                  <block atomic="false" info="configure SWO">
[21:14:24.049]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:14:24.049]                      // -> [pin <= 0x00000003]
[21:14:24.049]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:14:24.050]                      // -> [port <= 0x00000001]
[21:14:24.050]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:14:24.050]                      // -> [portAdr <= 0x40020400]
[21:14:24.051]                    pos = pin * 2;
[21:14:24.051]                      // -> [pos <= 0x00000006]
[21:14:24.051]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:14:24.053]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:14:24.055]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:24.055]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:14:24.057]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:14:24.058]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:24.059]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:14:24.060]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:14:24.062]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:24.062]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:14:24.064]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:14:24.065]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:24.066]                  </block>
[21:14:24.066]                  <control if="pin <  8" while="" timeout="0" info="">
[21:14:24.066]                    // if-block "pin <  8"
[21:14:24.067]                      // =>  TRUE
[21:14:24.067]                    <block atomic="false" info="">
[21:14:24.067]                      pos = ((pin    ) & 7) * 4;
[21:14:24.068]                        // -> [pos <= 0x0000000C]
[21:14:24.068]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:14:24.070]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:14:24.071]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:24.072]                    </block>
[21:14:24.072]                    // end if-block "pin <  8"
[21:14:24.073]                  </control>
[21:14:24.073]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:14:24.074]                    // if-block "pin >= 8"
[21:14:24.074]                      // =>  FALSE
[21:14:24.074]                    // skip if-block "pin >= 8"
[21:14:24.075]                  </control>
[21:14:24.075]                </sequence>
[21:14:24.075]            </block>
[21:14:24.076]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:14:24.076]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:14:24.078]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:14:24.078]            </block>
[21:14:24.078]          </sequence>
[21:14:24.079]      </block>
[21:14:24.079]      // end if-block "traceSWO"
[21:14:24.079]    </control>
[21:14:24.080]    <control if="traceTPIU" while="" timeout="0" info="">
[21:14:24.080]      // if-block "traceTPIU"
[21:14:24.080]        // =>  FALSE
[21:14:24.080]      // skip if-block "traceTPIU"
[21:14:24.081]    </control>
[21:14:24.081]  </sequence>
[21:14:24.081]  
[21:21:15.486]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[21:21:15.486]  
[21:21:15.533]  <debugvars>
[21:21:15.533]    // Pre-defined
[21:21:15.534]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:21:15.534]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:21:15.535]    __dp=0x00000000
[21:21:15.535]    __ap=0x00000000
[21:21:15.536]    __traceout=0x00000001      (SWO Trace)
[21:21:15.536]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:21:15.536]    __FlashAddr=0x00000000
[21:21:15.537]    __FlashLen=0x00000000
[21:21:15.537]    __FlashArg=0x00000000
[21:21:15.537]    __FlashOp=0x00000000
[21:21:15.539]    __Result=0x00000000
[21:21:15.539]    
[21:21:15.539]    // User-defined
[21:21:15.539]    DbgMCU_CR=0x00000007
[21:21:15.540]    DbgMCU_APB1_Fz=0x00000000
[21:21:15.540]    DbgMCU_APB2_Fz=0x00000000
[21:21:15.540]    TraceClk_Pin=0x00040002
[21:21:15.540]    TraceD0_Pin=0x00040003
[21:21:15.541]    TraceD1_Pin=0x00040004
[21:21:15.541]    TraceD2_Pin=0x00040005
[21:21:15.542]    TraceD3_Pin=0x00040006
[21:21:15.542]  </debugvars>
[21:21:15.543]  
[21:21:15.543]  <sequence name="TraceStop" Pname="" disable="false" info="">
[21:21:15.544]    <block atomic="false" info="">
[21:21:15.544]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[21:21:15.544]        // -> [traceSWO <= 0x00000001]
[21:21:15.545]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[21:21:15.545]        // -> [traceTPIU <= 0x00000000]
[21:21:15.546]    </block>
[21:21:15.546]    <control if="traceSWO" while="" timeout="0" info="">
[21:21:15.546]      // if-block "traceSWO"
[21:21:15.546]        // =>  TRUE
[21:21:15.547]      <block atomic="false" info="">
[21:21:15.547]        Sequence("DisableTraceSWO");
[21:21:15.548]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[21:21:15.548]            <block atomic="false" info="">
[21:21:15.548]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:21:15.549]                // -> [dbgmcu_val <= 0x00000000]
[21:21:15.549]            </block>
[21:21:15.549]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[21:21:15.550]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[21:21:15.562]  
[21:21:15.562]  !!! E310 : Debug access failed - cannot read address 0xE0042004 (accsize '4', AP '0x00000000')
[21:21:15.562]  
[21:21:15.562]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:21:15.563]            </block>
[21:21:15.563]          </sequence>
[21:21:15.564]      </block>
[21:21:15.564]      // end if-block "traceSWO"
[21:21:15.565]    </control>
[21:21:15.565]  </sequence>
[21:21:15.565]  
[21:21:34.672]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:21:34.672]  
[21:21:34.720]  <debugvars>
[21:21:34.721]    // Pre-defined
[21:21:34.721]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:21:34.722]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[21:21:34.722]    __dp=0x00000000
[21:21:34.722]    __ap=0x00000000
[21:21:34.723]    __traceout=0x00000001      (SWO Trace)
[21:21:34.723]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:21:34.724]    __FlashAddr=0x00000000
[21:21:34.724]    __FlashLen=0x00000000
[21:21:34.724]    __FlashArg=0x00000000
[21:21:34.725]    __FlashOp=0x00000000
[21:21:34.725]    __Result=0x00000000
[21:21:34.726]    
[21:21:34.726]    // User-defined
[21:21:34.726]    DbgMCU_CR=0x00000007
[21:21:34.726]    DbgMCU_APB1_Fz=0x00000000
[21:21:34.727]    DbgMCU_APB2_Fz=0x00000000
[21:21:34.727]    TraceClk_Pin=0x00040002
[21:21:34.728]    TraceD0_Pin=0x00040003
[21:21:34.728]    TraceD1_Pin=0x00040004
[21:21:34.729]    TraceD2_Pin=0x00040005
[21:21:34.729]    TraceD3_Pin=0x00040006
[21:21:34.729]  </debugvars>
[21:21:34.730]  
[21:21:34.730]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:21:34.730]    <block atomic="false" info="">
[21:21:34.731]      Sequence("CheckID");
[21:21:34.731]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:21:34.731]          <block atomic="false" info="">
[21:21:34.732]            __var pidr1 = 0;
[21:21:34.732]              // -> [pidr1 <= 0x00000000]
[21:21:34.733]            __var pidr2 = 0;
[21:21:34.733]              // -> [pidr2 <= 0x00000000]
[21:21:34.734]            __var jep106id = 0;
[21:21:34.734]              // -> [jep106id <= 0x00000000]
[21:21:34.734]            __var ROMTableBase = 0;
[21:21:34.735]              // -> [ROMTableBase <= 0x00000000]
[21:21:34.735]            __ap = 0;      // AHB-AP
[21:21:34.735]              // -> [__ap <= 0x00000000]
[21:21:34.736]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:21:34.737]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[21:21:34.737]              // -> [ROMTableBase <= 0xE00FF000]
[21:21:34.738]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:21:34.739]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:21:34.740]              // -> [pidr1 <= 0x00000004]
[21:21:34.740]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:21:34.742]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[21:21:34.742]              // -> [pidr2 <= 0x0000000A]
[21:21:34.743]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:21:34.743]              // -> [jep106id <= 0x00000020]
[21:21:34.744]          </block>
[21:21:34.744]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:21:34.744]            // if-block "jep106id != 0x20"
[21:21:34.745]              // =>  FALSE
[21:21:34.745]            // skip if-block "jep106id != 0x20"
[21:21:34.745]          </control>
[21:21:34.746]        </sequence>
[21:21:34.746]    </block>
[21:21:34.747]  </sequence>
[21:21:34.747]  
[21:21:34.748]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:21:34.748]  
[21:21:34.748]  <debugvars>
[21:21:34.749]    // Pre-defined
[21:21:34.749]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:21:34.749]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[21:21:34.750]    __dp=0x00000000
[21:21:34.750]    __ap=0x00000000
[21:21:34.750]    __traceout=0x00000001      (SWO Trace)
[21:21:34.751]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:21:34.751]    __FlashAddr=0x00000000
[21:21:34.752]    __FlashLen=0x00000000
[21:21:34.752]    __FlashArg=0x00000000
[21:21:34.752]    __FlashOp=0x00000000
[21:21:34.753]    __Result=0x00000000
[21:21:34.753]    
[21:21:34.753]    // User-defined
[21:21:34.754]    DbgMCU_CR=0x00000007
[21:21:34.754]    DbgMCU_APB1_Fz=0x00000000
[21:21:34.754]    DbgMCU_APB2_Fz=0x00000000
[21:21:34.754]    TraceClk_Pin=0x00040002
[21:21:34.754]    TraceD0_Pin=0x00040003
[21:21:34.754]    TraceD1_Pin=0x00040004
[21:21:34.755]    TraceD2_Pin=0x00040005
[21:21:34.755]    TraceD3_Pin=0x00040006
[21:21:34.755]  </debugvars>
[21:21:34.756]  
[21:21:34.756]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:21:34.756]    <block atomic="false" info="">
[21:21:34.756]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:21:34.758]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:34.759]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:21:34.761]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:34.761]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:21:34.764]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:34.764]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:21:34.766]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:34.766]    </block>
[21:21:34.767]  </sequence>
[21:21:34.767]  
[21:21:36.744]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:21:36.744]  
[21:21:36.791]  <debugvars>
[21:21:36.791]    // Pre-defined
[21:21:36.791]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:21:36.791]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:21:36.792]    __dp=0x00000000
[21:21:36.792]    __ap=0x00000000
[21:21:36.792]    __traceout=0x00000001      (SWO Trace)
[21:21:36.792]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:21:36.792]    __FlashAddr=0x00000000
[21:21:36.793]    __FlashLen=0x00000000
[21:21:36.793]    __FlashArg=0x00000000
[21:21:36.793]    __FlashOp=0x00000000
[21:21:36.793]    __Result=0x00000000
[21:21:36.793]    
[21:21:36.793]    // User-defined
[21:21:36.794]    DbgMCU_CR=0x00000007
[21:21:36.794]    DbgMCU_APB1_Fz=0x00000000
[21:21:36.794]    DbgMCU_APB2_Fz=0x00000000
[21:21:36.794]    TraceClk_Pin=0x00040002
[21:21:36.794]    TraceD0_Pin=0x00040003
[21:21:36.795]    TraceD1_Pin=0x00040004
[21:21:36.795]    TraceD2_Pin=0x00040005
[21:21:36.795]    TraceD3_Pin=0x00040006
[21:21:36.795]  </debugvars>
[21:21:36.795]  
[21:21:36.796]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:21:36.796]    <block atomic="false" info="">
[21:21:36.796]      Sequence("CheckID");
[21:21:36.796]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:21:36.796]          <block atomic="false" info="">
[21:21:36.796]            __var pidr1 = 0;
[21:21:36.797]              // -> [pidr1 <= 0x00000000]
[21:21:36.797]            __var pidr2 = 0;
[21:21:36.797]              // -> [pidr2 <= 0x00000000]
[21:21:36.797]            __var jep106id = 0;
[21:21:36.797]              // -> [jep106id <= 0x00000000]
[21:21:36.797]            __var ROMTableBase = 0;
[21:21:36.798]              // -> [ROMTableBase <= 0x00000000]
[21:21:36.798]            __ap = 0;      // AHB-AP
[21:21:36.798]              // -> [__ap <= 0x00000000]
[21:21:36.798]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:21:36.798]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.799]              // -> [ROMTableBase <= 0xE00FF000]
[21:21:36.799]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:21:36.800]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.800]              // -> [pidr1 <= 0x00000004]
[21:21:36.800]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:21:36.801]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.801]              // -> [pidr2 <= 0x0000000A]
[21:21:36.802]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:21:36.802]              // -> [jep106id <= 0x00000020]
[21:21:36.802]          </block>
[21:21:36.802]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:21:36.802]            // if-block "jep106id != 0x20"
[21:21:36.802]              // =>  FALSE
[21:21:36.803]            // skip if-block "jep106id != 0x20"
[21:21:36.803]          </control>
[21:21:36.803]        </sequence>
[21:21:36.803]    </block>
[21:21:36.803]  </sequence>
[21:21:36.803]  
[21:21:36.804]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:21:36.804]  
[21:21:36.804]  <debugvars>
[21:21:36.804]    // Pre-defined
[21:21:36.804]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:21:36.804]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:21:36.804]    __dp=0x00000000
[21:21:36.804]    __ap=0x00000000
[21:21:36.805]    __traceout=0x00000001      (SWO Trace)
[21:21:36.805]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:21:36.805]    __FlashAddr=0x00000000
[21:21:36.805]    __FlashLen=0x00000000
[21:21:36.805]    __FlashArg=0x00000000
[21:21:36.805]    __FlashOp=0x00000000
[21:21:36.806]    __Result=0x00000000
[21:21:36.806]    
[21:21:36.806]    // User-defined
[21:21:36.806]    DbgMCU_CR=0x00000007
[21:21:36.806]    DbgMCU_APB1_Fz=0x00000000
[21:21:36.806]    DbgMCU_APB2_Fz=0x00000000
[21:21:36.806]    TraceClk_Pin=0x00040002
[21:21:36.807]    TraceD0_Pin=0x00040003
[21:21:36.807]    TraceD1_Pin=0x00040004
[21:21:36.807]    TraceD2_Pin=0x00040005
[21:21:36.807]    TraceD3_Pin=0x00040006
[21:21:36.807]  </debugvars>
[21:21:36.807]  
[21:21:36.808]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:21:36.808]    <block atomic="false" info="">
[21:21:36.808]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:21:36.809]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.809]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:21:36.810]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.810]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:21:36.811]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.812]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:21:36.813]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.813]    </block>
[21:21:36.813]  </sequence>
[21:21:36.813]  
[21:21:36.839]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[21:21:36.839]  
[21:21:36.839]  <debugvars>
[21:21:36.839]    // Pre-defined
[21:21:36.839]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:21:36.839]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:21:36.840]    __dp=0x00000000
[21:21:36.840]    __ap=0x00000000
[21:21:36.840]    __traceout=0x00000001      (SWO Trace)
[21:21:36.840]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:21:36.840]    __FlashAddr=0x00000000
[21:21:36.840]    __FlashLen=0x00000000
[21:21:36.841]    __FlashArg=0x00000000
[21:21:36.841]    __FlashOp=0x00000000
[21:21:36.841]    __Result=0x00000000
[21:21:36.841]    
[21:21:36.841]    // User-defined
[21:21:36.841]    DbgMCU_CR=0x00000007
[21:21:36.841]    DbgMCU_APB1_Fz=0x00000000
[21:21:36.841]    DbgMCU_APB2_Fz=0x00000000
[21:21:36.842]    TraceClk_Pin=0x00040002
[21:21:36.842]    TraceD0_Pin=0x00040003
[21:21:36.842]    TraceD1_Pin=0x00040004
[21:21:36.842]    TraceD2_Pin=0x00040005
[21:21:36.842]    TraceD3_Pin=0x00040006
[21:21:36.842]  </debugvars>
[21:21:36.842]  
[21:21:36.843]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:21:36.843]    <block atomic="false" info="">
[21:21:36.843]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:21:36.843]        // -> [traceSWO <= 0x00000001]
[21:21:36.843]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:21:36.843]        // -> [traceTPIU <= 0x00000000]
[21:21:36.843]    </block>
[21:21:36.844]    <control if="traceSWO" while="" timeout="0" info="">
[21:21:36.844]      // if-block "traceSWO"
[21:21:36.844]        // =>  TRUE
[21:21:36.844]      <block atomic="false" info="">
[21:21:36.844]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:21:36.844]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:21:36.844]            <block atomic="false" info="">
[21:21:36.844]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:21:36.845]                // -> [dbgmcu_val <= 0x00000000]
[21:21:36.845]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:21:36.845]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:21:36.845]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:21:36.845]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.846]                // -> [dbgmcu_val <= 0x00000007]
[21:21:36.846]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:21:36.846]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:21:36.846]              Sequence("ConfigureTraceSWOPin");
[21:21:36.846]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:21:36.846]                  <block atomic="false" info="">
[21:21:36.846]                    __var pin     = 0;
[21:21:36.847]                      // -> [pin <= 0x00000000]
[21:21:36.847]                    __var port    = 0;
[21:21:36.847]                      // -> [port <= 0x00000000]
[21:21:36.847]                    __var portAdr = 0;
[21:21:36.847]                      // -> [portAdr <= 0x00000000]
[21:21:36.847]                    __var pos     = 0;
[21:21:36.848]                      // -> [pos <= 0x00000000]
[21:21:36.848]                    __var SWO_Pin = 0x00010003;          // PB3
[21:21:36.848]                      // -> [SWO_Pin <= 0x00010003]
[21:21:36.848]                  </block>
[21:21:36.848]                  <block atomic="false" info="configure SWO">
[21:21:36.848]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:21:36.849]                      // -> [pin <= 0x00000003]
[21:21:36.849]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:21:36.849]                      // -> [port <= 0x00000001]
[21:21:36.849]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:21:36.849]                      // -> [portAdr <= 0x40020400]
[21:21:36.849]                    pos = pin * 2;
[21:21:36.850]                      // -> [pos <= 0x00000006]
[21:21:36.850]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:21:36.851]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.852]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.852]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:21:36.853]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.854]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.854]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:21:36.855]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.855]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.856]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:21:36.856]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.857]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.857]                  </block>
[21:21:36.858]                  <control if="pin <  8" while="" timeout="0" info="">
[21:21:36.858]                    // if-block "pin <  8"
[21:21:36.858]                      // =>  TRUE
[21:21:36.858]                    <block atomic="false" info="">
[21:21:36.858]                      pos = ((pin    ) & 7) * 4;
[21:21:36.858]                        // -> [pos <= 0x0000000C]
[21:21:36.859]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:21:36.859]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.861]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.861]                    </block>
[21:21:36.861]                    // end if-block "pin <  8"
[21:21:36.861]                  </control>
[21:21:36.861]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:21:36.861]                    // if-block "pin >= 8"
[21:21:36.861]                      // =>  FALSE
[21:21:36.862]                    // skip if-block "pin >= 8"
[21:21:36.862]                  </control>
[21:21:36.863]                </sequence>
[21:21:36.863]            </block>
[21:21:36.863]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:21:36.863]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:21:36.863]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.864]            </block>
[21:21:36.864]          </sequence>
[21:21:36.864]      </block>
[21:21:36.864]      // end if-block "traceSWO"
[21:21:36.864]    </control>
[21:21:36.864]    <control if="traceTPIU" while="" timeout="0" info="">
[21:21:36.866]      // if-block "traceTPIU"
[21:21:36.866]        // =>  FALSE
[21:21:36.866]      // skip if-block "traceTPIU"
[21:21:36.866]    </control>
[21:21:36.866]  </sequence>
[21:21:36.866]  
[21:21:36.878]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:21:36.878]  
[21:21:36.878]  <debugvars>
[21:21:36.878]    // Pre-defined
[21:21:36.878]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:21:36.878]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:21:36.878]    __dp=0x00000000
[21:21:36.878]    __ap=0x00000000
[21:21:36.879]    __traceout=0x00000001      (SWO Trace)
[21:21:36.879]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:21:36.879]    __FlashAddr=0x00000000
[21:21:36.879]    __FlashLen=0x00000000
[21:21:36.879]    __FlashArg=0x00000000
[21:21:36.879]    __FlashOp=0x00000000
[21:21:36.879]    __Result=0x00000000
[21:21:36.880]    
[21:21:36.880]    // User-defined
[21:21:36.880]    DbgMCU_CR=0x00000007
[21:21:36.880]    DbgMCU_APB1_Fz=0x00000000
[21:21:36.880]    DbgMCU_APB2_Fz=0x00000000
[21:21:36.880]    TraceClk_Pin=0x00040002
[21:21:36.880]    TraceD0_Pin=0x00040003
[21:21:36.880]    TraceD1_Pin=0x00040004
[21:21:36.881]    TraceD2_Pin=0x00040005
[21:21:36.881]    TraceD3_Pin=0x00040006
[21:21:36.881]  </debugvars>
[21:21:36.881]  
[21:21:36.881]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:21:36.881]    <block atomic="false" info="">
[21:21:36.881]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:21:36.882]        // -> [traceSWO <= 0x00000001]
[21:21:36.882]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:21:36.882]        // -> [traceTPIU <= 0x00000000]
[21:21:36.882]    </block>
[21:21:36.882]    <control if="traceSWO" while="" timeout="0" info="">
[21:21:36.882]      // if-block "traceSWO"
[21:21:36.882]        // =>  TRUE
[21:21:36.883]      <block atomic="false" info="">
[21:21:36.883]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:21:36.883]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:21:36.883]            <block atomic="false" info="">
[21:21:36.883]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:21:36.883]                // -> [dbgmcu_val <= 0x00000000]
[21:21:36.884]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:21:36.884]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:21:36.884]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:21:36.885]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.885]                // -> [dbgmcu_val <= 0x00000007]
[21:21:36.886]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:21:36.886]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:21:36.886]              Sequence("ConfigureTraceSWOPin");
[21:21:36.886]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:21:36.886]                  <block atomic="false" info="">
[21:21:36.887]                    __var pin     = 0;
[21:21:36.888]                      // -> [pin <= 0x00000000]
[21:21:36.888]                    __var port    = 0;
[21:21:36.888]                      // -> [port <= 0x00000000]
[21:21:36.888]                    __var portAdr = 0;
[21:21:36.888]                      // -> [portAdr <= 0x00000000]
[21:21:36.888]                    __var pos     = 0;
[21:21:36.888]                      // -> [pos <= 0x00000000]
[21:21:36.888]                    __var SWO_Pin = 0x00010003;          // PB3
[21:21:36.889]                      // -> [SWO_Pin <= 0x00010003]
[21:21:36.889]                  </block>
[21:21:36.889]                  <block atomic="false" info="configure SWO">
[21:21:36.889]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:21:36.889]                      // -> [pin <= 0x00000003]
[21:21:36.889]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:21:36.890]                      // -> [port <= 0x00000001]
[21:21:36.890]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:21:36.890]                      // -> [portAdr <= 0x40020400]
[21:21:36.890]                    pos = pin * 2;
[21:21:36.891]                      // -> [pos <= 0x00000006]
[21:21:36.891]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:21:36.891]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.892]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.892]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:21:36.893]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.894]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.895]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:21:36.895]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.895]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.895]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:21:36.896]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.897]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.897]                  </block>
[21:21:36.897]                  <control if="pin <  8" while="" timeout="0" info="">
[21:21:36.897]                    // if-block "pin <  8"
[21:21:36.898]                      // =>  TRUE
[21:21:36.898]                    <block atomic="false" info="">
[21:21:36.898]                      pos = ((pin    ) & 7) * 4;
[21:21:36.898]                        // -> [pos <= 0x0000000C]
[21:21:36.899]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:21:36.900]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.900]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.900]                    </block>
[21:21:36.901]                    // end if-block "pin <  8"
[21:21:36.901]                  </control>
[21:21:36.901]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:21:36.901]                    // if-block "pin >= 8"
[21:21:36.901]                      // =>  FALSE
[21:21:36.902]                    // skip if-block "pin >= 8"
[21:21:36.902]                  </control>
[21:21:36.902]                </sequence>
[21:21:36.902]            </block>
[21:21:36.902]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:21:36.903]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:21:36.904]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:36.904]            </block>
[21:21:36.904]          </sequence>
[21:21:36.904]      </block>
[21:21:36.904]      // end if-block "traceSWO"
[21:21:36.904]    </control>
[21:21:36.904]    <control if="traceTPIU" while="" timeout="0" info="">
[21:21:36.904]      // if-block "traceTPIU"
[21:21:36.904]        // =>  FALSE
[21:21:36.905]      // skip if-block "traceTPIU"
[21:21:36.905]    </control>
[21:21:36.905]  </sequence>
[21:21:36.905]  
[21:21:37.452]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:21:37.452]  
[21:21:37.500]  <debugvars>
[21:21:37.500]    // Pre-defined
[21:21:37.500]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:21:37.500]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:21:37.501]    __dp=0x00000000
[21:21:37.501]    __ap=0x00000000
[21:21:37.501]    __traceout=0x00000001      (SWO Trace)
[21:21:37.501]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:21:37.501]    __FlashAddr=0x00000000
[21:21:37.502]    __FlashLen=0x00000000
[21:21:37.502]    __FlashArg=0x00000000
[21:21:37.502]    __FlashOp=0x00000000
[21:21:37.503]    __Result=0x00000000
[21:21:37.503]    
[21:21:37.503]    // User-defined
[21:21:37.503]    DbgMCU_CR=0x00000007
[21:21:37.503]    DbgMCU_APB1_Fz=0x00000000
[21:21:37.503]    DbgMCU_APB2_Fz=0x00000000
[21:21:37.503]    TraceClk_Pin=0x00040002
[21:21:37.504]    TraceD0_Pin=0x00040003
[21:21:37.504]    TraceD1_Pin=0x00040004
[21:21:37.504]    TraceD2_Pin=0x00040005
[21:21:37.504]    TraceD3_Pin=0x00040006
[21:21:37.505]  </debugvars>
[21:21:37.505]  
[21:21:37.505]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:21:37.505]    <block atomic="false" info="">
[21:21:37.506]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:21:37.506]        // -> [traceSWO <= 0x00000001]
[21:21:37.506]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:21:37.506]        // -> [traceTPIU <= 0x00000000]
[21:21:37.506]    </block>
[21:21:37.507]    <control if="traceSWO" while="" timeout="0" info="">
[21:21:37.507]      // if-block "traceSWO"
[21:21:37.507]        // =>  TRUE
[21:21:37.507]      <block atomic="false" info="">
[21:21:37.508]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:21:37.508]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:21:37.508]            <block atomic="false" info="">
[21:21:37.509]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:21:37.509]                // -> [dbgmcu_val <= 0x00000000]
[21:21:37.509]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:21:37.509]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:21:37.510]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:21:37.511]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:21:37.511]                // -> [dbgmcu_val <= 0x00000007]
[21:21:37.511]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:21:37.511]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:21:37.512]              Sequence("ConfigureTraceSWOPin");
[21:21:37.512]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:21:37.512]                  <block atomic="false" info="">
[21:21:37.512]                    __var pin     = 0;
[21:21:37.513]                      // -> [pin <= 0x00000000]
[21:21:37.513]                    __var port    = 0;
[21:21:37.513]                      // -> [port <= 0x00000000]
[21:21:37.513]                    __var portAdr = 0;
[21:21:37.514]                      // -> [portAdr <= 0x00000000]
[21:21:37.514]                    __var pos     = 0;
[21:21:37.514]                      // -> [pos <= 0x00000000]
[21:21:37.514]                    __var SWO_Pin = 0x00010003;          // PB3
[21:21:37.515]                      // -> [SWO_Pin <= 0x00010003]
[21:21:37.515]                  </block>
[21:21:37.515]                  <block atomic="false" info="configure SWO">
[21:21:37.515]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:21:37.516]                      // -> [pin <= 0x00000003]
[21:21:37.516]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:21:37.516]                      // -> [port <= 0x00000001]
[21:21:37.517]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:21:37.517]                      // -> [portAdr <= 0x40020400]
[21:21:37.518]                    pos = pin * 2;
[21:21:37.518]                      // -> [pos <= 0x00000006]
[21:21:37.518]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:21:37.519]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:21:37.520]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:37.521]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:21:37.522]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:21:37.523]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:37.523]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:21:37.524]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:21:37.525]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:37.526]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:21:37.526]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:21:37.527]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:37.527]                  </block>
[21:21:37.527]                  <control if="pin <  8" while="" timeout="0" info="">
[21:21:37.528]                    // if-block "pin <  8"
[21:21:37.528]                      // =>  TRUE
[21:21:37.528]                    <block atomic="false" info="">
[21:21:37.528]                      pos = ((pin    ) & 7) * 4;
[21:21:37.528]                        // -> [pos <= 0x0000000C]
[21:21:37.528]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:21:37.529]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:21:37.530]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:37.530]                    </block>
[21:21:37.530]                    // end if-block "pin <  8"
[21:21:37.530]                  </control>
[21:21:37.531]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:21:37.531]                    // if-block "pin >= 8"
[21:21:37.531]                      // =>  FALSE
[21:21:37.531]                    // skip if-block "pin >= 8"
[21:21:37.531]                  </control>
[21:21:37.532]                </sequence>
[21:21:37.532]            </block>
[21:21:37.532]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:21:37.532]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:21:37.533]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:21:37.533]            </block>
[21:21:37.533]          </sequence>
[21:21:37.533]      </block>
[21:21:37.534]      // end if-block "traceSWO"
[21:21:37.534]    </control>
[21:21:37.534]    <control if="traceTPIU" while="" timeout="0" info="">
[21:21:37.534]      // if-block "traceTPIU"
[21:21:37.534]        // =>  FALSE
[21:21:37.535]      // skip if-block "traceTPIU"
[21:21:37.535]    </control>
[21:21:37.535]  </sequence>
[21:21:37.535]  
[21:23:39.309]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:23:39.309]  
[21:23:39.357]  <debugvars>
[21:23:39.358]    // Pre-defined
[21:23:39.358]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:23:39.358]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:23:39.359]    __dp=0x00000000
[21:23:39.359]    __ap=0x00000000
[21:23:39.359]    __traceout=0x00000001      (SWO Trace)
[21:23:39.360]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:23:39.360]    __FlashAddr=0x00000000
[21:23:39.360]    __FlashLen=0x00000000
[21:23:39.360]    __FlashArg=0x00000000
[21:23:39.362]    __FlashOp=0x00000000
[21:23:39.362]    __Result=0x00000000
[21:23:39.362]    
[21:23:39.362]    // User-defined
[21:23:39.363]    DbgMCU_CR=0x00000007
[21:23:39.363]    DbgMCU_APB1_Fz=0x00000000
[21:23:39.363]    DbgMCU_APB2_Fz=0x00000000
[21:23:39.363]    TraceClk_Pin=0x00040002
[21:23:39.363]    TraceD0_Pin=0x00040003
[21:23:39.364]    TraceD1_Pin=0x00040004
[21:23:39.364]    TraceD2_Pin=0x00040005
[21:23:39.364]    TraceD3_Pin=0x00040006
[21:23:39.365]  </debugvars>
[21:23:39.366]  
[21:23:39.366]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:23:39.366]    <block atomic="false" info="">
[21:23:39.366]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:23:39.366]        // -> [traceSWO <= 0x00000001]
[21:23:39.368]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:23:39.368]        // -> [traceTPIU <= 0x00000000]
[21:23:39.368]    </block>
[21:23:39.368]    <control if="traceSWO" while="" timeout="0" info="">
[21:23:39.368]      // if-block "traceSWO"
[21:23:39.369]        // =>  TRUE
[21:23:39.369]      <block atomic="false" info="">
[21:23:39.369]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:23:39.371]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:23:39.371]            <block atomic="false" info="">
[21:23:39.371]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:23:39.372]                // -> [dbgmcu_val <= 0x00000000]
[21:23:39.372]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:23:39.372]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:23:39.372]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:23:39.374]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:23:39.375]                // -> [dbgmcu_val <= 0x00000007]
[21:23:39.375]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:23:39.375]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:23:39.375]              Sequence("ConfigureTraceSWOPin");
[21:23:39.376]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:23:39.376]                  <block atomic="false" info="">
[21:23:39.377]                    __var pin     = 0;
[21:23:39.378]                      // -> [pin <= 0x00000000]
[21:23:39.378]                    __var port    = 0;
[21:23:39.378]                      // -> [port <= 0x00000000]
[21:23:39.378]                    __var portAdr = 0;
[21:23:39.378]                      // -> [portAdr <= 0x00000000]
[21:23:39.379]                    __var pos     = 0;
[21:23:39.379]                      // -> [pos <= 0x00000000]
[21:23:39.380]                    __var SWO_Pin = 0x00010003;          // PB3
[21:23:39.380]                      // -> [SWO_Pin <= 0x00010003]
[21:23:39.380]                  </block>
[21:23:39.380]                  <block atomic="false" info="configure SWO">
[21:23:39.380]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:23:39.380]                      // -> [pin <= 0x00000003]
[21:23:39.382]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:23:39.382]                      // -> [port <= 0x00000001]
[21:23:39.382]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:23:39.382]                      // -> [portAdr <= 0x40020400]
[21:23:39.382]                    pos = pin * 2;
[21:23:39.383]                      // -> [pos <= 0x00000006]
[21:23:39.383]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:23:39.385]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:23:39.386]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:23:39.386]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:23:39.388]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:23:39.389]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:23:39.390]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:23:39.391]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:23:39.393]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:23:39.393]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:23:39.395]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:23:39.397]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:23:39.397]                  </block>
[21:23:39.397]                  <control if="pin <  8" while="" timeout="0" info="">
[21:23:39.398]                    // if-block "pin <  8"
[21:23:39.398]                      // =>  TRUE
[21:23:39.399]                    <block atomic="false" info="">
[21:23:39.399]                      pos = ((pin    ) & 7) * 4;
[21:23:39.400]                        // -> [pos <= 0x0000000C]
[21:23:39.400]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:23:39.401]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:23:39.403]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:23:39.403]                    </block>
[21:23:39.403]                    // end if-block "pin <  8"
[21:23:39.403]                  </control>
[21:23:39.405]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:23:39.405]                    // if-block "pin >= 8"
[21:23:39.405]                      // =>  FALSE
[21:23:39.406]                    // skip if-block "pin >= 8"
[21:23:39.406]                  </control>
[21:23:39.406]                </sequence>
[21:23:39.406]            </block>
[21:23:39.407]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:23:39.407]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:23:39.409]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:23:39.409]            </block>
[21:23:39.411]          </sequence>
[21:23:39.411]      </block>
[21:23:39.411]      // end if-block "traceSWO"
[21:23:39.411]    </control>
[21:23:39.411]    <control if="traceTPIU" while="" timeout="0" info="">
[21:23:39.412]      // if-block "traceTPIU"
[21:23:39.412]        // =>  FALSE
[21:23:39.412]      // skip if-block "traceTPIU"
[21:23:39.413]    </control>
[21:23:39.413]  </sequence>
[21:23:39.413]  
[21:24:58.805]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:24:58.805]  
[21:24:58.852]  <debugvars>
[21:24:58.852]    // Pre-defined
[21:24:58.853]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:24:58.853]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:24:58.854]    __dp=0x00000000
[21:24:58.854]    __ap=0x00000000
[21:24:58.855]    __traceout=0x00000001      (SWO Trace)
[21:24:58.855]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:24:58.855]    __FlashAddr=0x00000000
[21:24:58.856]    __FlashLen=0x00000000
[21:24:58.856]    __FlashArg=0x00000000
[21:24:58.856]    __FlashOp=0x00000000
[21:24:58.857]    __Result=0x00000000
[21:24:58.857]    
[21:24:58.857]    // User-defined
[21:24:58.857]    DbgMCU_CR=0x00000007
[21:24:58.858]    DbgMCU_APB1_Fz=0x00000000
[21:24:58.859]    DbgMCU_APB2_Fz=0x00000000
[21:24:58.859]    TraceClk_Pin=0x00040002
[21:24:58.859]    TraceD0_Pin=0x00040003
[21:24:58.860]    TraceD1_Pin=0x00040004
[21:24:58.860]    TraceD2_Pin=0x00040005
[21:24:58.861]    TraceD3_Pin=0x00040006
[21:24:58.861]  </debugvars>
[21:24:58.862]  
[21:24:58.862]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:24:58.862]    <block atomic="false" info="">
[21:24:58.863]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:24:58.863]        // -> [traceSWO <= 0x00000001]
[21:24:58.864]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:24:58.864]        // -> [traceTPIU <= 0x00000000]
[21:24:58.864]    </block>
[21:24:58.865]    <control if="traceSWO" while="" timeout="0" info="">
[21:24:58.865]      // if-block "traceSWO"
[21:24:58.866]        // =>  TRUE
[21:24:58.866]      <block atomic="false" info="">
[21:24:58.866]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:24:58.867]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:24:58.867]            <block atomic="false" info="">
[21:24:58.867]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:24:58.868]                // -> [dbgmcu_val <= 0x00000000]
[21:24:58.868]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:24:58.869]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:24:58.869]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:24:58.870]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:24:58.871]                // -> [dbgmcu_val <= 0x00000007]
[21:24:58.871]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:24:58.872]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:24:58.872]              Sequence("ConfigureTraceSWOPin");
[21:24:58.872]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:24:58.873]                  <block atomic="false" info="">
[21:24:58.873]                    __var pin     = 0;
[21:24:58.873]                      // -> [pin <= 0x00000000]
[21:24:58.873]                    __var port    = 0;
[21:24:58.874]                      // -> [port <= 0x00000000]
[21:24:58.874]                    __var portAdr = 0;
[21:24:58.875]                      // -> [portAdr <= 0x00000000]
[21:24:58.875]                    __var pos     = 0;
[21:24:58.875]                      // -> [pos <= 0x00000000]
[21:24:58.875]                    __var SWO_Pin = 0x00010003;          // PB3
[21:24:58.876]                      // -> [SWO_Pin <= 0x00010003]
[21:24:58.876]                  </block>
[21:24:58.877]                  <block atomic="false" info="configure SWO">
[21:24:58.877]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:24:58.877]                      // -> [pin <= 0x00000003]
[21:24:58.878]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:24:58.878]                      // -> [port <= 0x00000001]
[21:24:58.879]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:24:58.879]                      // -> [portAdr <= 0x40020400]
[21:24:58.879]                    pos = pin * 2;
[21:24:58.880]                      // -> [pos <= 0x00000006]
[21:24:58.880]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:24:58.882]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:24:58.883]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:24:58.884]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:24:58.885]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:24:58.887]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:24:58.888]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:24:58.889]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:24:58.890]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:24:58.891]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:24:58.893]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:24:58.894]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:24:58.895]                  </block>
[21:24:58.895]                  <control if="pin <  8" while="" timeout="0" info="">
[21:24:58.895]                    // if-block "pin <  8"
[21:24:58.896]                      // =>  TRUE
[21:24:58.896]                    <block atomic="false" info="">
[21:24:58.896]                      pos = ((pin    ) & 7) * 4;
[21:24:58.897]                        // -> [pos <= 0x0000000C]
[21:24:58.897]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:24:58.898]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:24:58.900]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:24:58.900]                    </block>
[21:24:58.900]                    // end if-block "pin <  8"
[21:24:58.901]                  </control>
[21:24:58.902]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:24:58.902]                    // if-block "pin >= 8"
[21:24:58.902]                      // =>  FALSE
[21:24:58.902]                    // skip if-block "pin >= 8"
[21:24:58.902]                  </control>
[21:24:58.903]                </sequence>
[21:24:58.903]            </block>
[21:24:58.903]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:24:58.905]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:24:58.906]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:24:58.906]            </block>
[21:24:58.906]          </sequence>
[21:24:58.906]      </block>
[21:24:58.907]      // end if-block "traceSWO"
[21:24:58.907]    </control>
[21:24:58.908]    <control if="traceTPIU" while="" timeout="0" info="">
[21:24:58.908]      // if-block "traceTPIU"
[21:24:58.908]        // =>  FALSE
[21:24:58.909]      // skip if-block "traceTPIU"
[21:24:58.909]    </control>
[21:24:58.909]  </sequence>
[21:24:58.910]  
[21:30:24.070]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:30:24.070]  
[21:30:24.070]  <debugvars>
[21:30:24.070]    // Pre-defined
[21:30:24.070]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:30:24.070]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:30:24.070]    __dp=0x00000000
[21:30:24.070]    __ap=0x00000000
[21:30:24.071]    __traceout=0x00000001      (SWO Trace)
[21:30:24.071]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:30:24.071]    __FlashAddr=0x00000000
[21:30:24.071]    __FlashLen=0x00000000
[21:30:24.071]    __FlashArg=0x00000000
[21:30:24.071]    __FlashOp=0x00000000
[21:30:24.071]    __Result=0x00000000
[21:30:24.071]    
[21:30:24.071]    // User-defined
[21:30:24.072]    DbgMCU_CR=0x00000007
[21:30:24.072]    DbgMCU_APB1_Fz=0x00000000
[21:30:24.072]    DbgMCU_APB2_Fz=0x00000000
[21:30:24.072]    TraceClk_Pin=0x00040002
[21:30:24.072]    TraceD0_Pin=0x00040003
[21:30:24.072]    TraceD1_Pin=0x00040004
[21:30:24.072]    TraceD2_Pin=0x00040005
[21:30:24.072]    TraceD3_Pin=0x00040006
[21:30:24.073]  </debugvars>
[21:30:24.073]  
[21:30:24.073]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:30:24.073]    <block atomic="false" info="">
[21:30:24.073]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:30:24.073]        // -> [traceSWO <= 0x00000001]
[21:30:24.073]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:30:24.074]        // -> [traceTPIU <= 0x00000000]
[21:30:24.074]    </block>
[21:30:24.074]    <control if="traceSWO" while="" timeout="0" info="">
[21:30:24.074]      // if-block "traceSWO"
[21:30:24.074]        // =>  TRUE
[21:30:24.074]      <block atomic="false" info="">
[21:30:24.074]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:30:24.074]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:30:24.075]            <block atomic="false" info="">
[21:30:24.075]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:30:24.075]                // -> [dbgmcu_val <= 0x00000000]
[21:30:24.075]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:30:24.075]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:30:24.075]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:30:24.076]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:30:24.076]                // -> [dbgmcu_val <= 0x00000007]
[21:30:24.076]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:30:24.076]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:30:24.076]              Sequence("ConfigureTraceSWOPin");
[21:30:24.077]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:30:24.077]                  <block atomic="false" info="">
[21:30:24.077]                    __var pin     = 0;
[21:30:24.077]                      // -> [pin <= 0x00000000]
[21:30:24.077]                    __var port    = 0;
[21:30:24.077]                      // -> [port <= 0x00000000]
[21:30:24.077]                    __var portAdr = 0;
[21:30:24.077]                      // -> [portAdr <= 0x00000000]
[21:30:24.078]                    __var pos     = 0;
[21:30:24.078]                      // -> [pos <= 0x00000000]
[21:30:24.078]                    __var SWO_Pin = 0x00010003;          // PB3
[21:30:24.078]                      // -> [SWO_Pin <= 0x00010003]
[21:30:24.079]                  </block>
[21:30:24.079]                  <block atomic="false" info="configure SWO">
[21:30:24.079]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:30:24.079]                      // -> [pin <= 0x00000003]
[21:30:24.079]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:30:24.079]                      // -> [port <= 0x00000001]
[21:30:24.079]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:30:24.079]                      // -> [portAdr <= 0x40020400]
[21:30:24.079]                    pos = pin * 2;
[21:30:24.080]                      // -> [pos <= 0x00000006]
[21:30:24.080]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:30:24.080]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:30:24.081]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:24.081]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:30:24.081]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:30:24.082]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:24.082]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:30:24.083]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:30:24.083]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:24.083]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:30:24.084]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:30:24.085]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:24.085]                  </block>
[21:30:24.085]                  <control if="pin <  8" while="" timeout="0" info="">
[21:30:24.086]                    // if-block "pin <  8"
[21:30:24.086]                      // =>  TRUE
[21:30:24.086]                    <block atomic="false" info="">
[21:30:24.086]                      pos = ((pin    ) & 7) * 4;
[21:30:24.086]                        // -> [pos <= 0x0000000C]
[21:30:24.087]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:30:24.087]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:30:24.088]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:24.088]                    </block>
[21:30:24.089]                    // end if-block "pin <  8"
[21:30:24.089]                  </control>
[21:30:24.089]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:30:24.089]                    // if-block "pin >= 8"
[21:30:24.089]                      // =>  FALSE
[21:30:24.090]                    // skip if-block "pin >= 8"
[21:30:24.090]                  </control>
[21:30:24.090]                </sequence>
[21:30:24.090]            </block>
[21:30:24.090]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:30:24.091]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:30:24.091]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:30:24.092]            </block>
[21:30:24.092]          </sequence>
[21:30:24.092]      </block>
[21:30:24.092]      // end if-block "traceSWO"
[21:30:24.092]    </control>
[21:30:24.093]    <control if="traceTPIU" while="" timeout="0" info="">
[21:30:24.093]      // if-block "traceTPIU"
[21:30:24.093]        // =>  FALSE
[21:30:24.093]      // skip if-block "traceTPIU"
[21:30:24.093]    </control>
[21:30:24.093]  </sequence>
[21:30:24.094]  
[21:41:35.383]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[21:41:35.383]  
[21:41:35.430]  <debugvars>
[21:41:35.430]    // Pre-defined
[21:41:35.430]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:41:35.431]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:41:35.431]    __dp=0x00000000
[21:41:35.431]    __ap=0x00000000
[21:41:35.431]    __traceout=0x00000001      (SWO Trace)
[21:41:35.431]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:41:35.431]    __FlashAddr=0x00000000
[21:41:35.432]    __FlashLen=0x00000000
[21:41:35.432]    __FlashArg=0x00000000
[21:41:35.432]    __FlashOp=0x00000000
[21:41:35.432]    __Result=0x00000000
[21:41:35.432]    
[21:41:35.432]    // User-defined
[21:41:35.432]    DbgMCU_CR=0x00000007
[21:41:35.432]    DbgMCU_APB1_Fz=0x00000000
[21:41:35.432]    DbgMCU_APB2_Fz=0x00000000
[21:41:35.433]    TraceClk_Pin=0x00040002
[21:41:35.433]    TraceD0_Pin=0x00040003
[21:41:35.433]    TraceD1_Pin=0x00040004
[21:41:35.433]    TraceD2_Pin=0x00040005
[21:41:35.434]    TraceD3_Pin=0x00040006
[21:41:35.434]  </debugvars>
[21:41:35.434]  
[21:41:35.434]  <sequence name="TraceStop" Pname="" disable="false" info="">
[21:41:35.434]    <block atomic="false" info="">
[21:41:35.435]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[21:41:35.435]        // -> [traceSWO <= 0x00000001]
[21:41:35.435]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[21:41:35.435]        // -> [traceTPIU <= 0x00000000]
[21:41:35.435]    </block>
[21:41:35.436]    <control if="traceSWO" while="" timeout="0" info="">
[21:41:35.436]      // if-block "traceSWO"
[21:41:35.436]        // =>  TRUE
[21:41:35.436]      <block atomic="false" info="">
[21:41:35.436]        Sequence("DisableTraceSWO");
[21:41:35.437]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[21:41:35.437]            <block atomic="false" info="">
[21:41:35.437]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:41:35.437]                // -> [dbgmcu_val <= 0x00000000]
[21:41:35.437]            </block>
[21:41:35.438]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[21:41:35.438]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[21:41:35.439]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:41:35.439]                // -> [dbgmcu_val <= 0x00000007]
[21:41:35.439]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[21:41:35.440]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:41:35.440]            </block>
[21:41:35.440]          </sequence>
[21:41:35.440]      </block>
[21:41:35.441]      // end if-block "traceSWO"
[21:41:35.441]    </control>
[21:41:35.441]    <control if="traceTPIU" while="" timeout="0" info="">
[21:41:35.441]      // if-block "traceTPIU"
[21:41:35.441]        // =>  FALSE
[21:41:35.441]      // skip if-block "traceTPIU"
[21:41:35.441]    </control>
[21:41:35.442]  </sequence>
[21:41:35.442]  
[21:43:37.725]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:43:37.725]  
[21:43:37.772]  <debugvars>
[21:43:37.773]    // Pre-defined
[21:43:37.773]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:43:37.774]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:43:37.774]    __dp=0x00000000
[21:43:37.774]    __ap=0x00000000
[21:43:37.775]    __traceout=0x00000001      (SWO Trace)
[21:43:37.775]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:43:37.775]    __FlashAddr=0x00000000
[21:43:37.776]    __FlashLen=0x00000000
[21:43:37.776]    __FlashArg=0x00000000
[21:43:37.777]    __FlashOp=0x00000000
[21:43:37.777]    __Result=0x00000000
[21:43:37.777]    
[21:43:37.777]    // User-defined
[21:43:37.778]    DbgMCU_CR=0x00000007
[21:43:37.778]    DbgMCU_APB1_Fz=0x00000000
[21:43:37.779]    DbgMCU_APB2_Fz=0x00000000
[21:43:37.779]    TraceClk_Pin=0x00040002
[21:43:37.779]    TraceD0_Pin=0x00040003
[21:43:37.780]    TraceD1_Pin=0x00040004
[21:43:37.780]    TraceD2_Pin=0x00040005
[21:43:37.781]    TraceD3_Pin=0x00040006
[21:43:37.781]  </debugvars>
[21:43:37.782]  
[21:43:37.782]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:43:37.782]    <block atomic="false" info="">
[21:43:37.783]      Sequence("CheckID");
[21:43:37.783]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:43:37.783]          <block atomic="false" info="">
[21:43:37.784]            __var pidr1 = 0;
[21:43:37.784]              // -> [pidr1 <= 0x00000000]
[21:43:37.785]            __var pidr2 = 0;
[21:43:37.785]              // -> [pidr2 <= 0x00000000]
[21:43:37.785]            __var jep106id = 0;
[21:43:37.786]              // -> [jep106id <= 0x00000000]
[21:43:37.786]            __var ROMTableBase = 0;
[21:43:37.786]              // -> [ROMTableBase <= 0x00000000]
[21:43:37.787]            __ap = 0;      // AHB-AP
[21:43:37.787]              // -> [__ap <= 0x00000000]
[21:43:37.787]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:43:37.788]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.789]              // -> [ROMTableBase <= 0xE00FF000]
[21:43:37.789]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:43:37.791]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.791]              // -> [pidr1 <= 0x00000004]
[21:43:37.792]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:43:37.793]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.794]              // -> [pidr2 <= 0x0000000A]
[21:43:37.794]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:43:37.795]              // -> [jep106id <= 0x00000020]
[21:43:37.795]          </block>
[21:43:37.795]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:43:37.796]            // if-block "jep106id != 0x20"
[21:43:37.796]              // =>  FALSE
[21:43:37.796]            // skip if-block "jep106id != 0x20"
[21:43:37.797]          </control>
[21:43:37.797]        </sequence>
[21:43:37.797]    </block>
[21:43:37.798]  </sequence>
[21:43:37.798]  
[21:43:37.799]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:43:37.799]  
[21:43:37.799]  <debugvars>
[21:43:37.799]    // Pre-defined
[21:43:37.800]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:43:37.800]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:43:37.801]    __dp=0x00000000
[21:43:37.801]    __ap=0x00000000
[21:43:37.801]    __traceout=0x00000001      (SWO Trace)
[21:43:37.802]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:43:37.802]    __FlashAddr=0x00000000
[21:43:37.802]    __FlashLen=0x00000000
[21:43:37.803]    __FlashArg=0x00000000
[21:43:37.803]    __FlashOp=0x00000000
[21:43:37.803]    __Result=0x00000000
[21:43:37.804]    
[21:43:37.804]    // User-defined
[21:43:37.804]    DbgMCU_CR=0x00000007
[21:43:37.804]    DbgMCU_APB1_Fz=0x00000000
[21:43:37.804]    DbgMCU_APB2_Fz=0x00000000
[21:43:37.805]    TraceClk_Pin=0x00040002
[21:43:37.805]    TraceD0_Pin=0x00040003
[21:43:37.805]    TraceD1_Pin=0x00040004
[21:43:37.806]    TraceD2_Pin=0x00040005
[21:43:37.806]    TraceD3_Pin=0x00040006
[21:43:37.807]  </debugvars>
[21:43:37.807]  
[21:43:37.807]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:43:37.808]    <block atomic="false" info="">
[21:43:37.808]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:43:37.810]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.811]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:43:37.812]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.813]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:43:37.814]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.815]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:43:37.816]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.817]    </block>
[21:43:37.817]  </sequence>
[21:43:37.817]  
[21:43:37.870]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[21:43:37.870]  
[21:43:37.872]  <debugvars>
[21:43:37.872]    // Pre-defined
[21:43:37.872]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:43:37.872]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:43:37.873]    __dp=0x00000000
[21:43:37.873]    __ap=0x00000000
[21:43:37.873]    __traceout=0x00000001      (SWO Trace)
[21:43:37.874]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:43:37.874]    __FlashAddr=0x00000000
[21:43:37.874]    __FlashLen=0x00000000
[21:43:37.874]    __FlashArg=0x00000000
[21:43:37.874]    __FlashOp=0x00000000
[21:43:37.875]    __Result=0x00000000
[21:43:37.875]    
[21:43:37.875]    // User-defined
[21:43:37.875]    DbgMCU_CR=0x00000007
[21:43:37.877]    DbgMCU_APB1_Fz=0x00000000
[21:43:37.877]    DbgMCU_APB2_Fz=0x00000000
[21:43:37.877]    TraceClk_Pin=0x00040002
[21:43:37.878]    TraceD0_Pin=0x00040003
[21:43:37.878]    TraceD1_Pin=0x00040004
[21:43:37.879]    TraceD2_Pin=0x00040005
[21:43:37.879]    TraceD3_Pin=0x00040006
[21:43:37.879]  </debugvars>
[21:43:37.879]  
[21:43:37.879]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:43:37.880]    <block atomic="false" info="">
[21:43:37.880]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:43:37.880]        // -> [traceSWO <= 0x00000001]
[21:43:37.882]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:43:37.882]        // -> [traceTPIU <= 0x00000000]
[21:43:37.882]    </block>
[21:43:37.882]    <control if="traceSWO" while="" timeout="0" info="">
[21:43:37.882]      // if-block "traceSWO"
[21:43:37.883]        // =>  TRUE
[21:43:37.883]      <block atomic="false" info="">
[21:43:37.884]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:43:37.884]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:43:37.885]            <block atomic="false" info="">
[21:43:37.885]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:43:37.886]                // -> [dbgmcu_val <= 0x00000000]
[21:43:37.886]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:43:37.886]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:43:37.887]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:43:37.888]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.889]                // -> [dbgmcu_val <= 0x00000007]
[21:43:37.889]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:43:37.889]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:43:37.891]              Sequence("ConfigureTraceSWOPin");
[21:43:37.891]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:43:37.891]                  <block atomic="false" info="">
[21:43:37.891]                    __var pin     = 0;
[21:43:37.892]                      // -> [pin <= 0x00000000]
[21:43:37.892]                    __var port    = 0;
[21:43:37.893]                      // -> [port <= 0x00000000]
[21:43:37.893]                    __var portAdr = 0;
[21:43:37.893]                      // -> [portAdr <= 0x00000000]
[21:43:37.893]                    __var pos     = 0;
[21:43:37.895]                      // -> [pos <= 0x00000000]
[21:43:37.895]                    __var SWO_Pin = 0x00010003;          // PB3
[21:43:37.895]                      // -> [SWO_Pin <= 0x00010003]
[21:43:37.895]                  </block>
[21:43:37.895]                  <block atomic="false" info="configure SWO">
[21:43:37.895]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:43:37.897]                      // -> [pin <= 0x00000003]
[21:43:37.897]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:43:37.897]                      // -> [port <= 0x00000001]
[21:43:37.897]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:43:37.898]                      // -> [portAdr <= 0x40020400]
[21:43:37.899]                    pos = pin * 2;
[21:43:37.899]                      // -> [pos <= 0x00000006]
[21:43:37.899]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:43:37.901]                      // -> [Read32(0x40023830) => 0x00000007]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.903]                      // -> [Write32(0x40023830, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.903]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:43:37.904]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.906]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.906]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:43:37.907]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.910]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.910]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:43:37.911]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.913]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.913]                  </block>
[21:43:37.913]                  <control if="pin <  8" while="" timeout="0" info="">
[21:43:37.914]                    // if-block "pin <  8"
[21:43:37.914]                      // =>  TRUE
[21:43:37.915]                    <block atomic="false" info="">
[21:43:37.915]                      pos = ((pin    ) & 7) * 4;
[21:43:37.916]                        // -> [pos <= 0x0000000C]
[21:43:37.916]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:43:37.918]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.919]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.919]                    </block>
[21:43:37.920]                    // end if-block "pin <  8"
[21:43:37.920]                  </control>
[21:43:37.920]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:43:37.921]                    // if-block "pin >= 8"
[21:43:37.921]                      // =>  FALSE
[21:43:37.922]                    // skip if-block "pin >= 8"
[21:43:37.922]                  </control>
[21:43:37.922]                </sequence>
[21:43:37.923]            </block>
[21:43:37.923]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:43:37.923]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:43:37.925]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.925]            </block>
[21:43:37.925]          </sequence>
[21:43:37.926]      </block>
[21:43:37.926]      // end if-block "traceSWO"
[21:43:37.926]    </control>
[21:43:37.927]    <control if="traceTPIU" while="" timeout="0" info="">
[21:43:37.928]      // if-block "traceTPIU"
[21:43:37.928]        // =>  FALSE
[21:43:37.929]      // skip if-block "traceTPIU"
[21:43:37.929]    </control>
[21:43:37.929]  </sequence>
[21:43:37.930]  
[21:43:37.949]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:43:37.949]  
[21:43:37.949]  <debugvars>
[21:43:37.949]    // Pre-defined
[21:43:37.950]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:43:37.950]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:43:37.950]    __dp=0x00000000
[21:43:37.950]    __ap=0x00000000
[21:43:37.951]    __traceout=0x00000001      (SWO Trace)
[21:43:37.951]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:43:37.951]    __FlashAddr=0x00000000
[21:43:37.952]    __FlashLen=0x00000000
[21:43:37.952]    __FlashArg=0x00000000
[21:43:37.953]    __FlashOp=0x00000000
[21:43:37.953]    __Result=0x00000000
[21:43:37.953]    
[21:43:37.953]    // User-defined
[21:43:37.953]    DbgMCU_CR=0x00000007
[21:43:37.954]    DbgMCU_APB1_Fz=0x00000000
[21:43:37.955]    DbgMCU_APB2_Fz=0x00000000
[21:43:37.955]    TraceClk_Pin=0x00040002
[21:43:37.955]    TraceD0_Pin=0x00040003
[21:43:37.956]    TraceD1_Pin=0x00040004
[21:43:37.956]    TraceD2_Pin=0x00040005
[21:43:37.956]    TraceD3_Pin=0x00040006
[21:43:37.957]  </debugvars>
[21:43:37.957]  
[21:43:37.957]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:43:37.957]    <block atomic="false" info="">
[21:43:37.958]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:43:37.958]        // -> [traceSWO <= 0x00000001]
[21:43:37.958]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:43:37.959]        // -> [traceTPIU <= 0x00000000]
[21:43:37.959]    </block>
[21:43:37.960]    <control if="traceSWO" while="" timeout="0" info="">
[21:43:37.960]      // if-block "traceSWO"
[21:43:37.960]        // =>  TRUE
[21:43:37.961]      <block atomic="false" info="">
[21:43:37.961]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:43:37.961]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:43:37.962]            <block atomic="false" info="">
[21:43:37.962]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:43:37.963]                // -> [dbgmcu_val <= 0x00000000]
[21:43:37.963]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:43:37.963]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:43:37.963]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:43:37.966]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.966]                // -> [dbgmcu_val <= 0x00000007]
[21:43:37.966]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:43:37.966]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:43:37.966]              Sequence("ConfigureTraceSWOPin");
[21:43:37.967]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:43:37.967]                  <block atomic="false" info="">
[21:43:37.967]                    __var pin     = 0;
[21:43:37.968]                      // -> [pin <= 0x00000000]
[21:43:37.968]                    __var port    = 0;
[21:43:37.968]                      // -> [port <= 0x00000000]
[21:43:37.969]                    __var portAdr = 0;
[21:43:37.969]                      // -> [portAdr <= 0x00000000]
[21:43:37.970]                    __var pos     = 0;
[21:43:37.970]                      // -> [pos <= 0x00000000]
[21:43:37.971]                    __var SWO_Pin = 0x00010003;          // PB3
[21:43:37.971]                      // -> [SWO_Pin <= 0x00010003]
[21:43:37.972]                  </block>
[21:43:37.972]                  <block atomic="false" info="configure SWO">
[21:43:37.972]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:43:37.973]                      // -> [pin <= 0x00000003]
[21:43:37.973]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:43:37.974]                      // -> [port <= 0x00000001]
[21:43:37.974]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:43:37.975]                      // -> [portAdr <= 0x40020400]
[21:43:37.975]                    pos = pin * 2;
[21:43:37.976]                      // -> [pos <= 0x00000006]
[21:43:37.976]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:43:37.977]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.979]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.980]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:43:37.982]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.983]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.983]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:43:37.984]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.986]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.986]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:43:37.987]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.989]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.989]                  </block>
[21:43:37.990]                  <control if="pin <  8" while="" timeout="0" info="">
[21:43:37.990]                    // if-block "pin <  8"
[21:43:37.991]                      // =>  TRUE
[21:43:37.991]                    <block atomic="false" info="">
[21:43:37.992]                      pos = ((pin    ) & 7) * 4;
[21:43:37.992]                        // -> [pos <= 0x0000000C]
[21:43:37.993]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:43:37.994]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.996]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:37.996]                    </block>
[21:43:37.996]                    // end if-block "pin <  8"
[21:43:37.997]                  </control>
[21:43:37.997]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:43:37.997]                    // if-block "pin >= 8"
[21:43:37.998]                      // =>  FALSE
[21:43:37.998]                    // skip if-block "pin >= 8"
[21:43:37.998]                  </control>
[21:43:37.998]                </sequence>
[21:43:37.999]            </block>
[21:43:37.999]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:43:38.000]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:43:38.001]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:38.001]            </block>
[21:43:38.001]          </sequence>
[21:43:38.002]      </block>
[21:43:38.002]      // end if-block "traceSWO"
[21:43:38.003]    </control>
[21:43:38.003]    <control if="traceTPIU" while="" timeout="0" info="">
[21:43:38.003]      // if-block "traceTPIU"
[21:43:38.003]        // =>  FALSE
[21:43:38.003]      // skip if-block "traceTPIU"
[21:43:38.004]    </control>
[21:43:38.004]  </sequence>
[21:43:38.005]  
[21:43:38.458]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:43:38.458]  
[21:43:38.464]  <debugvars>
[21:43:38.465]    // Pre-defined
[21:43:38.465]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:43:38.465]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:43:38.465]    __dp=0x00000000
[21:43:38.465]    __ap=0x00000000
[21:43:38.465]    __traceout=0x00000001      (SWO Trace)
[21:43:38.465]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:43:38.465]    __FlashAddr=0x00000000
[21:43:38.465]    __FlashLen=0x00000000
[21:43:38.466]    __FlashArg=0x00000000
[21:43:38.466]    __FlashOp=0x00000000
[21:43:38.466]    __Result=0x00000000
[21:43:38.466]    
[21:43:38.466]    // User-defined
[21:43:38.466]    DbgMCU_CR=0x00000007
[21:43:38.466]    DbgMCU_APB1_Fz=0x00000000
[21:43:38.467]    DbgMCU_APB2_Fz=0x00000000
[21:43:38.467]    TraceClk_Pin=0x00040002
[21:43:38.467]    TraceD0_Pin=0x00040003
[21:43:38.467]    TraceD1_Pin=0x00040004
[21:43:38.467]    TraceD2_Pin=0x00040005
[21:43:38.467]    TraceD3_Pin=0x00040006
[21:43:38.467]  </debugvars>
[21:43:38.468]  
[21:43:38.468]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:43:38.468]    <block atomic="false" info="">
[21:43:38.468]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:43:38.468]        // -> [traceSWO <= 0x00000001]
[21:43:38.468]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:43:38.469]        // -> [traceTPIU <= 0x00000000]
[21:43:38.469]    </block>
[21:43:38.469]    <control if="traceSWO" while="" timeout="0" info="">
[21:43:38.469]      // if-block "traceSWO"
[21:43:38.469]        // =>  TRUE
[21:43:38.469]      <block atomic="false" info="">
[21:43:38.469]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:43:38.470]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:43:38.470]            <block atomic="false" info="">
[21:43:38.470]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:43:38.470]                // -> [dbgmcu_val <= 0x00000000]
[21:43:38.470]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:43:38.470]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:43:38.471]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:43:38.471]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:43:38.472]                // -> [dbgmcu_val <= 0x00000007]
[21:43:38.472]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:43:38.472]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:43:38.472]              Sequence("ConfigureTraceSWOPin");
[21:43:38.472]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:43:38.473]                  <block atomic="false" info="">
[21:43:38.473]                    __var pin     = 0;
[21:43:38.473]                      // -> [pin <= 0x00000000]
[21:43:38.473]                    __var port    = 0;
[21:43:38.473]                      // -> [port <= 0x00000000]
[21:43:38.474]                    __var portAdr = 0;
[21:43:38.474]                      // -> [portAdr <= 0x00000000]
[21:43:38.474]                    __var pos     = 0;
[21:43:38.474]                      // -> [pos <= 0x00000000]
[21:43:38.474]                    __var SWO_Pin = 0x00010003;          // PB3
[21:43:38.474]                      // -> [SWO_Pin <= 0x00010003]
[21:43:38.474]                  </block>
[21:43:38.475]                  <block atomic="false" info="configure SWO">
[21:43:38.475]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:43:38.475]                      // -> [pin <= 0x00000003]
[21:43:38.475]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:43:38.475]                      // -> [port <= 0x00000001]
[21:43:38.476]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:43:38.476]                      // -> [portAdr <= 0x40020400]
[21:43:38.476]                    pos = pin * 2;
[21:43:38.476]                      // -> [pos <= 0x00000006]
[21:43:38.476]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:43:38.477]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:43:38.478]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:38.479]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:43:38.479]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:43:38.480]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:38.480]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:43:38.481]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:43:38.482]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:38.482]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:43:38.483]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:43:38.484]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:38.484]                  </block>
[21:43:38.484]                  <control if="pin <  8" while="" timeout="0" info="">
[21:43:38.484]                    // if-block "pin <  8"
[21:43:38.484]                      // =>  TRUE
[21:43:38.484]                    <block atomic="false" info="">
[21:43:38.485]                      pos = ((pin    ) & 7) * 4;
[21:43:38.485]                        // -> [pos <= 0x0000000C]
[21:43:38.485]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:43:38.486]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:43:38.487]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:38.487]                    </block>
[21:43:38.487]                    // end if-block "pin <  8"
[21:43:38.487]                  </control>
[21:43:38.487]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:43:38.487]                    // if-block "pin >= 8"
[21:43:38.487]                      // =>  FALSE
[21:43:38.487]                    // skip if-block "pin >= 8"
[21:43:38.487]                  </control>
[21:43:38.488]                </sequence>
[21:43:38.488]            </block>
[21:43:38.488]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:43:38.488]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:43:38.489]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:43:38.489]            </block>
[21:43:38.490]          </sequence>
[21:43:38.490]      </block>
[21:43:38.490]      // end if-block "traceSWO"
[21:43:38.490]    </control>
[21:43:38.490]    <control if="traceTPIU" while="" timeout="0" info="">
[21:43:38.491]      // if-block "traceTPIU"
[21:43:38.491]        // =>  FALSE
[21:43:38.491]      // skip if-block "traceTPIU"
[21:43:38.491]    </control>
[21:43:38.491]  </sequence>
[21:43:38.492]  
[21:48:42.800]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[21:48:42.800]  
[21:48:42.833]  <debugvars>
[21:48:42.834]    // Pre-defined
[21:48:42.834]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:48:42.835]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:48:42.835]    __dp=0x00000000
[21:48:42.835]    __ap=0x00000000
[21:48:42.836]    __traceout=0x00000001      (SWO Trace)
[21:48:42.837]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:48:42.837]    __FlashAddr=0x00000000
[21:48:42.837]    __FlashLen=0x00000000
[21:48:42.838]    __FlashArg=0x00000000
[21:48:42.838]    __FlashOp=0x00000000
[21:48:42.839]    __Result=0x00000000
[21:48:42.839]    
[21:48:42.839]    // User-defined
[21:48:42.840]    DbgMCU_CR=0x00000007
[21:48:42.840]    DbgMCU_APB1_Fz=0x00000000
[21:48:42.841]    DbgMCU_APB2_Fz=0x00000000
[21:48:42.841]    TraceClk_Pin=0x00040002
[21:48:42.841]    TraceD0_Pin=0x00040003
[21:48:42.842]    TraceD1_Pin=0x00040004
[21:48:42.842]    TraceD2_Pin=0x00040005
[21:48:42.842]    TraceD3_Pin=0x00040006
[21:48:42.843]  </debugvars>
[21:48:42.843]  
[21:48:42.844]  <sequence name="TraceStop" Pname="" disable="false" info="">
[21:48:42.844]    <block atomic="false" info="">
[21:48:42.845]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[21:48:42.845]        // -> [traceSWO <= 0x00000001]
[21:48:42.845]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[21:48:42.846]        // -> [traceTPIU <= 0x00000000]
[21:48:42.846]    </block>
[21:48:42.846]    <control if="traceSWO" while="" timeout="0" info="">
[21:48:42.847]      // if-block "traceSWO"
[21:48:42.847]        // =>  TRUE
[21:48:42.848]      <block atomic="false" info="">
[21:48:42.848]        Sequence("DisableTraceSWO");
[21:48:42.849]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[21:48:42.849]            <block atomic="false" info="">
[21:48:42.849]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:48:42.850]                // -> [dbgmcu_val <= 0x00000000]
[21:48:42.850]            </block>
[21:48:42.851]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[21:48:42.851]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[21:48:42.853]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:48:42.853]                // -> [dbgmcu_val <= 0x00000007]
[21:48:42.853]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[21:48:42.855]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:48:42.855]            </block>
[21:48:42.856]          </sequence>
[21:48:42.857]      </block>
[21:48:42.857]      // end if-block "traceSWO"
[21:48:42.857]    </control>
[21:48:42.857]    <control if="traceTPIU" while="" timeout="0" info="">
[21:48:42.858]      // if-block "traceTPIU"
[21:48:42.858]        // =>  FALSE
[21:48:42.858]      // skip if-block "traceTPIU"
[21:48:42.858]    </control>
[21:48:42.859]  </sequence>
[21:48:42.859]  
[21:49:03.258]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:49:03.258]  
[21:49:03.272]  <debugvars>
[21:49:03.272]    // Pre-defined
[21:49:03.273]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:49:03.273]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[21:49:03.274]    __dp=0x00000000
[21:49:03.274]    __ap=0x00000000
[21:49:03.274]    __traceout=0x00000001      (SWO Trace)
[21:49:03.275]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:49:03.275]    __FlashAddr=0x00000000
[21:49:03.276]    __FlashLen=0x00000000
[21:49:03.276]    __FlashArg=0x00000000
[21:49:03.277]    __FlashOp=0x00000000
[21:49:03.277]    __Result=0x00000000
[21:49:03.277]    
[21:49:03.277]    // User-defined
[21:49:03.278]    DbgMCU_CR=0x00000007
[21:49:03.278]    DbgMCU_APB1_Fz=0x00000000
[21:49:03.279]    DbgMCU_APB2_Fz=0x00000000
[21:49:03.279]    TraceClk_Pin=0x00040002
[21:49:03.279]    TraceD0_Pin=0x00040003
[21:49:03.280]    TraceD1_Pin=0x00040004
[21:49:03.280]    TraceD2_Pin=0x00040005
[21:49:03.280]    TraceD3_Pin=0x00040006
[21:49:03.281]  </debugvars>
[21:49:03.281]  
[21:49:03.281]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:49:03.282]    <block atomic="false" info="">
[21:49:03.282]      Sequence("CheckID");
[21:49:03.282]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:49:03.283]          <block atomic="false" info="">
[21:49:03.283]            __var pidr1 = 0;
[21:49:03.284]              // -> [pidr1 <= 0x00000000]
[21:49:03.284]            __var pidr2 = 0;
[21:49:03.285]              // -> [pidr2 <= 0x00000000]
[21:49:03.285]            __var jep106id = 0;
[21:49:03.285]              // -> [jep106id <= 0x00000000]
[21:49:03.285]            __var ROMTableBase = 0;
[21:49:03.286]              // -> [ROMTableBase <= 0x00000000]
[21:49:03.286]            __ap = 0;      // AHB-AP
[21:49:03.286]              // -> [__ap <= 0x00000000]
[21:49:03.287]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:49:03.288]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[21:49:03.288]              // -> [ROMTableBase <= 0xE00FF000]
[21:49:03.289]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:49:03.290]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:49:03.291]              // -> [pidr1 <= 0x00000004]
[21:49:03.291]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:49:03.293]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[21:49:03.293]              // -> [pidr2 <= 0x0000000A]
[21:49:03.294]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:49:03.294]              // -> [jep106id <= 0x00000020]
[21:49:03.294]          </block>
[21:49:03.295]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:49:03.295]            // if-block "jep106id != 0x20"
[21:49:03.295]              // =>  FALSE
[21:49:03.296]            // skip if-block "jep106id != 0x20"
[21:49:03.296]          </control>
[21:49:03.297]        </sequence>
[21:49:03.297]    </block>
[21:49:03.297]  </sequence>
[21:49:03.298]  
[21:49:03.298]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:49:03.298]  
[21:49:03.298]  <debugvars>
[21:49:03.299]    // Pre-defined
[21:49:03.299]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:49:03.300]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[21:49:03.300]    __dp=0x00000000
[21:49:03.300]    __ap=0x00000000
[21:49:03.300]    __traceout=0x00000001      (SWO Trace)
[21:49:03.301]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:49:03.301]    __FlashAddr=0x00000000
[21:49:03.302]    __FlashLen=0x00000000
[21:49:03.302]    __FlashArg=0x00000000
[21:49:03.303]    __FlashOp=0x00000000
[21:49:03.303]    __Result=0x00000000
[21:49:03.304]    
[21:49:03.304]    // User-defined
[21:49:03.304]    DbgMCU_CR=0x00000007
[21:49:03.305]    DbgMCU_APB1_Fz=0x00000000
[21:49:03.305]    DbgMCU_APB2_Fz=0x00000000
[21:49:03.305]    TraceClk_Pin=0x00040002
[21:49:03.306]    TraceD0_Pin=0x00040003
[21:49:03.306]    TraceD1_Pin=0x00040004
[21:49:03.306]    TraceD2_Pin=0x00040005
[21:49:03.307]    TraceD3_Pin=0x00040006
[21:49:03.307]  </debugvars>
[21:49:03.307]  
[21:49:03.308]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:49:03.308]    <block atomic="false" info="">
[21:49:03.308]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:49:03.310]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:03.311]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:49:03.312]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:03.313]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:49:03.314]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:03.315]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:49:03.316]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:03.317]    </block>
[21:49:03.317]  </sequence>
[21:49:03.318]  
[21:49:05.518]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:49:05.518]  
[21:49:05.565]  <debugvars>
[21:49:05.565]    // Pre-defined
[21:49:05.565]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:49:05.565]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:49:05.565]    __dp=0x00000000
[21:49:05.566]    __ap=0x00000000
[21:49:05.567]    __traceout=0x00000001      (SWO Trace)
[21:49:05.567]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:49:05.567]    __FlashAddr=0x00000000
[21:49:05.567]    __FlashLen=0x00000000
[21:49:05.567]    __FlashArg=0x00000000
[21:49:05.567]    __FlashOp=0x00000000
[21:49:05.567]    __Result=0x00000000
[21:49:05.568]    
[21:49:05.568]    // User-defined
[21:49:05.568]    DbgMCU_CR=0x00000007
[21:49:05.568]    DbgMCU_APB1_Fz=0x00000000
[21:49:05.568]    DbgMCU_APB2_Fz=0x00000000
[21:49:05.569]    TraceClk_Pin=0x00040002
[21:49:05.569]    TraceD0_Pin=0x00040003
[21:49:05.569]    TraceD1_Pin=0x00040004
[21:49:05.569]    TraceD2_Pin=0x00040005
[21:49:05.569]    TraceD3_Pin=0x00040006
[21:49:05.570]  </debugvars>
[21:49:05.571]  
[21:49:05.571]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:49:05.571]    <block atomic="false" info="">
[21:49:05.571]      Sequence("CheckID");
[21:49:05.571]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:49:05.571]          <block atomic="false" info="">
[21:49:05.571]            __var pidr1 = 0;
[21:49:05.571]              // -> [pidr1 <= 0x00000000]
[21:49:05.571]            __var pidr2 = 0;
[21:49:05.572]              // -> [pidr2 <= 0x00000000]
[21:49:05.572]            __var jep106id = 0;
[21:49:05.572]              // -> [jep106id <= 0x00000000]
[21:49:05.572]            __var ROMTableBase = 0;
[21:49:05.572]              // -> [ROMTableBase <= 0x00000000]
[21:49:05.572]            __ap = 0;      // AHB-AP
[21:49:05.572]              // -> [__ap <= 0x00000000]
[21:49:05.572]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:49:05.573]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.573]              // -> [ROMTableBase <= 0xE00FF000]
[21:49:05.573]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:49:05.574]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.574]              // -> [pidr1 <= 0x00000004]
[21:49:05.575]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:49:05.576]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.576]              // -> [pidr2 <= 0x0000000A]
[21:49:05.576]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:49:05.576]              // -> [jep106id <= 0x00000020]
[21:49:05.576]          </block>
[21:49:05.576]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:49:05.576]            // if-block "jep106id != 0x20"
[21:49:05.576]              // =>  FALSE
[21:49:05.576]            // skip if-block "jep106id != 0x20"
[21:49:05.577]          </control>
[21:49:05.577]        </sequence>
[21:49:05.577]    </block>
[21:49:05.577]  </sequence>
[21:49:05.577]  
[21:49:05.577]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:49:05.577]  
[21:49:05.578]  <debugvars>
[21:49:05.578]    // Pre-defined
[21:49:05.578]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:49:05.578]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:49:05.579]    __dp=0x00000000
[21:49:05.579]    __ap=0x00000000
[21:49:05.579]    __traceout=0x00000001      (SWO Trace)
[21:49:05.579]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:49:05.579]    __FlashAddr=0x00000000
[21:49:05.580]    __FlashLen=0x00000000
[21:49:05.580]    __FlashArg=0x00000000
[21:49:05.580]    __FlashOp=0x00000000
[21:49:05.580]    __Result=0x00000000
[21:49:05.580]    
[21:49:05.580]    // User-defined
[21:49:05.580]    DbgMCU_CR=0x00000007
[21:49:05.580]    DbgMCU_APB1_Fz=0x00000000
[21:49:05.581]    DbgMCU_APB2_Fz=0x00000000
[21:49:05.581]    TraceClk_Pin=0x00040002
[21:49:05.581]    TraceD0_Pin=0x00040003
[21:49:05.581]    TraceD1_Pin=0x00040004
[21:49:05.581]    TraceD2_Pin=0x00040005
[21:49:05.581]    TraceD3_Pin=0x00040006
[21:49:05.582]  </debugvars>
[21:49:05.582]  
[21:49:05.582]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:49:05.582]    <block atomic="false" info="">
[21:49:05.582]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:49:05.583]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.583]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:49:05.584]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.584]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:49:05.585]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.586]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:49:05.586]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.587]    </block>
[21:49:05.587]  </sequence>
[21:49:05.587]  
[21:49:05.612]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[21:49:05.612]  
[21:49:05.613]  <debugvars>
[21:49:05.613]    // Pre-defined
[21:49:05.613]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:49:05.613]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:49:05.613]    __dp=0x00000000
[21:49:05.613]    __ap=0x00000000
[21:49:05.613]    __traceout=0x00000001      (SWO Trace)
[21:49:05.613]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:49:05.614]    __FlashAddr=0x00000000
[21:49:05.614]    __FlashLen=0x00000000
[21:49:05.614]    __FlashArg=0x00000000
[21:49:05.614]    __FlashOp=0x00000000
[21:49:05.614]    __Result=0x00000000
[21:49:05.615]    
[21:49:05.615]    // User-defined
[21:49:05.615]    DbgMCU_CR=0x00000007
[21:49:05.616]    DbgMCU_APB1_Fz=0x00000000
[21:49:05.616]    DbgMCU_APB2_Fz=0x00000000
[21:49:05.616]    TraceClk_Pin=0x00040002
[21:49:05.616]    TraceD0_Pin=0x00040003
[21:49:05.616]    TraceD1_Pin=0x00040004
[21:49:05.616]    TraceD2_Pin=0x00040005
[21:49:05.616]    TraceD3_Pin=0x00040006
[21:49:05.616]  </debugvars>
[21:49:05.616]  
[21:49:05.616]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:49:05.617]    <block atomic="false" info="">
[21:49:05.617]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:49:05.617]        // -> [traceSWO <= 0x00000001]
[21:49:05.617]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:49:05.617]        // -> [traceTPIU <= 0x00000000]
[21:49:05.617]    </block>
[21:49:05.617]    <control if="traceSWO" while="" timeout="0" info="">
[21:49:05.618]      // if-block "traceSWO"
[21:49:05.618]        // =>  TRUE
[21:49:05.618]      <block atomic="false" info="">
[21:49:05.618]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:49:05.618]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:49:05.618]            <block atomic="false" info="">
[21:49:05.618]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:49:05.618]                // -> [dbgmcu_val <= 0x00000000]
[21:49:05.618]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:49:05.619]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:49:05.619]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:49:05.619]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.619]                // -> [dbgmcu_val <= 0x00000007]
[21:49:05.619]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:49:05.620]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:49:05.620]              Sequence("ConfigureTraceSWOPin");
[21:49:05.620]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:49:05.620]                  <block atomic="false" info="">
[21:49:05.620]                    __var pin     = 0;
[21:49:05.620]                      // -> [pin <= 0x00000000]
[21:49:05.620]                    __var port    = 0;
[21:49:05.620]                      // -> [port <= 0x00000000]
[21:49:05.620]                    __var portAdr = 0;
[21:49:05.621]                      // -> [portAdr <= 0x00000000]
[21:49:05.621]                    __var pos     = 0;
[21:49:05.621]                      // -> [pos <= 0x00000000]
[21:49:05.621]                    __var SWO_Pin = 0x00010003;          // PB3
[21:49:05.621]                      // -> [SWO_Pin <= 0x00010003]
[21:49:05.621]                  </block>
[21:49:05.621]                  <block atomic="false" info="configure SWO">
[21:49:05.621]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:49:05.621]                      // -> [pin <= 0x00000003]
[21:49:05.622]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:49:05.622]                      // -> [port <= 0x00000001]
[21:49:05.622]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:49:05.622]                      // -> [portAdr <= 0x40020400]
[21:49:05.622]                    pos = pin * 2;
[21:49:05.622]                      // -> [pos <= 0x00000006]
[21:49:05.622]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:49:05.623]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.623]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.624]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:49:05.624]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.625]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.625]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:49:05.626]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.626]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.626]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:49:05.627]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.628]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.628]                  </block>
[21:49:05.628]                  <control if="pin <  8" while="" timeout="0" info="">
[21:49:05.628]                    // if-block "pin <  8"
[21:49:05.628]                      // =>  TRUE
[21:49:05.629]                    <block atomic="false" info="">
[21:49:05.629]                      pos = ((pin    ) & 7) * 4;
[21:49:05.629]                        // -> [pos <= 0x0000000C]
[21:49:05.629]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:49:05.630]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.631]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.631]                    </block>
[21:49:05.631]                    // end if-block "pin <  8"
[21:49:05.631]                  </control>
[21:49:05.631]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:49:05.631]                    // if-block "pin >= 8"
[21:49:05.632]                      // =>  FALSE
[21:49:05.632]                    // skip if-block "pin >= 8"
[21:49:05.632]                  </control>
[21:49:05.632]                </sequence>
[21:49:05.632]            </block>
[21:49:05.632]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:49:05.632]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:49:05.633]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.633]            </block>
[21:49:05.633]          </sequence>
[21:49:05.633]      </block>
[21:49:05.633]      // end if-block "traceSWO"
[21:49:05.633]    </control>
[21:49:05.634]    <control if="traceTPIU" while="" timeout="0" info="">
[21:49:05.634]      // if-block "traceTPIU"
[21:49:05.634]        // =>  FALSE
[21:49:05.634]      // skip if-block "traceTPIU"
[21:49:05.634]    </control>
[21:49:05.634]  </sequence>
[21:49:05.634]  
[21:49:05.644]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:49:05.644]  
[21:49:05.644]  <debugvars>
[21:49:05.644]    // Pre-defined
[21:49:05.645]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:49:05.645]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:49:05.645]    __dp=0x00000000
[21:49:05.645]    __ap=0x00000000
[21:49:05.645]    __traceout=0x00000001      (SWO Trace)
[21:49:05.645]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:49:05.646]    __FlashAddr=0x00000000
[21:49:05.646]    __FlashLen=0x00000000
[21:49:05.646]    __FlashArg=0x00000000
[21:49:05.646]    __FlashOp=0x00000000
[21:49:05.646]    __Result=0x00000000
[21:49:05.646]    
[21:49:05.646]    // User-defined
[21:49:05.646]    DbgMCU_CR=0x00000007
[21:49:05.647]    DbgMCU_APB1_Fz=0x00000000
[21:49:05.647]    DbgMCU_APB2_Fz=0x00000000
[21:49:05.647]    TraceClk_Pin=0x00040002
[21:49:05.647]    TraceD0_Pin=0x00040003
[21:49:05.647]    TraceD1_Pin=0x00040004
[21:49:05.647]    TraceD2_Pin=0x00040005
[21:49:05.648]    TraceD3_Pin=0x00040006
[21:49:05.648]  </debugvars>
[21:49:05.648]  
[21:49:05.648]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:49:05.648]    <block atomic="false" info="">
[21:49:05.648]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:49:05.648]        // -> [traceSWO <= 0x00000001]
[21:49:05.648]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:49:05.648]        // -> [traceTPIU <= 0x00000000]
[21:49:05.649]    </block>
[21:49:05.649]    <control if="traceSWO" while="" timeout="0" info="">
[21:49:05.649]      // if-block "traceSWO"
[21:49:05.649]        // =>  TRUE
[21:49:05.649]      <block atomic="false" info="">
[21:49:05.649]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:49:05.649]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:49:05.649]            <block atomic="false" info="">
[21:49:05.649]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:49:05.650]                // -> [dbgmcu_val <= 0x00000000]
[21:49:05.650]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:49:05.650]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:49:05.650]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:49:05.651]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.651]                // -> [dbgmcu_val <= 0x00000007]
[21:49:05.651]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:49:05.652]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:49:05.652]              Sequence("ConfigureTraceSWOPin");
[21:49:05.652]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:49:05.652]                  <block atomic="false" info="">
[21:49:05.652]                    __var pin     = 0;
[21:49:05.652]                      // -> [pin <= 0x00000000]
[21:49:05.652]                    __var port    = 0;
[21:49:05.652]                      // -> [port <= 0x00000000]
[21:49:05.652]                    __var portAdr = 0;
[21:49:05.653]                      // -> [portAdr <= 0x00000000]
[21:49:05.653]                    __var pos     = 0;
[21:49:05.653]                      // -> [pos <= 0x00000000]
[21:49:05.653]                    __var SWO_Pin = 0x00010003;          // PB3
[21:49:05.653]                      // -> [SWO_Pin <= 0x00010003]
[21:49:05.653]                  </block>
[21:49:05.654]                  <block atomic="false" info="configure SWO">
[21:49:05.654]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:49:05.654]                      // -> [pin <= 0x00000003]
[21:49:05.654]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:49:05.654]                      // -> [port <= 0x00000001]
[21:49:05.654]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:49:05.655]                      // -> [portAdr <= 0x40020400]
[21:49:05.655]                    pos = pin * 2;
[21:49:05.655]                      // -> [pos <= 0x00000006]
[21:49:05.655]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:49:05.655]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.656]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.656]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:49:05.657]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.658]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.658]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:49:05.659]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.660]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.660]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:49:05.661]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.661]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.661]                  </block>
[21:49:05.662]                  <control if="pin <  8" while="" timeout="0" info="">
[21:49:05.662]                    // if-block "pin <  8"
[21:49:05.662]                      // =>  TRUE
[21:49:05.662]                    <block atomic="false" info="">
[21:49:05.662]                      pos = ((pin    ) & 7) * 4;
[21:49:05.662]                        // -> [pos <= 0x0000000C]
[21:49:05.662]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:49:05.663]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.663]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.663]                    </block>
[21:49:05.664]                    // end if-block "pin <  8"
[21:49:05.664]                  </control>
[21:49:05.664]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:49:05.664]                    // if-block "pin >= 8"
[21:49:05.664]                      // =>  FALSE
[21:49:05.664]                    // skip if-block "pin >= 8"
[21:49:05.664]                  </control>
[21:49:05.665]                </sequence>
[21:49:05.665]            </block>
[21:49:05.665]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:49:05.665]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:49:05.665]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:05.666]            </block>
[21:49:05.666]          </sequence>
[21:49:05.666]      </block>
[21:49:05.666]      // end if-block "traceSWO"
[21:49:05.666]    </control>
[21:49:05.666]    <control if="traceTPIU" while="" timeout="0" info="">
[21:49:05.666]      // if-block "traceTPIU"
[21:49:05.667]        // =>  FALSE
[21:49:05.667]      // skip if-block "traceTPIU"
[21:49:05.667]    </control>
[21:49:05.667]  </sequence>
[21:49:05.667]  
[21:49:06.452]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:49:06.452]  
[21:49:06.499]  <debugvars>
[21:49:06.499]    // Pre-defined
[21:49:06.501]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:49:06.501]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:49:06.501]    __dp=0x00000000
[21:49:06.501]    __ap=0x00000000
[21:49:06.501]    __traceout=0x00000001      (SWO Trace)
[21:49:06.502]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:49:06.502]    __FlashAddr=0x00000000
[21:49:06.502]    __FlashLen=0x00000000
[21:49:06.503]    __FlashArg=0x00000000
[21:49:06.503]    __FlashOp=0x00000000
[21:49:06.503]    __Result=0x00000000
[21:49:06.504]    
[21:49:06.504]    // User-defined
[21:49:06.504]    DbgMCU_CR=0x00000007
[21:49:06.505]    DbgMCU_APB1_Fz=0x00000000
[21:49:06.505]    DbgMCU_APB2_Fz=0x00000000
[21:49:06.505]    TraceClk_Pin=0x00040002
[21:49:06.506]    TraceD0_Pin=0x00040003
[21:49:06.506]    TraceD1_Pin=0x00040004
[21:49:06.508]    TraceD2_Pin=0x00040005
[21:49:06.508]    TraceD3_Pin=0x00040006
[21:49:06.508]  </debugvars>
[21:49:06.508]  
[21:49:06.508]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:49:06.509]    <block atomic="false" info="">
[21:49:06.510]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:49:06.510]        // -> [traceSWO <= 0x00000001]
[21:49:06.510]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:49:06.510]        // -> [traceTPIU <= 0x00000000]
[21:49:06.510]    </block>
[21:49:06.512]    <control if="traceSWO" while="" timeout="0" info="">
[21:49:06.512]      // if-block "traceSWO"
[21:49:06.512]        // =>  TRUE
[21:49:06.512]      <block atomic="false" info="">
[21:49:06.512]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:49:06.513]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:49:06.513]            <block atomic="false" info="">
[21:49:06.514]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:49:06.514]                // -> [dbgmcu_val <= 0x00000000]
[21:49:06.514]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:49:06.515]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:49:06.516]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:49:06.517]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:49:06.517]                // -> [dbgmcu_val <= 0x00000007]
[21:49:06.517]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:49:06.518]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:49:06.518]              Sequence("ConfigureTraceSWOPin");
[21:49:06.519]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:49:06.519]                  <block atomic="false" info="">
[21:49:06.520]                    __var pin     = 0;
[21:49:06.521]                      // -> [pin <= 0x00000000]
[21:49:06.521]                    __var port    = 0;
[21:49:06.521]                      // -> [port <= 0x00000000]
[21:49:06.523]                    __var portAdr = 0;
[21:49:06.523]                      // -> [portAdr <= 0x00000000]
[21:49:06.523]                    __var pos     = 0;
[21:49:06.523]                      // -> [pos <= 0x00000000]
[21:49:06.523]                    __var SWO_Pin = 0x00010003;          // PB3
[21:49:06.523]                      // -> [SWO_Pin <= 0x00010003]
[21:49:06.524]                  </block>
[21:49:06.525]                  <block atomic="false" info="configure SWO">
[21:49:06.525]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:49:06.526]                      // -> [pin <= 0x00000003]
[21:49:06.526]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:49:06.526]                      // -> [port <= 0x00000001]
[21:49:06.526]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:49:06.526]                      // -> [portAdr <= 0x40020400]
[21:49:06.527]                    pos = pin * 2;
[21:49:06.528]                      // -> [pos <= 0x00000006]
[21:49:06.528]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:49:06.529]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:49:06.530]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:06.531]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:49:06.532]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:49:06.534]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:06.534]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:49:06.535]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:49:06.537]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:06.538]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:49:06.539]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:49:06.541]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:06.541]                  </block>
[21:49:06.542]                  <control if="pin <  8" while="" timeout="0" info="">
[21:49:06.543]                    // if-block "pin <  8"
[21:49:06.543]                      // =>  TRUE
[21:49:06.543]                    <block atomic="false" info="">
[21:49:06.543]                      pos = ((pin    ) & 7) * 4;
[21:49:06.544]                        // -> [pos <= 0x0000000C]
[21:49:06.544]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:49:06.546]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:49:06.547]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:06.549]                    </block>
[21:49:06.549]                    // end if-block "pin <  8"
[21:49:06.549]                  </control>
[21:49:06.549]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:49:06.549]                    // if-block "pin >= 8"
[21:49:06.550]                      // =>  FALSE
[21:49:06.550]                    // skip if-block "pin >= 8"
[21:49:06.551]                  </control>
[21:49:06.551]                </sequence>
[21:49:06.552]            </block>
[21:49:06.552]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:49:06.552]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:49:06.554]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:49:06.555]            </block>
[21:49:06.555]          </sequence>
[21:49:06.555]      </block>
[21:49:06.556]      // end if-block "traceSWO"
[21:49:06.556]    </control>
[21:49:06.556]    <control if="traceTPIU" while="" timeout="0" info="">
[21:49:06.557]      // if-block "traceTPIU"
[21:49:06.557]        // =>  FALSE
[21:49:06.558]      // skip if-block "traceTPIU"
[21:49:06.558]    </control>
[21:49:06.558]  </sequence>
[21:49:06.558]  
[21:50:44.091]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:50:44.091]  
[21:50:44.138]  <debugvars>
[21:50:44.138]    // Pre-defined
[21:50:44.138]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:50:44.139]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:50:44.139]    __dp=0x00000000
[21:50:44.139]    __ap=0x00000000
[21:50:44.139]    __traceout=0x00000001      (SWO Trace)
[21:50:44.140]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:50:44.141]    __FlashAddr=0x00000000
[21:50:44.141]    __FlashLen=0x00000000
[21:50:44.141]    __FlashArg=0x00000000
[21:50:44.141]    __FlashOp=0x00000000
[21:50:44.141]    __Result=0x00000000
[21:50:44.141]    
[21:50:44.141]    // User-defined
[21:50:44.142]    DbgMCU_CR=0x00000007
[21:50:44.142]    DbgMCU_APB1_Fz=0x00000000
[21:50:44.142]    DbgMCU_APB2_Fz=0x00000000
[21:50:44.142]    TraceClk_Pin=0x00040002
[21:50:44.142]    TraceD0_Pin=0x00040003
[21:50:44.143]    TraceD1_Pin=0x00040004
[21:50:44.143]    TraceD2_Pin=0x00040005
[21:50:44.144]    TraceD3_Pin=0x00040006
[21:50:44.144]  </debugvars>
[21:50:44.144]  
[21:50:44.144]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:50:44.145]    <block atomic="false" info="">
[21:50:44.145]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:50:44.145]        // -> [traceSWO <= 0x00000001]
[21:50:44.146]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:50:44.146]        // -> [traceTPIU <= 0x00000000]
[21:50:44.146]    </block>
[21:50:44.147]    <control if="traceSWO" while="" timeout="0" info="">
[21:50:44.147]      // if-block "traceSWO"
[21:50:44.147]        // =>  TRUE
[21:50:44.148]      <block atomic="false" info="">
[21:50:44.148]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:50:44.149]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:50:44.149]            <block atomic="false" info="">
[21:50:44.150]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:50:44.150]                // -> [dbgmcu_val <= 0x00000000]
[21:50:44.150]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:50:44.151]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:50:44.151]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:50:44.153]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:50:44.153]                // -> [dbgmcu_val <= 0x00000007]
[21:50:44.154]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:50:44.154]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:50:44.154]              Sequence("ConfigureTraceSWOPin");
[21:50:44.155]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:50:44.156]                  <block atomic="false" info="">
[21:50:44.156]                    __var pin     = 0;
[21:50:44.157]                      // -> [pin <= 0x00000000]
[21:50:44.157]                    __var port    = 0;
[21:50:44.158]                      // -> [port <= 0x00000000]
[21:50:44.158]                    __var portAdr = 0;
[21:50:44.159]                      // -> [portAdr <= 0x00000000]
[21:50:44.159]                    __var pos     = 0;
[21:50:44.160]                      // -> [pos <= 0x00000000]
[21:50:44.160]                    __var SWO_Pin = 0x00010003;          // PB3
[21:50:44.161]                      // -> [SWO_Pin <= 0x00010003]
[21:50:44.161]                  </block>
[21:50:44.162]                  <block atomic="false" info="configure SWO">
[21:50:44.162]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:50:44.163]                      // -> [pin <= 0x00000003]
[21:50:44.163]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:50:44.164]                      // -> [port <= 0x00000001]
[21:50:44.164]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:50:44.164]                      // -> [portAdr <= 0x40020400]
[21:50:44.165]                    pos = pin * 2;
[21:50:44.165]                      // -> [pos <= 0x00000006]
[21:50:44.166]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:50:44.167]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:50:44.168]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:50:44.169]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:50:44.170]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:50:44.172]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:50:44.172]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:50:44.174]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:50:44.175]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:50:44.176]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:50:44.177]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:50:44.179]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:50:44.179]                  </block>
[21:50:44.179]                  <control if="pin <  8" while="" timeout="0" info="">
[21:50:44.180]                    // if-block "pin <  8"
[21:50:44.180]                      // =>  TRUE
[21:50:44.181]                    <block atomic="false" info="">
[21:50:44.181]                      pos = ((pin    ) & 7) * 4;
[21:50:44.181]                        // -> [pos <= 0x0000000C]
[21:50:44.182]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:50:44.183]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:50:44.186]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:50:44.186]                    </block>
[21:50:44.186]                    // end if-block "pin <  8"
[21:50:44.186]                  </control>
[21:50:44.187]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:50:44.187]                    // if-block "pin >= 8"
[21:50:44.187]                      // =>  FALSE
[21:50:44.187]                    // skip if-block "pin >= 8"
[21:50:44.188]                  </control>
[21:50:44.188]                </sequence>
[21:50:44.188]            </block>
[21:50:44.188]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:50:44.189]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:50:44.190]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:50:44.190]            </block>
[21:50:44.191]          </sequence>
[21:50:44.192]      </block>
[21:50:44.192]      // end if-block "traceSWO"
[21:50:44.192]    </control>
[21:50:44.193]    <control if="traceTPIU" while="" timeout="0" info="">
[21:50:44.193]      // if-block "traceTPIU"
[21:50:44.193]        // =>  FALSE
[21:50:44.194]      // skip if-block "traceTPIU"
[21:50:44.194]    </control>
[21:50:44.194]  </sequence>
[21:50:44.195]  
[21:51:02.009]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:51:02.009]  
[21:51:02.057]  <debugvars>
[21:51:02.057]    // Pre-defined
[21:51:02.057]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:51:02.057]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:51:02.057]    __dp=0x00000000
[21:51:02.058]    __ap=0x00000000
[21:51:02.058]    __traceout=0x00000001      (SWO Trace)
[21:51:02.058]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:51:02.058]    __FlashAddr=0x00000000
[21:51:02.059]    __FlashLen=0x00000000
[21:51:02.059]    __FlashArg=0x00000000
[21:51:02.060]    __FlashOp=0x00000000
[21:51:02.060]    __Result=0x00000000
[21:51:02.060]    
[21:51:02.060]    // User-defined
[21:51:02.061]    DbgMCU_CR=0x00000007
[21:51:02.062]    DbgMCU_APB1_Fz=0x00000000
[21:51:02.062]    DbgMCU_APB2_Fz=0x00000000
[21:51:02.062]    TraceClk_Pin=0x00040002
[21:51:02.062]    TraceD0_Pin=0x00040003
[21:51:02.063]    TraceD1_Pin=0x00040004
[21:51:02.064]    TraceD2_Pin=0x00040005
[21:51:02.064]    TraceD3_Pin=0x00040006
[21:51:02.064]  </debugvars>
[21:51:02.064]  
[21:51:02.064]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:51:02.065]    <block atomic="false" info="">
[21:51:02.065]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:51:02.066]        // -> [traceSWO <= 0x00000001]
[21:51:02.067]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:51:02.067]        // -> [traceTPIU <= 0x00000000]
[21:51:02.067]    </block>
[21:51:02.067]    <control if="traceSWO" while="" timeout="0" info="">
[21:51:02.067]      // if-block "traceSWO"
[21:51:02.068]        // =>  TRUE
[21:51:02.068]      <block atomic="false" info="">
[21:51:02.068]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:51:02.069]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:51:02.069]            <block atomic="false" info="">
[21:51:02.069]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:51:02.070]                // -> [dbgmcu_val <= 0x00000000]
[21:51:02.070]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:51:02.070]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:51:02.071]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:51:02.072]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:51:02.072]                // -> [dbgmcu_val <= 0x00000007]
[21:51:02.074]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:51:02.074]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:51:02.074]              Sequence("ConfigureTraceSWOPin");
[21:51:02.074]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:51:02.074]                  <block atomic="false" info="">
[21:51:02.075]                    __var pin     = 0;
[21:51:02.075]                      // -> [pin <= 0x00000000]
[21:51:02.075]                    __var port    = 0;
[21:51:02.076]                      // -> [port <= 0x00000000]
[21:51:02.076]                    __var portAdr = 0;
[21:51:02.076]                      // -> [portAdr <= 0x00000000]
[21:51:02.077]                    __var pos     = 0;
[21:51:02.077]                      // -> [pos <= 0x00000000]
[21:51:02.078]                    __var SWO_Pin = 0x00010003;          // PB3
[21:51:02.078]                      // -> [SWO_Pin <= 0x00010003]
[21:51:02.078]                  </block>
[21:51:02.079]                  <block atomic="false" info="configure SWO">
[21:51:02.080]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:51:02.080]                      // -> [pin <= 0x00000003]
[21:51:02.080]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:51:02.080]                      // -> [port <= 0x00000001]
[21:51:02.081]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:51:02.081]                      // -> [portAdr <= 0x40020400]
[21:51:02.081]                    pos = pin * 2;
[21:51:02.082]                      // -> [pos <= 0x00000006]
[21:51:02.082]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:51:02.084]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:51:02.085]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:51:02.085]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:51:02.087]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:51:02.089]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:51:02.089]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:51:02.090]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:51:02.091]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:51:02.092]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:51:02.093]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:51:02.095]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:51:02.095]                  </block>
[21:51:02.096]                  <control if="pin <  8" while="" timeout="0" info="">
[21:51:02.096]                    // if-block "pin <  8"
[21:51:02.096]                      // =>  TRUE
[21:51:02.097]                    <block atomic="false" info="">
[21:51:02.098]                      pos = ((pin    ) & 7) * 4;
[21:51:02.098]                        // -> [pos <= 0x0000000C]
[21:51:02.098]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:51:02.099]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:51:02.101]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:51:02.102]                    </block>
[21:51:02.102]                    // end if-block "pin <  8"
[21:51:02.102]                  </control>
[21:51:02.103]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:51:02.103]                    // if-block "pin >= 8"
[21:51:02.104]                      // =>  FALSE
[21:51:02.104]                    // skip if-block "pin >= 8"
[21:51:02.104]                  </control>
[21:51:02.104]                </sequence>
[21:51:02.105]            </block>
[21:51:02.105]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:51:02.105]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:51:02.106]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:51:02.107]            </block>
[21:51:02.107]          </sequence>
[21:51:02.108]      </block>
[21:51:02.109]      // end if-block "traceSWO"
[21:51:02.109]    </control>
[21:51:02.109]    <control if="traceTPIU" while="" timeout="0" info="">
[21:51:02.109]      // if-block "traceTPIU"
[21:51:02.110]        // =>  FALSE
[21:51:02.110]      // skip if-block "traceTPIU"
[21:51:02.110]    </control>
[21:51:02.111]  </sequence>
[21:51:02.111]  
[21:51:21.140]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:51:21.140]  
[21:51:21.186]  <debugvars>
[21:51:21.186]    // Pre-defined
[21:51:21.187]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:51:21.187]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:51:21.188]    __dp=0x00000000
[21:51:21.188]    __ap=0x00000000
[21:51:21.189]    __traceout=0x00000001      (SWO Trace)
[21:51:21.189]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:51:21.189]    __FlashAddr=0x00000000
[21:51:21.190]    __FlashLen=0x00000000
[21:51:21.190]    __FlashArg=0x00000000
[21:51:21.191]    __FlashOp=0x00000000
[21:51:21.191]    __Result=0x00000000
[21:51:21.191]    
[21:51:21.191]    // User-defined
[21:51:21.192]    DbgMCU_CR=0x00000007
[21:51:21.192]    DbgMCU_APB1_Fz=0x00000000
[21:51:21.193]    DbgMCU_APB2_Fz=0x00000000
[21:51:21.193]    TraceClk_Pin=0x00040002
[21:51:21.193]    TraceD0_Pin=0x00040003
[21:51:21.194]    TraceD1_Pin=0x00040004
[21:51:21.194]    TraceD2_Pin=0x00040005
[21:51:21.195]    TraceD3_Pin=0x00040006
[21:51:21.196]  </debugvars>
[21:51:21.196]  
[21:51:21.196]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:51:21.197]    <block atomic="false" info="">
[21:51:21.197]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:51:21.197]        // -> [traceSWO <= 0x00000001]
[21:51:21.198]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:51:21.198]        // -> [traceTPIU <= 0x00000000]
[21:51:21.199]    </block>
[21:51:21.199]    <control if="traceSWO" while="" timeout="0" info="">
[21:51:21.200]      // if-block "traceSWO"
[21:51:21.200]        // =>  TRUE
[21:51:21.200]      <block atomic="false" info="">
[21:51:21.201]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:51:21.201]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:51:21.201]            <block atomic="false" info="">
[21:51:21.202]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:51:21.202]                // -> [dbgmcu_val <= 0x00000000]
[21:51:21.203]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:51:21.203]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:51:21.203]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:51:21.205]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:51:21.205]                // -> [dbgmcu_val <= 0x00000007]
[21:51:21.206]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:51:21.206]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:51:21.206]              Sequence("ConfigureTraceSWOPin");
[21:51:21.207]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:51:21.207]                  <block atomic="false" info="">
[21:51:21.208]                    __var pin     = 0;
[21:51:21.208]                      // -> [pin <= 0x00000000]
[21:51:21.208]                    __var port    = 0;
[21:51:21.209]                      // -> [port <= 0x00000000]
[21:51:21.209]                    __var portAdr = 0;
[21:51:21.209]                      // -> [portAdr <= 0x00000000]
[21:51:21.210]                    __var pos     = 0;
[21:51:21.210]                      // -> [pos <= 0x00000000]
[21:51:21.211]                    __var SWO_Pin = 0x00010003;          // PB3
[21:51:21.211]                      // -> [SWO_Pin <= 0x00010003]
[21:51:21.212]                  </block>
[21:51:21.212]                  <block atomic="false" info="configure SWO">
[21:51:21.212]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:51:21.213]                      // -> [pin <= 0x00000003]
[21:51:21.213]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:51:21.214]                      // -> [port <= 0x00000001]
[21:51:21.214]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:51:21.214]                      // -> [portAdr <= 0x40020400]
[21:51:21.215]                    pos = pin * 2;
[21:51:21.215]                      // -> [pos <= 0x00000006]
[21:51:21.216]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:51:21.217]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:51:21.218]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:51:21.219]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:51:21.220]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:51:21.222]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:51:21.222]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:51:21.223]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:51:21.225]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:51:21.225]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:51:21.227]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:51:21.228]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:51:21.229]                  </block>
[21:51:21.229]                  <control if="pin <  8" while="" timeout="0" info="">
[21:51:21.230]                    // if-block "pin <  8"
[21:51:21.230]                      // =>  TRUE
[21:51:21.231]                    <block atomic="false" info="">
[21:51:21.231]                      pos = ((pin    ) & 7) * 4;
[21:51:21.231]                        // -> [pos <= 0x0000000C]
[21:51:21.232]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:51:21.233]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:51:21.234]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:51:21.235]                    </block>
[21:51:21.235]                    // end if-block "pin <  8"
[21:51:21.236]                  </control>
[21:51:21.236]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:51:21.236]                    // if-block "pin >= 8"
[21:51:21.236]                      // =>  FALSE
[21:51:21.237]                    // skip if-block "pin >= 8"
[21:51:21.237]                  </control>
[21:51:21.238]                </sequence>
[21:51:21.238]            </block>
[21:51:21.238]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:51:21.239]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:51:21.240]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:51:21.240]            </block>
[21:51:21.241]          </sequence>
[21:51:21.241]      </block>
[21:51:21.242]      // end if-block "traceSWO"
[21:51:21.242]    </control>
[21:51:21.242]    <control if="traceTPIU" while="" timeout="0" info="">
[21:51:21.243]      // if-block "traceTPIU"
[21:51:21.243]        // =>  FALSE
[21:51:21.243]      // skip if-block "traceTPIU"
[21:51:21.244]    </control>
[21:51:21.244]  </sequence>
[21:51:21.244]  
[21:52:19.778]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:52:19.778]  
[21:52:19.825]  <debugvars>
[21:52:19.825]    // Pre-defined
[21:52:19.826]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:52:19.826]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:52:19.827]    __dp=0x00000000
[21:52:19.827]    __ap=0x00000000
[21:52:19.828]    __traceout=0x00000001      (SWO Trace)
[21:52:19.828]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:52:19.828]    __FlashAddr=0x00000000
[21:52:19.829]    __FlashLen=0x00000000
[21:52:19.829]    __FlashArg=0x00000000
[21:52:19.829]    __FlashOp=0x00000000
[21:52:19.830]    __Result=0x00000000
[21:52:19.830]    
[21:52:19.830]    // User-defined
[21:52:19.830]    DbgMCU_CR=0x00000007
[21:52:19.831]    DbgMCU_APB1_Fz=0x00000000
[21:52:19.831]    DbgMCU_APB2_Fz=0x00000000
[21:52:19.831]    TraceClk_Pin=0x00040002
[21:52:19.832]    TraceD0_Pin=0x00040003
[21:52:19.832]    TraceD1_Pin=0x00040004
[21:52:19.833]    TraceD2_Pin=0x00040005
[21:52:19.833]    TraceD3_Pin=0x00040006
[21:52:19.833]  </debugvars>
[21:52:19.834]  
[21:52:19.834]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:52:19.834]    <block atomic="false" info="">
[21:52:19.835]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:52:19.835]        // -> [traceSWO <= 0x00000001]
[21:52:19.836]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:52:19.837]        // -> [traceTPIU <= 0x00000000]
[21:52:19.837]    </block>
[21:52:19.837]    <control if="traceSWO" while="" timeout="0" info="">
[21:52:19.838]      // if-block "traceSWO"
[21:52:19.838]        // =>  TRUE
[21:52:19.839]      <block atomic="false" info="">
[21:52:19.839]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:52:19.840]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:52:19.840]            <block atomic="false" info="">
[21:52:19.841]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:52:19.841]                // -> [dbgmcu_val <= 0x00000000]
[21:52:19.841]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:52:19.842]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:52:19.842]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:52:19.843]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:52:19.844]                // -> [dbgmcu_val <= 0x00000007]
[21:52:19.844]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:52:19.845]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:52:19.845]              Sequence("ConfigureTraceSWOPin");
[21:52:19.846]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:52:19.846]                  <block atomic="false" info="">
[21:52:19.847]                    __var pin     = 0;
[21:52:19.847]                      // -> [pin <= 0x00000000]
[21:52:19.847]                    __var port    = 0;
[21:52:19.848]                      // -> [port <= 0x00000000]
[21:52:19.849]                    __var portAdr = 0;
[21:52:19.849]                      // -> [portAdr <= 0x00000000]
[21:52:19.850]                    __var pos     = 0;
[21:52:19.850]                      // -> [pos <= 0x00000000]
[21:52:19.850]                    __var SWO_Pin = 0x00010003;          // PB3
[21:52:19.851]                      // -> [SWO_Pin <= 0x00010003]
[21:52:19.851]                  </block>
[21:52:19.852]                  <block atomic="false" info="configure SWO">
[21:52:19.852]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:52:19.852]                      // -> [pin <= 0x00000003]
[21:52:19.853]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:52:19.853]                      // -> [port <= 0x00000001]
[21:52:19.854]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:52:19.854]                      // -> [portAdr <= 0x40020400]
[21:52:19.854]                    pos = pin * 2;
[21:52:19.855]                      // -> [pos <= 0x00000006]
[21:52:19.855]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:52:19.857]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:52:19.859]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:52:19.859]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:52:19.861]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:52:19.862]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:52:19.863]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:52:19.864]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:52:19.866]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:52:19.866]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:52:19.867]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:52:19.869]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:52:19.869]                  </block>
[21:52:19.870]                  <control if="pin <  8" while="" timeout="0" info="">
[21:52:19.870]                    // if-block "pin <  8"
[21:52:19.871]                      // =>  TRUE
[21:52:19.871]                    <block atomic="false" info="">
[21:52:19.872]                      pos = ((pin    ) & 7) * 4;
[21:52:19.872]                        // -> [pos <= 0x0000000C]
[21:52:19.873]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:52:19.874]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:52:19.876]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:52:19.876]                    </block>
[21:52:19.877]                    // end if-block "pin <  8"
[21:52:19.877]                  </control>
[21:52:19.878]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:52:19.878]                    // if-block "pin >= 8"
[21:52:19.878]                      // =>  FALSE
[21:52:19.879]                    // skip if-block "pin >= 8"
[21:52:19.879]                  </control>
[21:52:19.879]                </sequence>
[21:52:19.880]            </block>
[21:52:19.880]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:52:19.881]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:52:19.882]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:52:19.882]            </block>
[21:52:19.883]          </sequence>
[21:52:19.883]      </block>
[21:52:19.884]      // end if-block "traceSWO"
[21:52:19.884]    </control>
[21:52:19.885]    <control if="traceTPIU" while="" timeout="0" info="">
[21:52:19.885]      // if-block "traceTPIU"
[21:52:19.885]        // =>  FALSE
[21:52:19.886]      // skip if-block "traceTPIU"
[21:52:19.886]    </control>
[21:52:19.886]  </sequence>
[21:52:19.887]  
[21:53:58.959]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[21:53:58.959]  
[21:53:59.005]  <debugvars>
[21:53:59.005]    // Pre-defined
[21:53:59.006]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:53:59.006]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:53:59.007]    __dp=0x00000000
[21:53:59.008]    __ap=0x00000000
[21:53:59.008]    __traceout=0x00000001      (SWO Trace)
[21:53:59.008]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:53:59.008]    __FlashAddr=0x00000000
[21:53:59.008]    __FlashLen=0x00000000
[21:53:59.009]    __FlashArg=0x00000000
[21:53:59.009]    __FlashOp=0x00000000
[21:53:59.010]    __Result=0x00000000
[21:53:59.010]    
[21:53:59.010]    // User-defined
[21:53:59.010]    DbgMCU_CR=0x00000007
[21:53:59.011]    DbgMCU_APB1_Fz=0x00000000
[21:53:59.011]    DbgMCU_APB2_Fz=0x00000000
[21:53:59.011]    TraceClk_Pin=0x00040002
[21:53:59.012]    TraceD0_Pin=0x00040003
[21:53:59.012]    TraceD1_Pin=0x00040004
[21:53:59.012]    TraceD2_Pin=0x00040005
[21:53:59.013]    TraceD3_Pin=0x00040006
[21:53:59.013]  </debugvars>
[21:53:59.014]  
[21:53:59.014]  <sequence name="TraceStop" Pname="" disable="false" info="">
[21:53:59.015]    <block atomic="false" info="">
[21:53:59.015]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[21:53:59.015]        // -> [traceSWO <= 0x00000001]
[21:53:59.016]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[21:53:59.016]        // -> [traceTPIU <= 0x00000000]
[21:53:59.016]    </block>
[21:53:59.017]    <control if="traceSWO" while="" timeout="0" info="">
[21:53:59.017]      // if-block "traceSWO"
[21:53:59.017]        // =>  TRUE
[21:53:59.018]      <block atomic="false" info="">
[21:53:59.018]        Sequence("DisableTraceSWO");
[21:53:59.018]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[21:53:59.019]            <block atomic="false" info="">
[21:53:59.019]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:53:59.019]                // -> [dbgmcu_val <= 0x00000000]
[21:53:59.020]            </block>
[21:53:59.020]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[21:53:59.021]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[21:53:59.022]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:53:59.023]                // -> [dbgmcu_val <= 0x00000007]
[21:53:59.023]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[21:53:59.025]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:53:59.025]            </block>
[21:53:59.025]          </sequence>
[21:53:59.026]      </block>
[21:53:59.026]      // end if-block "traceSWO"
[21:53:59.027]    </control>
[21:53:59.027]    <control if="traceTPIU" while="" timeout="0" info="">
[21:53:59.027]      // if-block "traceTPIU"
[21:53:59.028]        // =>  FALSE
[21:53:59.028]      // skip if-block "traceTPIU"
[21:53:59.029]    </control>
[21:53:59.029]  </sequence>
[21:53:59.029]  
[21:54:10.934]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:54:10.934]  
[21:54:10.981]  <debugvars>
[21:54:10.981]    // Pre-defined
[21:54:10.982]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:54:10.982]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[21:54:10.983]    __dp=0x00000000
[21:54:10.983]    __ap=0x00000000
[21:54:10.983]    __traceout=0x00000001      (SWO Trace)
[21:54:10.984]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:54:10.984]    __FlashAddr=0x00000000
[21:54:10.985]    __FlashLen=0x00000000
[21:54:10.985]    __FlashArg=0x00000000
[21:54:10.985]    __FlashOp=0x00000000
[21:54:10.985]    __Result=0x00000000
[21:54:10.986]    
[21:54:10.986]    // User-defined
[21:54:10.986]    DbgMCU_CR=0x00000007
[21:54:10.987]    DbgMCU_APB1_Fz=0x00000000
[21:54:10.987]    DbgMCU_APB2_Fz=0x00000000
[21:54:10.988]    TraceClk_Pin=0x00040002
[21:54:10.988]    TraceD0_Pin=0x00040003
[21:54:10.988]    TraceD1_Pin=0x00040004
[21:54:10.989]    TraceD2_Pin=0x00040005
[21:54:10.989]    TraceD3_Pin=0x00040006
[21:54:10.989]  </debugvars>
[21:54:10.990]  
[21:54:10.990]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:54:10.991]    <block atomic="false" info="">
[21:54:10.991]      Sequence("CheckID");
[21:54:10.992]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:54:10.993]          <block atomic="false" info="">
[21:54:10.993]            __var pidr1 = 0;
[21:54:10.993]              // -> [pidr1 <= 0x00000000]
[21:54:10.994]            __var pidr2 = 0;
[21:54:10.994]              // -> [pidr2 <= 0x00000000]
[21:54:10.994]            __var jep106id = 0;
[21:54:10.995]              // -> [jep106id <= 0x00000000]
[21:54:10.996]            __var ROMTableBase = 0;
[21:54:10.996]              // -> [ROMTableBase <= 0x00000000]
[21:54:10.996]            __ap = 0;      // AHB-AP
[21:54:10.996]              // -> [__ap <= 0x00000000]
[21:54:10.997]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:54:10.998]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[21:54:10.998]              // -> [ROMTableBase <= 0xE00FF000]
[21:54:10.999]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:54:11.001]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:54:11.001]              // -> [pidr1 <= 0x00000004]
[21:54:11.001]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:54:11.003]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[21:54:11.003]              // -> [pidr2 <= 0x0000000A]
[21:54:11.004]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:54:11.004]              // -> [jep106id <= 0x00000020]
[21:54:11.005]          </block>
[21:54:11.005]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:54:11.006]            // if-block "jep106id != 0x20"
[21:54:11.006]              // =>  FALSE
[21:54:11.006]            // skip if-block "jep106id != 0x20"
[21:54:11.007]          </control>
[21:54:11.007]        </sequence>
[21:54:11.008]    </block>
[21:54:11.008]  </sequence>
[21:54:11.009]  
[21:54:11.009]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:54:11.009]  
[21:54:11.010]  <debugvars>
[21:54:11.010]    // Pre-defined
[21:54:11.010]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:54:11.011]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[21:54:11.011]    __dp=0x00000000
[21:54:11.011]    __ap=0x00000000
[21:54:11.012]    __traceout=0x00000001      (SWO Trace)
[21:54:11.012]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:54:11.013]    __FlashAddr=0x00000000
[21:54:11.013]    __FlashLen=0x00000000
[21:54:11.013]    __FlashArg=0x00000000
[21:54:11.014]    __FlashOp=0x00000000
[21:54:11.014]    __Result=0x00000000
[21:54:11.015]    
[21:54:11.015]    // User-defined
[21:54:11.015]    DbgMCU_CR=0x00000007
[21:54:11.016]    DbgMCU_APB1_Fz=0x00000000
[21:54:11.016]    DbgMCU_APB2_Fz=0x00000000
[21:54:11.016]    TraceClk_Pin=0x00040002
[21:54:11.017]    TraceD0_Pin=0x00040003
[21:54:11.017]    TraceD1_Pin=0x00040004
[21:54:11.018]    TraceD2_Pin=0x00040005
[21:54:11.018]    TraceD3_Pin=0x00040006
[21:54:11.018]  </debugvars>
[21:54:11.019]  
[21:54:11.019]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:54:11.019]    <block atomic="false" info="">
[21:54:11.020]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:54:11.022]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:11.022]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:54:11.024]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:11.025]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:54:11.026]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:11.027]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:54:11.029]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:11.029]    </block>
[21:54:11.029]  </sequence>
[21:54:11.030]  
[21:54:13.002]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:54:13.002]  
[21:54:13.049]  <debugvars>
[21:54:13.049]    // Pre-defined
[21:54:13.050]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:54:13.050]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:54:13.050]    __dp=0x00000000
[21:54:13.051]    __ap=0x00000000
[21:54:13.051]    __traceout=0x00000001      (SWO Trace)
[21:54:13.051]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:54:13.051]    __FlashAddr=0x00000000
[21:54:13.052]    __FlashLen=0x00000000
[21:54:13.052]    __FlashArg=0x00000000
[21:54:13.052]    __FlashOp=0x00000000
[21:54:13.053]    __Result=0x00000000
[21:54:13.053]    
[21:54:13.053]    // User-defined
[21:54:13.054]    DbgMCU_CR=0x00000007
[21:54:13.054]    DbgMCU_APB1_Fz=0x00000000
[21:54:13.055]    DbgMCU_APB2_Fz=0x00000000
[21:54:13.055]    TraceClk_Pin=0x00040002
[21:54:13.055]    TraceD0_Pin=0x00040003
[21:54:13.056]    TraceD1_Pin=0x00040004
[21:54:13.056]    TraceD2_Pin=0x00040005
[21:54:13.056]    TraceD3_Pin=0x00040006
[21:54:13.057]  </debugvars>
[21:54:13.057]  
[21:54:13.058]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:54:13.058]    <block atomic="false" info="">
[21:54:13.058]      Sequence("CheckID");
[21:54:13.059]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:54:13.059]          <block atomic="false" info="">
[21:54:13.059]            __var pidr1 = 0;
[21:54:13.060]              // -> [pidr1 <= 0x00000000]
[21:54:13.060]            __var pidr2 = 0;
[21:54:13.060]              // -> [pidr2 <= 0x00000000]
[21:54:13.061]            __var jep106id = 0;
[21:54:13.061]              // -> [jep106id <= 0x00000000]
[21:54:13.062]            __var ROMTableBase = 0;
[21:54:13.062]              // -> [ROMTableBase <= 0x00000000]
[21:54:13.063]            __ap = 0;      // AHB-AP
[21:54:13.063]              // -> [__ap <= 0x00000000]
[21:54:13.063]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:54:13.064]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.065]              // -> [ROMTableBase <= 0xE00FF000]
[21:54:13.065]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:54:13.067]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.067]              // -> [pidr1 <= 0x00000004]
[21:54:13.067]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:54:13.069]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.069]              // -> [pidr2 <= 0x0000000A]
[21:54:13.070]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:54:13.070]              // -> [jep106id <= 0x00000020]
[21:54:13.071]          </block>
[21:54:13.071]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:54:13.072]            // if-block "jep106id != 0x20"
[21:54:13.072]              // =>  FALSE
[21:54:13.072]            // skip if-block "jep106id != 0x20"
[21:54:13.073]          </control>
[21:54:13.073]        </sequence>
[21:54:13.074]    </block>
[21:54:13.074]  </sequence>
[21:54:13.075]  
[21:54:13.075]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:54:13.075]  
[21:54:13.076]  <debugvars>
[21:54:13.076]    // Pre-defined
[21:54:13.076]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:54:13.077]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:54:13.077]    __dp=0x00000000
[21:54:13.078]    __ap=0x00000000
[21:54:13.078]    __traceout=0x00000001      (SWO Trace)
[21:54:13.078]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:54:13.079]    __FlashAddr=0x00000000
[21:54:13.079]    __FlashLen=0x00000000
[21:54:13.079]    __FlashArg=0x00000000
[21:54:13.080]    __FlashOp=0x00000000
[21:54:13.080]    __Result=0x00000000
[21:54:13.081]    
[21:54:13.081]    // User-defined
[21:54:13.081]    DbgMCU_CR=0x00000007
[21:54:13.081]    DbgMCU_APB1_Fz=0x00000000
[21:54:13.082]    DbgMCU_APB2_Fz=0x00000000
[21:54:13.082]    TraceClk_Pin=0x00040002
[21:54:13.082]    TraceD0_Pin=0x00040003
[21:54:13.083]    TraceD1_Pin=0x00040004
[21:54:13.083]    TraceD2_Pin=0x00040005
[21:54:13.083]    TraceD3_Pin=0x00040006
[21:54:13.084]  </debugvars>
[21:54:13.084]  
[21:54:13.085]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:54:13.085]    <block atomic="false" info="">
[21:54:13.086]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:54:13.087]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.088]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:54:13.090]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.090]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:54:13.092]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.092]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:54:13.094]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.094]    </block>
[21:54:13.094]  </sequence>
[21:54:13.095]  
[21:54:13.152]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[21:54:13.152]  
[21:54:13.153]  <debugvars>
[21:54:13.153]    // Pre-defined
[21:54:13.153]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:54:13.154]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:54:13.154]    __dp=0x00000000
[21:54:13.154]    __ap=0x00000000
[21:54:13.155]    __traceout=0x00000001      (SWO Trace)
[21:54:13.155]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:54:13.155]    __FlashAddr=0x00000000
[21:54:13.155]    __FlashLen=0x00000000
[21:54:13.156]    __FlashArg=0x00000000
[21:54:13.156]    __FlashOp=0x00000000
[21:54:13.156]    __Result=0x00000000
[21:54:13.157]    
[21:54:13.157]    // User-defined
[21:54:13.157]    DbgMCU_CR=0x00000007
[21:54:13.158]    DbgMCU_APB1_Fz=0x00000000
[21:54:13.158]    DbgMCU_APB2_Fz=0x00000000
[21:54:13.158]    TraceClk_Pin=0x00040002
[21:54:13.159]    TraceD0_Pin=0x00040003
[21:54:13.159]    TraceD1_Pin=0x00040004
[21:54:13.159]    TraceD2_Pin=0x00040005
[21:54:13.160]    TraceD3_Pin=0x00040006
[21:54:13.160]  </debugvars>
[21:54:13.161]  
[21:54:13.161]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:54:13.162]    <block atomic="false" info="">
[21:54:13.162]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:54:13.163]        // -> [traceSWO <= 0x00000001]
[21:54:13.163]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:54:13.163]        // -> [traceTPIU <= 0x00000000]
[21:54:13.164]    </block>
[21:54:13.164]    <control if="traceSWO" while="" timeout="0" info="">
[21:54:13.164]      // if-block "traceSWO"
[21:54:13.165]        // =>  TRUE
[21:54:13.165]      <block atomic="false" info="">
[21:54:13.165]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:54:13.166]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:54:13.166]            <block atomic="false" info="">
[21:54:13.166]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:54:13.167]                // -> [dbgmcu_val <= 0x00000000]
[21:54:13.167]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:54:13.167]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:54:13.168]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:54:13.169]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.170]                // -> [dbgmcu_val <= 0x00000007]
[21:54:13.170]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:54:13.170]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:54:13.171]              Sequence("ConfigureTraceSWOPin");
[21:54:13.171]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:54:13.172]                  <block atomic="false" info="">
[21:54:13.172]                    __var pin     = 0;
[21:54:13.172]                      // -> [pin <= 0x00000000]
[21:54:13.173]                    __var port    = 0;
[21:54:13.173]                      // -> [port <= 0x00000000]
[21:54:13.173]                    __var portAdr = 0;
[21:54:13.174]                      // -> [portAdr <= 0x00000000]
[21:54:13.174]                    __var pos     = 0;
[21:54:13.174]                      // -> [pos <= 0x00000000]
[21:54:13.174]                    __var SWO_Pin = 0x00010003;          // PB3
[21:54:13.175]                      // -> [SWO_Pin <= 0x00010003]
[21:54:13.175]                  </block>
[21:54:13.176]                  <block atomic="false" info="configure SWO">
[21:54:13.176]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:54:13.177]                      // -> [pin <= 0x00000003]
[21:54:13.177]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:54:13.178]                      // -> [port <= 0x00000001]
[21:54:13.178]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:54:13.178]                      // -> [portAdr <= 0x40020400]
[21:54:13.179]                    pos = pin * 2;
[21:54:13.179]                      // -> [pos <= 0x00000006]
[21:54:13.179]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:54:13.181]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.183]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.183]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:54:13.185]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.186]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.187]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:54:13.189]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.190]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.191]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:54:13.192]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.194]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.194]                  </block>
[21:54:13.195]                  <control if="pin <  8" while="" timeout="0" info="">
[21:54:13.195]                    // if-block "pin <  8"
[21:54:13.195]                      // =>  TRUE
[21:54:13.196]                    <block atomic="false" info="">
[21:54:13.196]                      pos = ((pin    ) & 7) * 4;
[21:54:13.197]                        // -> [pos <= 0x0000000C]
[21:54:13.197]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:54:13.199]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.200]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.201]                    </block>
[21:54:13.201]                    // end if-block "pin <  8"
[21:54:13.201]                  </control>
[21:54:13.202]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:54:13.202]                    // if-block "pin >= 8"
[21:54:13.202]                      // =>  FALSE
[21:54:13.203]                    // skip if-block "pin >= 8"
[21:54:13.203]                  </control>
[21:54:13.203]                </sequence>
[21:54:13.204]            </block>
[21:54:13.204]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:54:13.205]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:54:13.206]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.207]            </block>
[21:54:13.207]          </sequence>
[21:54:13.208]      </block>
[21:54:13.208]      // end if-block "traceSWO"
[21:54:13.209]    </control>
[21:54:13.209]    <control if="traceTPIU" while="" timeout="0" info="">
[21:54:13.210]      // if-block "traceTPIU"
[21:54:13.210]        // =>  FALSE
[21:54:13.211]      // skip if-block "traceTPIU"
[21:54:13.211]    </control>
[21:54:13.212]  </sequence>
[21:54:13.212]  
[21:54:13.234]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:54:13.234]  
[21:54:13.235]  <debugvars>
[21:54:13.235]    // Pre-defined
[21:54:13.235]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:54:13.235]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:54:13.236]    __dp=0x00000000
[21:54:13.236]    __ap=0x00000000
[21:54:13.236]    __traceout=0x00000001      (SWO Trace)
[21:54:13.237]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:54:13.237]    __FlashAddr=0x00000000
[21:54:13.238]    __FlashLen=0x00000000
[21:54:13.238]    __FlashArg=0x00000000
[21:54:13.239]    __FlashOp=0x00000000
[21:54:13.239]    __Result=0x00000000
[21:54:13.239]    
[21:54:13.239]    // User-defined
[21:54:13.240]    DbgMCU_CR=0x00000007
[21:54:13.240]    DbgMCU_APB1_Fz=0x00000000
[21:54:13.241]    DbgMCU_APB2_Fz=0x00000000
[21:54:13.241]    TraceClk_Pin=0x00040002
[21:54:13.242]    TraceD0_Pin=0x00040003
[21:54:13.242]    TraceD1_Pin=0x00040004
[21:54:13.242]    TraceD2_Pin=0x00040005
[21:54:13.243]    TraceD3_Pin=0x00040006
[21:54:13.243]  </debugvars>
[21:54:13.244]  
[21:54:13.244]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:54:13.245]    <block atomic="false" info="">
[21:54:13.245]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:54:13.245]        // -> [traceSWO <= 0x00000001]
[21:54:13.246]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:54:13.246]        // -> [traceTPIU <= 0x00000000]
[21:54:13.246]    </block>
[21:54:13.247]    <control if="traceSWO" while="" timeout="0" info="">
[21:54:13.247]      // if-block "traceSWO"
[21:54:13.247]        // =>  TRUE
[21:54:13.248]      <block atomic="false" info="">
[21:54:13.248]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:54:13.248]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:54:13.249]            <block atomic="false" info="">
[21:54:13.249]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:54:13.249]                // -> [dbgmcu_val <= 0x00000000]
[21:54:13.250]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:54:13.250]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:54:13.250]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:54:13.252]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.252]                // -> [dbgmcu_val <= 0x00000007]
[21:54:13.253]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:54:13.253]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:54:13.253]              Sequence("ConfigureTraceSWOPin");
[21:54:13.254]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:54:13.254]                  <block atomic="false" info="">
[21:54:13.255]                    __var pin     = 0;
[21:54:13.255]                      // -> [pin <= 0x00000000]
[21:54:13.256]                    __var port    = 0;
[21:54:13.256]                      // -> [port <= 0x00000000]
[21:54:13.256]                    __var portAdr = 0;
[21:54:13.257]                      // -> [portAdr <= 0x00000000]
[21:54:13.257]                    __var pos     = 0;
[21:54:13.257]                      // -> [pos <= 0x00000000]
[21:54:13.257]                    __var SWO_Pin = 0x00010003;          // PB3
[21:54:13.258]                      // -> [SWO_Pin <= 0x00010003]
[21:54:13.258]                  </block>
[21:54:13.258]                  <block atomic="false" info="configure SWO">
[21:54:13.259]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:54:13.259]                      // -> [pin <= 0x00000003]
[21:54:13.260]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:54:13.260]                      // -> [port <= 0x00000001]
[21:54:13.261]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:54:13.261]                      // -> [portAdr <= 0x40020400]
[21:54:13.261]                    pos = pin * 2;
[21:54:13.262]                      // -> [pos <= 0x00000006]
[21:54:13.262]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:54:13.264]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.265]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.266]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:54:13.267]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.269]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.269]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:54:13.271]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.273]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.273]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:54:13.275]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.276]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.277]                  </block>
[21:54:13.277]                  <control if="pin <  8" while="" timeout="0" info="">
[21:54:13.277]                    // if-block "pin <  8"
[21:54:13.278]                      // =>  TRUE
[21:54:13.278]                    <block atomic="false" info="">
[21:54:13.278]                      pos = ((pin    ) & 7) * 4;
[21:54:13.278]                        // -> [pos <= 0x0000000C]
[21:54:13.279]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:54:13.280]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.282]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.282]                    </block>
[21:54:13.283]                    // end if-block "pin <  8"
[21:54:13.283]                  </control>
[21:54:13.284]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:54:13.285]                    // if-block "pin >= 8"
[21:54:13.285]                      // =>  FALSE
[21:54:13.285]                    // skip if-block "pin >= 8"
[21:54:13.286]                  </control>
[21:54:13.287]                </sequence>
[21:54:13.287]            </block>
[21:54:13.287]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:54:13.287]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:54:13.290]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:13.290]            </block>
[21:54:13.290]          </sequence>
[21:54:13.290]      </block>
[21:54:13.291]      // end if-block "traceSWO"
[21:54:13.291]    </control>
[21:54:13.291]    <control if="traceTPIU" while="" timeout="0" info="">
[21:54:13.293]      // if-block "traceTPIU"
[21:54:13.293]        // =>  FALSE
[21:54:13.293]      // skip if-block "traceTPIU"
[21:54:13.293]    </control>
[21:54:13.293]  </sequence>
[21:54:13.294]  
[21:54:14.692]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:54:14.692]  
[21:54:14.739]  <debugvars>
[21:54:14.740]    // Pre-defined
[21:54:14.740]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:54:14.740]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:54:14.740]    __dp=0x00000000
[21:54:14.741]    __ap=0x00000000
[21:54:14.741]    __traceout=0x00000001      (SWO Trace)
[21:54:14.742]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:54:14.742]    __FlashAddr=0x00000000
[21:54:14.742]    __FlashLen=0x00000000
[21:54:14.742]    __FlashArg=0x00000000
[21:54:14.743]    __FlashOp=0x00000000
[21:54:14.743]    __Result=0x00000000
[21:54:14.743]    
[21:54:14.743]    // User-defined
[21:54:14.744]    DbgMCU_CR=0x00000007
[21:54:14.744]    DbgMCU_APB1_Fz=0x00000000
[21:54:14.744]    DbgMCU_APB2_Fz=0x00000000
[21:54:14.745]    TraceClk_Pin=0x00040002
[21:54:14.745]    TraceD0_Pin=0x00040003
[21:54:14.745]    TraceD1_Pin=0x00040004
[21:54:14.746]    TraceD2_Pin=0x00040005
[21:54:14.746]    TraceD3_Pin=0x00040006
[21:54:14.746]  </debugvars>
[21:54:14.747]  
[21:54:14.747]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:54:14.747]    <block atomic="false" info="">
[21:54:14.748]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:54:14.748]        // -> [traceSWO <= 0x00000001]
[21:54:14.748]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:54:14.749]        // -> [traceTPIU <= 0x00000000]
[21:54:14.749]    </block>
[21:54:14.749]    <control if="traceSWO" while="" timeout="0" info="">
[21:54:14.750]      // if-block "traceSWO"
[21:54:14.750]        // =>  TRUE
[21:54:14.751]      <block atomic="false" info="">
[21:54:14.751]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:54:14.751]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:54:14.752]            <block atomic="false" info="">
[21:54:14.752]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:54:14.752]                // -> [dbgmcu_val <= 0x00000000]
[21:54:14.753]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:54:14.754]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:54:14.754]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:54:14.755]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:54:14.756]                // -> [dbgmcu_val <= 0x00000007]
[21:54:14.756]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:54:14.757]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:54:14.757]              Sequence("ConfigureTraceSWOPin");
[21:54:14.758]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:54:14.758]                  <block atomic="false" info="">
[21:54:14.758]                    __var pin     = 0;
[21:54:14.759]                      // -> [pin <= 0x00000000]
[21:54:14.759]                    __var port    = 0;
[21:54:14.759]                      // -> [port <= 0x00000000]
[21:54:14.760]                    __var portAdr = 0;
[21:54:14.760]                      // -> [portAdr <= 0x00000000]
[21:54:14.761]                    __var pos     = 0;
[21:54:14.761]                      // -> [pos <= 0x00000000]
[21:54:14.762]                    __var SWO_Pin = 0x00010003;          // PB3
[21:54:14.762]                      // -> [SWO_Pin <= 0x00010003]
[21:54:14.763]                  </block>
[21:54:14.763]                  <block atomic="false" info="configure SWO">
[21:54:14.763]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:54:14.764]                      // -> [pin <= 0x00000003]
[21:54:14.764]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:54:14.765]                      // -> [port <= 0x00000001]
[21:54:14.765]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:54:14.765]                      // -> [portAdr <= 0x40020400]
[21:54:14.766]                    pos = pin * 2;
[21:54:14.766]                      // -> [pos <= 0x00000006]
[21:54:14.767]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:54:14.769]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:54:14.771]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:14.771]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:54:14.772]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:54:14.774]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:14.774]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:54:14.776]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:54:14.777]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:14.778]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:54:14.779]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:54:14.781]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:14.781]                  </block>
[21:54:14.782]                  <control if="pin <  8" while="" timeout="0" info="">
[21:54:14.782]                    // if-block "pin <  8"
[21:54:14.783]                      // =>  TRUE
[21:54:14.783]                    <block atomic="false" info="">
[21:54:14.783]                      pos = ((pin    ) & 7) * 4;
[21:54:14.784]                        // -> [pos <= 0x0000000C]
[21:54:14.785]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:54:14.786]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:54:14.788]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:14.789]                    </block>
[21:54:14.789]                    // end if-block "pin <  8"
[21:54:14.789]                  </control>
[21:54:14.790]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:54:14.790]                    // if-block "pin >= 8"
[21:54:14.790]                      // =>  FALSE
[21:54:14.791]                    // skip if-block "pin >= 8"
[21:54:14.791]                  </control>
[21:54:14.792]                </sequence>
[21:54:14.792]            </block>
[21:54:14.792]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:54:14.792]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:54:14.794]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:54:14.794]            </block>
[21:54:14.795]          </sequence>
[21:54:14.795]      </block>
[21:54:14.795]      // end if-block "traceSWO"
[21:54:14.796]    </control>
[21:54:14.796]    <control if="traceTPIU" while="" timeout="0" info="">
[21:54:14.797]      // if-block "traceTPIU"
[21:54:14.797]        // =>  FALSE
[21:54:14.797]      // skip if-block "traceTPIU"
[21:54:14.797]    </control>
[21:54:14.798]  </sequence>
[21:54:14.798]  
[21:56:38.694]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:56:38.694]  
[21:56:38.742]  <debugvars>
[21:56:38.742]    // Pre-defined
[21:56:38.743]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:56:38.743]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:56:38.743]    __dp=0x00000000
[21:56:38.744]    __ap=0x00000000
[21:56:38.744]    __traceout=0x00000001      (SWO Trace)
[21:56:38.745]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:56:38.745]    __FlashAddr=0x00000000
[21:56:38.746]    __FlashLen=0x00000000
[21:56:38.746]    __FlashArg=0x00000000
[21:56:38.746]    __FlashOp=0x00000000
[21:56:38.747]    __Result=0x00000000
[21:56:38.747]    
[21:56:38.747]    // User-defined
[21:56:38.747]    DbgMCU_CR=0x00000007
[21:56:38.748]    DbgMCU_APB1_Fz=0x00000000
[21:56:38.748]    DbgMCU_APB2_Fz=0x00000000
[21:56:38.749]    TraceClk_Pin=0x00040002
[21:56:38.749]    TraceD0_Pin=0x00040003
[21:56:38.749]    TraceD1_Pin=0x00040004
[21:56:38.749]    TraceD2_Pin=0x00040005
[21:56:38.750]    TraceD3_Pin=0x00040006
[21:56:38.750]  </debugvars>
[21:56:38.751]  
[21:56:38.751]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:56:38.752]    <block atomic="false" info="">
[21:56:38.752]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:56:38.752]        // -> [traceSWO <= 0x00000001]
[21:56:38.752]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:56:38.753]        // -> [traceTPIU <= 0x00000000]
[21:56:38.753]    </block>
[21:56:38.754]    <control if="traceSWO" while="" timeout="0" info="">
[21:56:38.754]      // if-block "traceSWO"
[21:56:38.754]        // =>  TRUE
[21:56:38.755]      <block atomic="false" info="">
[21:56:38.755]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:56:38.756]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:56:38.756]            <block atomic="false" info="">
[21:56:38.756]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:56:38.757]                // -> [dbgmcu_val <= 0x00000000]
[21:56:38.757]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:56:38.758]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:56:38.758]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:56:38.760]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:56:38.760]                // -> [dbgmcu_val <= 0x00000007]
[21:56:38.760]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:56:38.761]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:56:38.761]              Sequence("ConfigureTraceSWOPin");
[21:56:38.761]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:56:38.761]                  <block atomic="false" info="">
[21:56:38.762]                    __var pin     = 0;
[21:56:38.762]                      // -> [pin <= 0x00000000]
[21:56:38.762]                    __var port    = 0;
[21:56:38.763]                      // -> [port <= 0x00000000]
[21:56:38.763]                    __var portAdr = 0;
[21:56:38.764]                      // -> [portAdr <= 0x00000000]
[21:56:38.764]                    __var pos     = 0;
[21:56:38.764]                      // -> [pos <= 0x00000000]
[21:56:38.765]                    __var SWO_Pin = 0x00010003;          // PB3
[21:56:38.765]                      // -> [SWO_Pin <= 0x00010003]
[21:56:38.765]                  </block>
[21:56:38.766]                  <block atomic="false" info="configure SWO">
[21:56:38.766]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:56:38.766]                      // -> [pin <= 0x00000003]
[21:56:38.766]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:56:38.767]                      // -> [port <= 0x00000001]
[21:56:38.767]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:56:38.767]                      // -> [portAdr <= 0x40020400]
[21:56:38.767]                    pos = pin * 2;
[21:56:38.768]                      // -> [pos <= 0x00000006]
[21:56:38.768]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:56:38.770]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:56:38.771]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:56:38.772]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:56:38.773]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:56:38.775]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:56:38.775]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:56:38.777]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:56:38.778]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:56:38.779]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:56:38.780]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:56:38.782]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:56:38.782]                  </block>
[21:56:38.782]                  <control if="pin <  8" while="" timeout="0" info="">
[21:56:38.783]                    // if-block "pin <  8"
[21:56:38.783]                      // =>  TRUE
[21:56:38.783]                    <block atomic="false" info="">
[21:56:38.784]                      pos = ((pin    ) & 7) * 4;
[21:56:38.784]                        // -> [pos <= 0x0000000C]
[21:56:38.784]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:56:38.786]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:56:38.787]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:56:38.788]                    </block>
[21:56:38.788]                    // end if-block "pin <  8"
[21:56:38.789]                  </control>
[21:56:38.789]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:56:38.789]                    // if-block "pin >= 8"
[21:56:38.790]                      // =>  FALSE
[21:56:38.790]                    // skip if-block "pin >= 8"
[21:56:38.790]                  </control>
[21:56:38.791]                </sequence>
[21:56:38.791]            </block>
[21:56:38.791]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:56:38.791]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:56:38.793]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:56:38.793]            </block>
[21:56:38.794]          </sequence>
[21:56:38.794]      </block>
[21:56:38.794]      // end if-block "traceSWO"
[21:56:38.795]    </control>
[21:56:38.795]    <control if="traceTPIU" while="" timeout="0" info="">
[21:56:38.795]      // if-block "traceTPIU"
[21:56:38.795]        // =>  FALSE
[21:56:38.796]      // skip if-block "traceTPIU"
[21:56:38.796]    </control>
[21:56:38.796]  </sequence>
[21:56:38.796]  
[21:57:32.909]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:57:32.909]  
[21:57:32.956]  <debugvars>
[21:57:32.957]    // Pre-defined
[21:57:32.957]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:57:32.957]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:57:32.958]    __dp=0x00000000
[21:57:32.958]    __ap=0x00000000
[21:57:32.959]    __traceout=0x00000001      (SWO Trace)
[21:57:32.959]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:57:32.960]    __FlashAddr=0x00000000
[21:57:32.960]    __FlashLen=0x00000000
[21:57:32.961]    __FlashArg=0x00000000
[21:57:32.962]    __FlashOp=0x00000000
[21:57:32.962]    __Result=0x00000000
[21:57:32.962]    
[21:57:32.962]    // User-defined
[21:57:32.962]    DbgMCU_CR=0x00000007
[21:57:32.963]    DbgMCU_APB1_Fz=0x00000000
[21:57:32.963]    DbgMCU_APB2_Fz=0x00000000
[21:57:32.964]    TraceClk_Pin=0x00040002
[21:57:32.964]    TraceD0_Pin=0x00040003
[21:57:32.964]    TraceD1_Pin=0x00040004
[21:57:32.965]    TraceD2_Pin=0x00040005
[21:57:32.965]    TraceD3_Pin=0x00040006
[21:57:32.966]  </debugvars>
[21:57:32.966]  
[21:57:32.966]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:57:32.966]    <block atomic="false" info="">
[21:57:32.967]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:57:32.967]        // -> [traceSWO <= 0x00000001]
[21:57:32.968]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:57:32.968]        // -> [traceTPIU <= 0x00000000]
[21:57:32.968]    </block>
[21:57:32.968]    <control if="traceSWO" while="" timeout="0" info="">
[21:57:32.969]      // if-block "traceSWO"
[21:57:32.969]        // =>  TRUE
[21:57:32.969]      <block atomic="false" info="">
[21:57:32.970]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:57:32.971]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:57:32.971]            <block atomic="false" info="">
[21:57:32.971]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:57:32.971]                // -> [dbgmcu_val <= 0x00000000]
[21:57:32.971]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:57:32.972]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:57:32.972]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:57:32.974]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:57:32.974]                // -> [dbgmcu_val <= 0x00000007]
[21:57:32.975]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:57:32.975]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:57:32.976]              Sequence("ConfigureTraceSWOPin");
[21:57:32.976]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:57:32.977]                  <block atomic="false" info="">
[21:57:32.977]                    __var pin     = 0;
[21:57:32.977]                      // -> [pin <= 0x00000000]
[21:57:32.978]                    __var port    = 0;
[21:57:32.979]                      // -> [port <= 0x00000000]
[21:57:32.979]                    __var portAdr = 0;
[21:57:32.980]                      // -> [portAdr <= 0x00000000]
[21:57:32.980]                    __var pos     = 0;
[21:57:32.980]                      // -> [pos <= 0x00000000]
[21:57:32.980]                    __var SWO_Pin = 0x00010003;          // PB3
[21:57:32.981]                      // -> [SWO_Pin <= 0x00010003]
[21:57:32.981]                  </block>
[21:57:32.982]                  <block atomic="false" info="configure SWO">
[21:57:32.982]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:57:32.983]                      // -> [pin <= 0x00000003]
[21:57:32.983]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:57:32.983]                      // -> [port <= 0x00000001]
[21:57:32.984]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:57:32.984]                      // -> [portAdr <= 0x40020400]
[21:57:32.984]                    pos = pin * 2;
[21:57:32.985]                      // -> [pos <= 0x00000006]
[21:57:32.985]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:57:32.987]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:57:32.988]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:32.988]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:57:32.990]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:57:32.991]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:32.992]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:57:32.993]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:57:32.995]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:32.995]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:57:32.996]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:57:32.998]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:32.998]                  </block>
[21:57:32.999]                  <control if="pin <  8" while="" timeout="0" info="">
[21:57:32.999]                    // if-block "pin <  8"
[21:57:33.000]                      // =>  TRUE
[21:57:33.000]                    <block atomic="false" info="">
[21:57:33.000]                      pos = ((pin    ) & 7) * 4;
[21:57:33.001]                        // -> [pos <= 0x0000000C]
[21:57:33.001]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:57:33.002]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:57:33.004]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:33.004]                    </block>
[21:57:33.004]                    // end if-block "pin <  8"
[21:57:33.005]                  </control>
[21:57:33.005]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:57:33.006]                    // if-block "pin >= 8"
[21:57:33.006]                      // =>  FALSE
[21:57:33.007]                    // skip if-block "pin >= 8"
[21:57:33.007]                  </control>
[21:57:33.007]                </sequence>
[21:57:33.008]            </block>
[21:57:33.008]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:57:33.009]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:57:33.010]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:33.010]            </block>
[21:57:33.011]          </sequence>
[21:57:33.011]      </block>
[21:57:33.011]      // end if-block "traceSWO"
[21:57:33.012]    </control>
[21:57:33.012]    <control if="traceTPIU" while="" timeout="0" info="">
[21:57:33.012]      // if-block "traceTPIU"
[21:57:33.013]        // =>  FALSE
[21:57:33.013]      // skip if-block "traceTPIU"
[21:57:33.013]    </control>
[21:57:33.014]  </sequence>
[21:57:33.014]  
[21:57:34.182]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:57:34.182]  
[21:57:34.228]  <debugvars>
[21:57:34.228]    // Pre-defined
[21:57:34.228]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:57:34.229]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:57:34.229]    __dp=0x00000000
[21:57:34.229]    __ap=0x00000000
[21:57:34.230]    __traceout=0x00000001      (SWO Trace)
[21:57:34.230]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:57:34.230]    __FlashAddr=0x00000000
[21:57:34.230]    __FlashLen=0x00000000
[21:57:34.231]    __FlashArg=0x00000000
[21:57:34.231]    __FlashOp=0x00000000
[21:57:34.231]    __Result=0x00000000
[21:57:34.231]    
[21:57:34.231]    // User-defined
[21:57:34.232]    DbgMCU_CR=0x00000007
[21:57:34.232]    DbgMCU_APB1_Fz=0x00000000
[21:57:34.233]    DbgMCU_APB2_Fz=0x00000000
[21:57:34.233]    TraceClk_Pin=0x00040002
[21:57:34.233]    TraceD0_Pin=0x00040003
[21:57:34.233]    TraceD1_Pin=0x00040004
[21:57:34.234]    TraceD2_Pin=0x00040005
[21:57:34.234]    TraceD3_Pin=0x00040006
[21:57:34.234]  </debugvars>
[21:57:34.234]  
[21:57:34.235]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:57:34.235]    <block atomic="false" info="">
[21:57:34.235]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:57:34.235]        // -> [traceSWO <= 0x00000001]
[21:57:34.235]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:57:34.236]        // -> [traceTPIU <= 0x00000000]
[21:57:34.236]    </block>
[21:57:34.237]    <control if="traceSWO" while="" timeout="0" info="">
[21:57:34.237]      // if-block "traceSWO"
[21:57:34.237]        // =>  TRUE
[21:57:34.238]      <block atomic="false" info="">
[21:57:34.238]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:57:34.238]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:57:34.239]            <block atomic="false" info="">
[21:57:34.239]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:57:34.239]                // -> [dbgmcu_val <= 0x00000000]
[21:57:34.240]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:57:34.240]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:57:34.240]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:57:34.242]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.242]                // -> [dbgmcu_val <= 0x00000007]
[21:57:34.243]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:57:34.243]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:57:34.243]              Sequence("ConfigureTraceSWOPin");
[21:57:34.243]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:57:34.243]                  <block atomic="false" info="">
[21:57:34.244]                    __var pin     = 0;
[21:57:34.244]                      // -> [pin <= 0x00000000]
[21:57:34.245]                    __var port    = 0;
[21:57:34.245]                      // -> [port <= 0x00000000]
[21:57:34.245]                    __var portAdr = 0;
[21:57:34.245]                      // -> [portAdr <= 0x00000000]
[21:57:34.245]                    __var pos     = 0;
[21:57:34.245]                      // -> [pos <= 0x00000000]
[21:57:34.246]                    __var SWO_Pin = 0x00010003;          // PB3
[21:57:34.246]                      // -> [SWO_Pin <= 0x00010003]
[21:57:34.246]                  </block>
[21:57:34.247]                  <block atomic="false" info="configure SWO">
[21:57:34.247]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:57:34.247]                      // -> [pin <= 0x00000003]
[21:57:34.248]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:57:34.248]                      // -> [port <= 0x00000001]
[21:57:34.248]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:57:34.248]                      // -> [portAdr <= 0x40020400]
[21:57:34.249]                    pos = pin * 2;
[21:57:34.249]                      // -> [pos <= 0x00000006]
[21:57:34.249]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:57:34.251]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.251]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.252]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:57:34.254]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.254]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.255]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:57:34.256]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.258]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.258]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:57:34.259]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.260]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.260]                  </block>
[21:57:34.260]                  <control if="pin <  8" while="" timeout="0" info="">
[21:57:34.261]                    // if-block "pin <  8"
[21:57:34.262]                      // =>  TRUE
[21:57:34.262]                    <block atomic="false" info="">
[21:57:34.262]                      pos = ((pin    ) & 7) * 4;
[21:57:34.262]                        // -> [pos <= 0x0000000C]
[21:57:34.262]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:57:34.263]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.265]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.265]                    </block>
[21:57:34.265]                    // end if-block "pin <  8"
[21:57:34.265]                  </control>
[21:57:34.265]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:57:34.266]                    // if-block "pin >= 8"
[21:57:34.266]                      // =>  FALSE
[21:57:34.266]                    // skip if-block "pin >= 8"
[21:57:34.266]                  </control>
[21:57:34.266]                </sequence>
[21:57:34.267]            </block>
[21:57:34.267]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:57:34.267]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:57:34.269]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.270]            </block>
[21:57:34.270]          </sequence>
[21:57:34.270]      </block>
[21:57:34.270]      // end if-block "traceSWO"
[21:57:34.270]    </control>
[21:57:34.270]    <control if="traceTPIU" while="" timeout="0" info="">
[21:57:34.271]      // if-block "traceTPIU"
[21:57:34.271]        // =>  FALSE
[21:57:34.271]      // skip if-block "traceTPIU"
[21:57:34.272]    </control>
[21:57:34.272]  </sequence>
[21:57:34.272]  
[21:57:34.683]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:57:34.683]  
[21:57:34.686]  <debugvars>
[21:57:34.686]    // Pre-defined
[21:57:34.686]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:57:34.686]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:57:34.686]    __dp=0x00000000
[21:57:34.687]    __ap=0x00000000
[21:57:34.687]    __traceout=0x00000001      (SWO Trace)
[21:57:34.687]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:57:34.688]    __FlashAddr=0x00000000
[21:57:34.688]    __FlashLen=0x00000000
[21:57:34.688]    __FlashArg=0x00000000
[21:57:34.688]    __FlashOp=0x00000000
[21:57:34.688]    __Result=0x00000000
[21:57:34.688]    
[21:57:34.688]    // User-defined
[21:57:34.688]    DbgMCU_CR=0x00000007
[21:57:34.688]    DbgMCU_APB1_Fz=0x00000000
[21:57:34.689]    DbgMCU_APB2_Fz=0x00000000
[21:57:34.689]    TraceClk_Pin=0x00040002
[21:57:34.689]    TraceD0_Pin=0x00040003
[21:57:34.689]    TraceD1_Pin=0x00040004
[21:57:34.690]    TraceD2_Pin=0x00040005
[21:57:34.690]    TraceD3_Pin=0x00040006
[21:57:34.690]  </debugvars>
[21:57:34.690]  
[21:57:34.690]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:57:34.690]    <block atomic="false" info="">
[21:57:34.691]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:57:34.691]        // -> [traceSWO <= 0x00000001]
[21:57:34.691]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:57:34.691]        // -> [traceTPIU <= 0x00000000]
[21:57:34.691]    </block>
[21:57:34.691]    <control if="traceSWO" while="" timeout="0" info="">
[21:57:34.691]      // if-block "traceSWO"
[21:57:34.692]        // =>  TRUE
[21:57:34.692]      <block atomic="false" info="">
[21:57:34.692]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:57:34.692]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:57:34.692]            <block atomic="false" info="">
[21:57:34.692]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:57:34.692]                // -> [dbgmcu_val <= 0x00000000]
[21:57:34.693]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:57:34.693]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:57:34.693]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:57:34.694]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.694]                // -> [dbgmcu_val <= 0x00000007]
[21:57:34.694]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:57:34.694]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:57:34.694]              Sequence("ConfigureTraceSWOPin");
[21:57:34.694]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:57:34.695]                  <block atomic="false" info="">
[21:57:34.695]                    __var pin     = 0;
[21:57:34.695]                      // -> [pin <= 0x00000000]
[21:57:34.695]                    __var port    = 0;
[21:57:34.695]                      // -> [port <= 0x00000000]
[21:57:34.695]                    __var portAdr = 0;
[21:57:34.695]                      // -> [portAdr <= 0x00000000]
[21:57:34.695]                    __var pos     = 0;
[21:57:34.696]                      // -> [pos <= 0x00000000]
[21:57:34.696]                    __var SWO_Pin = 0x00010003;          // PB3
[21:57:34.696]                      // -> [SWO_Pin <= 0x00010003]
[21:57:34.696]                  </block>
[21:57:34.696]                  <block atomic="false" info="configure SWO">
[21:57:34.697]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:57:34.697]                      // -> [pin <= 0x00000003]
[21:57:34.697]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:57:34.697]                      // -> [port <= 0x00000001]
[21:57:34.697]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:57:34.697]                      // -> [portAdr <= 0x40020400]
[21:57:34.697]                    pos = pin * 2;
[21:57:34.697]                      // -> [pos <= 0x00000006]
[21:57:34.698]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:57:34.699]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.700]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.700]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:57:34.700]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.701]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.702]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:57:34.703]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.703]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.704]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:57:34.705]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.706]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.706]                  </block>
[21:57:34.707]                  <control if="pin <  8" while="" timeout="0" info="">
[21:57:34.707]                    // if-block "pin <  8"
[21:57:34.707]                      // =>  TRUE
[21:57:34.707]                    <block atomic="false" info="">
[21:57:34.707]                      pos = ((pin    ) & 7) * 4;
[21:57:34.707]                        // -> [pos <= 0x0000000C]
[21:57:34.707]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:57:34.708]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.709]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.709]                    </block>
[21:57:34.709]                    // end if-block "pin <  8"
[21:57:34.709]                  </control>
[21:57:34.709]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:57:34.709]                    // if-block "pin >= 8"
[21:57:34.710]                      // =>  FALSE
[21:57:34.710]                    // skip if-block "pin >= 8"
[21:57:34.710]                  </control>
[21:57:34.710]                </sequence>
[21:57:34.710]            </block>
[21:57:34.710]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:57:34.710]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:57:34.711]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:34.711]            </block>
[21:57:34.712]          </sequence>
[21:57:34.712]      </block>
[21:57:34.712]      // end if-block "traceSWO"
[21:57:34.712]    </control>
[21:57:34.712]    <control if="traceTPIU" while="" timeout="0" info="">
[21:57:34.712]      // if-block "traceTPIU"
[21:57:34.713]        // =>  FALSE
[21:57:34.713]      // skip if-block "traceTPIU"
[21:57:34.713]    </control>
[21:57:34.713]  </sequence>
[21:57:34.713]  
[21:57:40.050]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:57:40.050]  
[21:57:40.051]  <debugvars>
[21:57:40.051]    // Pre-defined
[21:57:40.051]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:57:40.052]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:57:40.052]    __dp=0x00000000
[21:57:40.053]    __ap=0x00000000
[21:57:40.053]    __traceout=0x00000001      (SWO Trace)
[21:57:40.054]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:57:40.054]    __FlashAddr=0x00000000
[21:57:40.055]    __FlashLen=0x00000000
[21:57:40.055]    __FlashArg=0x00000000
[21:57:40.056]    __FlashOp=0x00000000
[21:57:40.056]    __Result=0x00000000
[21:57:40.056]    
[21:57:40.056]    // User-defined
[21:57:40.057]    DbgMCU_CR=0x00000007
[21:57:40.057]    DbgMCU_APB1_Fz=0x00000000
[21:57:40.058]    DbgMCU_APB2_Fz=0x00000000
[21:57:40.058]    TraceClk_Pin=0x00040002
[21:57:40.059]    TraceD0_Pin=0x00040003
[21:57:40.059]    TraceD1_Pin=0x00040004
[21:57:40.059]    TraceD2_Pin=0x00040005
[21:57:40.060]    TraceD3_Pin=0x00040006
[21:57:40.060]  </debugvars>
[21:57:40.061]  
[21:57:40.061]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:57:40.061]    <block atomic="false" info="">
[21:57:40.061]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:57:40.062]        // -> [traceSWO <= 0x00000001]
[21:57:40.062]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:57:40.063]        // -> [traceTPIU <= 0x00000000]
[21:57:40.063]    </block>
[21:57:40.063]    <control if="traceSWO" while="" timeout="0" info="">
[21:57:40.064]      // if-block "traceSWO"
[21:57:40.064]        // =>  TRUE
[21:57:40.064]      <block atomic="false" info="">
[21:57:40.065]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:57:40.065]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:57:40.065]            <block atomic="false" info="">
[21:57:40.066]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:57:40.066]                // -> [dbgmcu_val <= 0x00000000]
[21:57:40.066]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:57:40.067]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:57:40.067]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:57:40.069]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:57:40.070]                // -> [dbgmcu_val <= 0x00000007]
[21:57:40.070]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:57:40.071]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:57:40.071]              Sequence("ConfigureTraceSWOPin");
[21:57:40.072]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:57:40.072]                  <block atomic="false" info="">
[21:57:40.072]                    __var pin     = 0;
[21:57:40.073]                      // -> [pin <= 0x00000000]
[21:57:40.073]                    __var port    = 0;
[21:57:40.074]                      // -> [port <= 0x00000000]
[21:57:40.074]                    __var portAdr = 0;
[21:57:40.074]                      // -> [portAdr <= 0x00000000]
[21:57:40.075]                    __var pos     = 0;
[21:57:40.075]                      // -> [pos <= 0x00000000]
[21:57:40.075]                    __var SWO_Pin = 0x00010003;          // PB3
[21:57:40.076]                      // -> [SWO_Pin <= 0x00010003]
[21:57:40.076]                  </block>
[21:57:40.077]                  <block atomic="false" info="configure SWO">
[21:57:40.077]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:57:40.078]                      // -> [pin <= 0x00000003]
[21:57:40.078]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:57:40.079]                      // -> [port <= 0x00000001]
[21:57:40.079]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:57:40.079]                      // -> [portAdr <= 0x40020400]
[21:57:40.080]                    pos = pin * 2;
[21:57:40.080]                      // -> [pos <= 0x00000006]
[21:57:40.081]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:57:40.082]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:57:40.084]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:40.084]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:57:40.086]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:57:40.087]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:40.088]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:57:40.089]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:57:40.091]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:40.091]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:57:40.093]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:57:40.094]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:40.095]                  </block>
[21:57:40.095]                  <control if="pin <  8" while="" timeout="0" info="">
[21:57:40.095]                    // if-block "pin <  8"
[21:57:40.096]                      // =>  TRUE
[21:57:40.096]                    <block atomic="false" info="">
[21:57:40.096]                      pos = ((pin    ) & 7) * 4;
[21:57:40.097]                        // -> [pos <= 0x0000000C]
[21:57:40.097]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:57:40.099]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:57:40.100]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:40.101]                    </block>
[21:57:40.101]                    // end if-block "pin <  8"
[21:57:40.101]                  </control>
[21:57:40.102]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:57:40.102]                    // if-block "pin >= 8"
[21:57:40.102]                      // =>  FALSE
[21:57:40.103]                    // skip if-block "pin >= 8"
[21:57:40.103]                  </control>
[21:57:40.104]                </sequence>
[21:57:40.104]            </block>
[21:57:40.105]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:57:40.105]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:57:40.107]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:40.107]            </block>
[21:57:40.108]          </sequence>
[21:57:40.108]      </block>
[21:57:40.108]      // end if-block "traceSWO"
[21:57:40.108]    </control>
[21:57:40.109]    <control if="traceTPIU" while="" timeout="0" info="">
[21:57:40.109]      // if-block "traceTPIU"
[21:57:40.109]        // =>  FALSE
[21:57:40.110]      // skip if-block "traceTPIU"
[21:57:40.110]    </control>
[21:57:40.110]  </sequence>
[21:57:40.111]  
[21:57:49.443]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:57:49.443]  
[21:57:49.489]  <debugvars>
[21:57:49.489]    // Pre-defined
[21:57:49.490]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:57:49.490]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:57:49.490]    __dp=0x00000000
[21:57:49.490]    __ap=0x00000000
[21:57:49.491]    __traceout=0x00000001      (SWO Trace)
[21:57:49.491]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:57:49.492]    __FlashAddr=0x00000000
[21:57:49.492]    __FlashLen=0x00000000
[21:57:49.492]    __FlashArg=0x00000000
[21:57:49.493]    __FlashOp=0x00000000
[21:57:49.493]    __Result=0x00000000
[21:57:49.493]    
[21:57:49.493]    // User-defined
[21:57:49.494]    DbgMCU_CR=0x00000007
[21:57:49.494]    DbgMCU_APB1_Fz=0x00000000
[21:57:49.495]    DbgMCU_APB2_Fz=0x00000000
[21:57:49.495]    TraceClk_Pin=0x00040002
[21:57:49.495]    TraceD0_Pin=0x00040003
[21:57:49.496]    TraceD1_Pin=0x00040004
[21:57:49.496]    TraceD2_Pin=0x00040005
[21:57:49.496]    TraceD3_Pin=0x00040006
[21:57:49.497]  </debugvars>
[21:57:49.497]  
[21:57:49.497]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:57:49.498]    <block atomic="false" info="">
[21:57:49.498]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:57:49.499]        // -> [traceSWO <= 0x00000001]
[21:57:49.499]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:57:49.499]        // -> [traceTPIU <= 0x00000000]
[21:57:49.500]    </block>
[21:57:49.500]    <control if="traceSWO" while="" timeout="0" info="">
[21:57:49.500]      // if-block "traceSWO"
[21:57:49.501]        // =>  TRUE
[21:57:49.501]      <block atomic="false" info="">
[21:57:49.502]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:57:49.502]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:57:49.502]            <block atomic="false" info="">
[21:57:49.503]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:57:49.503]                // -> [dbgmcu_val <= 0x00000000]
[21:57:49.504]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:57:49.504]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:57:49.505]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:57:49.506]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:57:49.507]                // -> [dbgmcu_val <= 0x00000007]
[21:57:49.507]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:57:49.508]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:57:49.508]              Sequence("ConfigureTraceSWOPin");
[21:57:49.508]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:57:49.509]                  <block atomic="false" info="">
[21:57:49.509]                    __var pin     = 0;
[21:57:49.509]                      // -> [pin <= 0x00000000]
[21:57:49.510]                    __var port    = 0;
[21:57:49.510]                      // -> [port <= 0x00000000]
[21:57:49.510]                    __var portAdr = 0;
[21:57:49.511]                      // -> [portAdr <= 0x00000000]
[21:57:49.511]                    __var pos     = 0;
[21:57:49.511]                      // -> [pos <= 0x00000000]
[21:57:49.512]                    __var SWO_Pin = 0x00010003;          // PB3
[21:57:49.512]                      // -> [SWO_Pin <= 0x00010003]
[21:57:49.512]                  </block>
[21:57:49.513]                  <block atomic="false" info="configure SWO">
[21:57:49.513]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:57:49.513]                      // -> [pin <= 0x00000003]
[21:57:49.514]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:57:49.514]                      // -> [port <= 0x00000001]
[21:57:49.514]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:57:49.515]                      // -> [portAdr <= 0x40020400]
[21:57:49.515]                    pos = pin * 2;
[21:57:49.515]                      // -> [pos <= 0x00000006]
[21:57:49.516]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:57:49.517]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:57:49.519]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:49.519]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:57:49.521]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:57:49.523]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:49.523]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:57:49.524]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:57:49.526]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:49.526]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:57:49.528]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:57:49.530]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:49.530]                  </block>
[21:57:49.530]                  <control if="pin <  8" while="" timeout="0" info="">
[21:57:49.531]                    // if-block "pin <  8"
[21:57:49.531]                      // =>  TRUE
[21:57:49.532]                    <block atomic="false" info="">
[21:57:49.532]                      pos = ((pin    ) & 7) * 4;
[21:57:49.533]                        // -> [pos <= 0x0000000C]
[21:57:49.533]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:57:49.535]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:57:49.536]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:49.537]                    </block>
[21:57:49.538]                    // end if-block "pin <  8"
[21:57:49.538]                  </control>
[21:57:49.538]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:57:49.539]                    // if-block "pin >= 8"
[21:57:49.539]                      // =>  FALSE
[21:57:49.540]                    // skip if-block "pin >= 8"
[21:57:49.540]                  </control>
[21:57:49.540]                </sequence>
[21:57:49.541]            </block>
[21:57:49.541]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:57:49.541]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:57:49.543]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:49.544]            </block>
[21:57:49.544]          </sequence>
[21:57:49.545]      </block>
[21:57:49.545]      // end if-block "traceSWO"
[21:57:49.545]    </control>
[21:57:49.546]    <control if="traceTPIU" while="" timeout="0" info="">
[21:57:49.546]      // if-block "traceTPIU"
[21:57:49.547]        // =>  FALSE
[21:57:49.547]      // skip if-block "traceTPIU"
[21:57:49.547]    </control>
[21:57:49.548]  </sequence>
[21:57:49.548]  
[21:57:55.922]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:57:55.922]  
[21:57:55.922]  <debugvars>
[21:57:55.923]    // Pre-defined
[21:57:55.923]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:57:55.924]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:57:55.924]    __dp=0x00000000
[21:57:55.925]    __ap=0x00000000
[21:57:55.925]    __traceout=0x00000001      (SWO Trace)
[21:57:55.926]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:57:55.926]    __FlashAddr=0x00000000
[21:57:55.926]    __FlashLen=0x00000000
[21:57:55.927]    __FlashArg=0x00000000
[21:57:55.927]    __FlashOp=0x00000000
[21:57:55.928]    __Result=0x00000000
[21:57:55.928]    
[21:57:55.928]    // User-defined
[21:57:55.928]    DbgMCU_CR=0x00000007
[21:57:55.930]    DbgMCU_APB1_Fz=0x00000000
[21:57:55.930]    DbgMCU_APB2_Fz=0x00000000
[21:57:55.930]    TraceClk_Pin=0x00040002
[21:57:55.930]    TraceD0_Pin=0x00040003
[21:57:55.931]    TraceD1_Pin=0x00040004
[21:57:55.931]    TraceD2_Pin=0x00040005
[21:57:55.932]    TraceD3_Pin=0x00040006
[21:57:55.932]  </debugvars>
[21:57:55.933]  
[21:57:55.933]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:57:55.934]    <block atomic="false" info="">
[21:57:55.934]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:57:55.935]        // -> [traceSWO <= 0x00000001]
[21:57:55.935]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:57:55.936]        // -> [traceTPIU <= 0x00000000]
[21:57:55.936]    </block>
[21:57:55.936]    <control if="traceSWO" while="" timeout="0" info="">
[21:57:55.937]      // if-block "traceSWO"
[21:57:55.937]        // =>  TRUE
[21:57:55.938]      <block atomic="false" info="">
[21:57:55.938]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:57:55.939]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:57:55.939]            <block atomic="false" info="">
[21:57:55.940]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:57:55.940]                // -> [dbgmcu_val <= 0x00000000]
[21:57:55.941]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:57:55.941]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:57:55.941]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:57:55.943]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:57:55.944]                // -> [dbgmcu_val <= 0x00000007]
[21:57:55.944]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:57:55.945]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:57:55.945]              Sequence("ConfigureTraceSWOPin");
[21:57:55.945]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:57:55.945]                  <block atomic="false" info="">
[21:57:55.946]                    __var pin     = 0;
[21:57:55.946]                      // -> [pin <= 0x00000000]
[21:57:55.946]                    __var port    = 0;
[21:57:55.947]                      // -> [port <= 0x00000000]
[21:57:55.947]                    __var portAdr = 0;
[21:57:55.948]                      // -> [portAdr <= 0x00000000]
[21:57:55.948]                    __var pos     = 0;
[21:57:55.949]                      // -> [pos <= 0x00000000]
[21:57:55.949]                    __var SWO_Pin = 0x00010003;          // PB3
[21:57:55.949]                      // -> [SWO_Pin <= 0x00010003]
[21:57:55.950]                  </block>
[21:57:55.950]                  <block atomic="false" info="configure SWO">
[21:57:55.952]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:57:55.952]                      // -> [pin <= 0x00000003]
[21:57:55.952]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:57:55.952]                      // -> [port <= 0x00000001]
[21:57:55.953]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:57:55.953]                      // -> [portAdr <= 0x40020400]
[21:57:55.954]                    pos = pin * 2;
[21:57:55.954]                      // -> [pos <= 0x00000006]
[21:57:55.955]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:57:55.957]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:57:55.957]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:55.958]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:57:55.959]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:57:55.961]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:55.961]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:57:55.963]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:57:55.964]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:55.965]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:57:55.966]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:57:55.967]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:55.968]                  </block>
[21:57:55.969]                  <control if="pin <  8" while="" timeout="0" info="">
[21:57:55.969]                    // if-block "pin <  8"
[21:57:55.970]                      // =>  TRUE
[21:57:55.970]                    <block atomic="false" info="">
[21:57:55.970]                      pos = ((pin    ) & 7) * 4;
[21:57:55.971]                        // -> [pos <= 0x0000000C]
[21:57:55.971]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:57:55.973]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:57:55.975]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:55.975]                    </block>
[21:57:55.975]                    // end if-block "pin <  8"
[21:57:55.976]                  </control>
[21:57:55.976]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:57:55.976]                    // if-block "pin >= 8"
[21:57:55.977]                      // =>  FALSE
[21:57:55.977]                    // skip if-block "pin >= 8"
[21:57:55.978]                  </control>
[21:57:55.978]                </sequence>
[21:57:55.978]            </block>
[21:57:55.979]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:57:55.979]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:57:55.981]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:57:55.981]            </block>
[21:57:55.982]          </sequence>
[21:57:55.982]      </block>
[21:57:55.983]      // end if-block "traceSWO"
[21:57:55.983]    </control>
[21:57:55.984]    <control if="traceTPIU" while="" timeout="0" info="">
[21:57:55.984]      // if-block "traceTPIU"
[21:57:55.984]        // =>  FALSE
[21:57:55.985]      // skip if-block "traceTPIU"
[21:57:55.985]    </control>
[21:57:55.985]  </sequence>
[21:57:55.986]  
[21:58:55.632]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:58:55.632]  
[21:58:55.678]  <debugvars>
[21:58:55.678]    // Pre-defined
[21:58:55.679]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:58:55.679]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:58:55.680]    __dp=0x00000000
[21:58:55.680]    __ap=0x00000000
[21:58:55.681]    __traceout=0x00000001      (SWO Trace)
[21:58:55.681]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:58:55.682]    __FlashAddr=0x00000000
[21:58:55.682]    __FlashLen=0x00000000
[21:58:55.683]    __FlashArg=0x00000000
[21:58:55.683]    __FlashOp=0x00000000
[21:58:55.685]    __Result=0x00000000
[21:58:55.685]    
[21:58:55.685]    // User-defined
[21:58:55.686]    DbgMCU_CR=0x00000007
[21:58:55.686]    DbgMCU_APB1_Fz=0x00000000
[21:58:55.686]    DbgMCU_APB2_Fz=0x00000000
[21:58:55.686]    TraceClk_Pin=0x00040002
[21:58:55.687]    TraceD0_Pin=0x00040003
[21:58:55.687]    TraceD1_Pin=0x00040004
[21:58:55.688]    TraceD2_Pin=0x00040005
[21:58:55.688]    TraceD3_Pin=0x00040006
[21:58:55.688]  </debugvars>
[21:58:55.688]  
[21:58:55.690]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:58:55.690]    <block atomic="false" info="">
[21:58:55.690]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:58:55.690]        // -> [traceSWO <= 0x00000001]
[21:58:55.690]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:58:55.691]        // -> [traceTPIU <= 0x00000000]
[21:58:55.691]    </block>
[21:58:55.691]    <control if="traceSWO" while="" timeout="0" info="">
[21:58:55.691]      // if-block "traceSWO"
[21:58:55.693]        // =>  TRUE
[21:58:55.693]      <block atomic="false" info="">
[21:58:55.693]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:58:55.693]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:58:55.693]            <block atomic="false" info="">
[21:58:55.694]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:58:55.694]                // -> [dbgmcu_val <= 0x00000000]
[21:58:55.695]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:58:55.696]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:58:55.696]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:58:55.697]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:58:55.698]                // -> [dbgmcu_val <= 0x00000007]
[21:58:55.698]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:58:55.699]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:58:55.699]              Sequence("ConfigureTraceSWOPin");
[21:58:55.699]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:58:55.701]                  <block atomic="false" info="">
[21:58:55.701]                    __var pin     = 0;
[21:58:55.701]                      // -> [pin <= 0x00000000]
[21:58:55.702]                    __var port    = 0;
[21:58:55.702]                      // -> [port <= 0x00000000]
[21:58:55.702]                    __var portAdr = 0;
[21:58:55.702]                      // -> [portAdr <= 0x00000000]
[21:58:55.703]                    __var pos     = 0;
[21:58:55.703]                      // -> [pos <= 0x00000000]
[21:58:55.703]                    __var SWO_Pin = 0x00010003;          // PB3
[21:58:55.703]                      // -> [SWO_Pin <= 0x00010003]
[21:58:55.705]                  </block>
[21:58:55.705]                  <block atomic="false" info="configure SWO">
[21:58:55.705]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:58:55.705]                      // -> [pin <= 0x00000003]
[21:58:55.705]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:58:55.706]                      // -> [port <= 0x00000001]
[21:58:55.706]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:58:55.707]                      // -> [portAdr <= 0x40020400]
[21:58:55.707]                    pos = pin * 2;
[21:58:55.708]                      // -> [pos <= 0x00000006]
[21:58:55.709]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:58:55.710]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:58:55.711]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:58:55.712]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:58:55.713]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:58:55.715]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:58:55.715]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:58:55.717]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:58:55.718]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:58:55.719]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:58:55.720]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:58:55.723]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:58:55.723]                  </block>
[21:58:55.723]                  <control if="pin <  8" while="" timeout="0" info="">
[21:58:55.723]                    // if-block "pin <  8"
[21:58:55.723]                      // =>  TRUE
[21:58:55.723]                    <block atomic="false" info="">
[21:58:55.724]                      pos = ((pin    ) & 7) * 4;
[21:58:55.724]                        // -> [pos <= 0x0000000C]
[21:58:55.725]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:58:55.727]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:58:55.728]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:58:55.728]                    </block>
[21:58:55.728]                    // end if-block "pin <  8"
[21:58:55.729]                  </control>
[21:58:55.729]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:58:55.729]                    // if-block "pin >= 8"
[21:58:55.730]                      // =>  FALSE
[21:58:55.731]                    // skip if-block "pin >= 8"
[21:58:55.731]                  </control>
[21:58:55.731]                </sequence>
[21:58:55.732]            </block>
[21:58:55.732]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:58:55.732]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:58:55.734]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:58:55.734]            </block>
[21:58:55.735]          </sequence>
[21:58:55.736]      </block>
[21:58:55.736]      // end if-block "traceSWO"
[21:58:55.736]    </control>
[21:58:55.737]    <control if="traceTPIU" while="" timeout="0" info="">
[21:58:55.737]      // if-block "traceTPIU"
[21:58:55.737]        // =>  FALSE
[21:58:55.738]      // skip if-block "traceTPIU"
[21:58:55.739]    </control>
[21:58:55.739]  </sequence>
[21:58:55.739]  
[22:15:04.085]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[22:15:04.085]  
[22:15:04.125]  <debugvars>
[22:15:04.126]    // Pre-defined
[22:15:04.126]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:15:04.127]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:15:04.127]    __dp=0x00000000
[22:15:04.127]    __ap=0x00000000
[22:15:04.128]    __traceout=0x00000001      (SWO Trace)
[22:15:04.128]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:15:04.128]    __FlashAddr=0x00000000
[22:15:04.128]    __FlashLen=0x00000000
[22:15:04.129]    __FlashArg=0x00000000
[22:15:04.129]    __FlashOp=0x00000000
[22:15:04.130]    __Result=0x00000000
[22:15:04.130]    
[22:15:04.130]    // User-defined
[22:15:04.131]    DbgMCU_CR=0x00000007
[22:15:04.131]    DbgMCU_APB1_Fz=0x00000000
[22:15:04.131]    DbgMCU_APB2_Fz=0x00000000
[22:15:04.132]    TraceClk_Pin=0x00040002
[22:15:04.132]    TraceD0_Pin=0x00040003
[22:15:04.133]    TraceD1_Pin=0x00040004
[22:15:04.133]    TraceD2_Pin=0x00040005
[22:15:04.134]    TraceD3_Pin=0x00040006
[22:15:04.135]  </debugvars>
[22:15:04.135]  
[22:15:04.135]  <sequence name="TraceStop" Pname="" disable="false" info="">
[22:15:04.136]    <block atomic="false" info="">
[22:15:04.136]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[22:15:04.136]        // -> [traceSWO <= 0x00000001]
[22:15:04.137]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[22:15:04.137]        // -> [traceTPIU <= 0x00000000]
[22:15:04.137]    </block>
[22:15:04.138]    <control if="traceSWO" while="" timeout="0" info="">
[22:15:04.138]      // if-block "traceSWO"
[22:15:04.140]        // =>  TRUE
[22:15:04.140]      <block atomic="false" info="">
[22:15:04.140]        Sequence("DisableTraceSWO");
[22:15:04.141]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[22:15:04.141]            <block atomic="false" info="">
[22:15:04.142]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:15:04.143]                // -> [dbgmcu_val <= 0x00000000]
[22:15:04.143]            </block>
[22:15:04.143]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[22:15:04.144]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[22:15:04.146]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:15:04.146]                // -> [dbgmcu_val <= 0x00000007]
[22:15:04.146]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[22:15:04.148]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:04.149]            </block>
[22:15:04.150]          </sequence>
[22:15:04.150]      </block>
[22:15:04.150]      // end if-block "traceSWO"
[22:15:04.151]    </control>
[22:15:04.151]    <control if="traceTPIU" while="" timeout="0" info="">
[22:15:04.152]      // if-block "traceTPIU"
[22:15:04.152]        // =>  FALSE
[22:15:04.152]      // skip if-block "traceTPIU"
[22:15:04.153]    </control>
[22:15:04.153]  </sequence>
[22:15:04.153]  
[22:15:23.569]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:15:23.569]  
[22:15:23.617]  <debugvars>
[22:15:23.618]    // Pre-defined
[22:15:23.618]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:15:23.619]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[22:15:23.619]    __dp=0x00000000
[22:15:23.620]    __ap=0x00000000
[22:15:23.620]    __traceout=0x00000001      (SWO Trace)
[22:15:23.621]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:15:23.621]    __FlashAddr=0x00000000
[22:15:23.622]    __FlashLen=0x00000000
[22:15:23.622]    __FlashArg=0x00000000
[22:15:23.623]    __FlashOp=0x00000000
[22:15:23.623]    __Result=0x00000000
[22:15:23.624]    
[22:15:23.624]    // User-defined
[22:15:23.624]    DbgMCU_CR=0x00000007
[22:15:23.625]    DbgMCU_APB1_Fz=0x00000000
[22:15:23.625]    DbgMCU_APB2_Fz=0x00000000
[22:15:23.626]    TraceClk_Pin=0x00040002
[22:15:23.626]    TraceD0_Pin=0x00040003
[22:15:23.626]    TraceD1_Pin=0x00040004
[22:15:23.627]    TraceD2_Pin=0x00040005
[22:15:23.627]    TraceD3_Pin=0x00040006
[22:15:23.627]  </debugvars>
[22:15:23.628]  
[22:15:23.628]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:15:23.629]    <block atomic="false" info="">
[22:15:23.629]      Sequence("CheckID");
[22:15:23.630]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:15:23.630]          <block atomic="false" info="">
[22:15:23.631]            __var pidr1 = 0;
[22:15:23.631]              // -> [pidr1 <= 0x00000000]
[22:15:23.632]            __var pidr2 = 0;
[22:15:23.632]              // -> [pidr2 <= 0x00000000]
[22:15:23.633]            __var jep106id = 0;
[22:15:23.633]              // -> [jep106id <= 0x00000000]
[22:15:23.634]            __var ROMTableBase = 0;
[22:15:23.634]              // -> [ROMTableBase <= 0x00000000]
[22:15:23.634]            __ap = 0;      // AHB-AP
[22:15:23.635]              // -> [__ap <= 0x00000000]
[22:15:23.635]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:15:23.637]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[22:15:23.637]              // -> [ROMTableBase <= 0xE00FF000]
[22:15:23.637]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:15:23.639]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:15:23.640]              // -> [pidr1 <= 0x00000004]
[22:15:23.641]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:15:23.643]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[22:15:23.644]              // -> [pidr2 <= 0x0000000A]
[22:15:23.644]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:15:23.645]              // -> [jep106id <= 0x00000020]
[22:15:23.646]          </block>
[22:15:23.646]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:15:23.647]            // if-block "jep106id != 0x20"
[22:15:23.647]              // =>  FALSE
[22:15:23.648]            // skip if-block "jep106id != 0x20"
[22:15:23.648]          </control>
[22:15:23.649]        </sequence>
[22:15:23.649]    </block>
[22:15:23.650]  </sequence>
[22:15:23.650]  
[22:15:23.651]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:15:23.651]  
[22:15:23.652]  <debugvars>
[22:15:23.652]    // Pre-defined
[22:15:23.653]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:15:23.653]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[22:15:23.654]    __dp=0x00000000
[22:15:23.654]    __ap=0x00000000
[22:15:23.655]    __traceout=0x00000001      (SWO Trace)
[22:15:23.655]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:15:23.656]    __FlashAddr=0x00000000
[22:15:23.656]    __FlashLen=0x00000000
[22:15:23.656]    __FlashArg=0x00000000
[22:15:23.657]    __FlashOp=0x00000000
[22:15:23.658]    __Result=0x00000000
[22:15:23.658]    
[22:15:23.658]    // User-defined
[22:15:23.658]    DbgMCU_CR=0x00000007
[22:15:23.658]    DbgMCU_APB1_Fz=0x00000000
[22:15:23.658]    DbgMCU_APB2_Fz=0x00000000
[22:15:23.659]    TraceClk_Pin=0x00040002
[22:15:23.659]    TraceD0_Pin=0x00040003
[22:15:23.660]    TraceD1_Pin=0x00040004
[22:15:23.661]    TraceD2_Pin=0x00040005
[22:15:23.661]    TraceD3_Pin=0x00040006
[22:15:23.662]  </debugvars>
[22:15:23.663]  
[22:15:23.663]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:15:23.664]    <block atomic="false" info="">
[22:15:23.664]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:15:23.667]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:23.667]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:15:23.669]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:23.670]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:15:23.672]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:23.672]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:15:23.674]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:23.675]    </block>
[22:15:23.675]  </sequence>
[22:15:23.675]  
[22:15:26.325]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:15:26.325]  
[22:15:26.373]  <debugvars>
[22:15:26.374]    // Pre-defined
[22:15:26.374]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:15:26.375]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:15:26.375]    __dp=0x00000000
[22:15:26.375]    __ap=0x00000000
[22:15:26.376]    __traceout=0x00000001      (SWO Trace)
[22:15:26.376]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:15:26.377]    __FlashAddr=0x00000000
[22:15:26.377]    __FlashLen=0x00000000
[22:15:26.378]    __FlashArg=0x00000000
[22:15:26.379]    __FlashOp=0x00000000
[22:15:26.379]    __Result=0x00000000
[22:15:26.379]    
[22:15:26.379]    // User-defined
[22:15:26.380]    DbgMCU_CR=0x00000007
[22:15:26.380]    DbgMCU_APB1_Fz=0x00000000
[22:15:26.381]    DbgMCU_APB2_Fz=0x00000000
[22:15:26.381]    TraceClk_Pin=0x00040002
[22:15:26.382]    TraceD0_Pin=0x00040003
[22:15:26.382]    TraceD1_Pin=0x00040004
[22:15:26.383]    TraceD2_Pin=0x00040005
[22:15:26.383]    TraceD3_Pin=0x00040006
[22:15:26.384]  </debugvars>
[22:15:26.384]  
[22:15:26.385]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:15:26.385]    <block atomic="false" info="">
[22:15:26.386]      Sequence("CheckID");
[22:15:26.386]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:15:26.387]          <block atomic="false" info="">
[22:15:26.387]            __var pidr1 = 0;
[22:15:26.388]              // -> [pidr1 <= 0x00000000]
[22:15:26.388]            __var pidr2 = 0;
[22:15:26.388]              // -> [pidr2 <= 0x00000000]
[22:15:26.389]            __var jep106id = 0;
[22:15:26.389]              // -> [jep106id <= 0x00000000]
[22:15:26.389]            __var ROMTableBase = 0;
[22:15:26.390]              // -> [ROMTableBase <= 0x00000000]
[22:15:26.390]            __ap = 0;      // AHB-AP
[22:15:26.390]              // -> [__ap <= 0x00000000]
[22:15:26.391]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:15:26.392]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.393]              // -> [ROMTableBase <= 0xE00FF000]
[22:15:26.393]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:15:26.395]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.396]              // -> [pidr1 <= 0x00000004]
[22:15:26.396]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:15:26.397]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.398]              // -> [pidr2 <= 0x0000000A]
[22:15:26.398]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:15:26.399]              // -> [jep106id <= 0x00000020]
[22:15:26.399]          </block>
[22:15:26.400]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:15:26.400]            // if-block "jep106id != 0x20"
[22:15:26.401]              // =>  FALSE
[22:15:26.401]            // skip if-block "jep106id != 0x20"
[22:15:26.401]          </control>
[22:15:26.402]        </sequence>
[22:15:26.402]    </block>
[22:15:26.403]  </sequence>
[22:15:26.403]  
[22:15:26.404]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:15:26.404]  
[22:15:26.404]  <debugvars>
[22:15:26.405]    // Pre-defined
[22:15:26.405]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:15:26.405]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:15:26.406]    __dp=0x00000000
[22:15:26.406]    __ap=0x00000000
[22:15:26.407]    __traceout=0x00000001      (SWO Trace)
[22:15:26.407]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:15:26.407]    __FlashAddr=0x00000000
[22:15:26.408]    __FlashLen=0x00000000
[22:15:26.408]    __FlashArg=0x00000000
[22:15:26.409]    __FlashOp=0x00000000
[22:15:26.409]    __Result=0x00000000
[22:15:26.410]    
[22:15:26.410]    // User-defined
[22:15:26.410]    DbgMCU_CR=0x00000007
[22:15:26.411]    DbgMCU_APB1_Fz=0x00000000
[22:15:26.411]    DbgMCU_APB2_Fz=0x00000000
[22:15:26.411]    TraceClk_Pin=0x00040002
[22:15:26.412]    TraceD0_Pin=0x00040003
[22:15:26.412]    TraceD1_Pin=0x00040004
[22:15:26.413]    TraceD2_Pin=0x00040005
[22:15:26.413]    TraceD3_Pin=0x00040006
[22:15:26.414]  </debugvars>
[22:15:26.414]  
[22:15:26.415]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:15:26.415]    <block atomic="false" info="">
[22:15:26.416]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:15:26.418]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.418]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:15:26.420]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.421]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:15:26.422]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.423]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:15:26.424]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.425]    </block>
[22:15:26.425]  </sequence>
[22:15:26.426]  
[22:15:26.483]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[22:15:26.483]  
[22:15:26.484]  <debugvars>
[22:15:26.484]    // Pre-defined
[22:15:26.485]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:15:26.485]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:15:26.486]    __dp=0x00000000
[22:15:26.486]    __ap=0x00000000
[22:15:26.486]    __traceout=0x00000001      (SWO Trace)
[22:15:26.487]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:15:26.487]    __FlashAddr=0x00000000
[22:15:26.488]    __FlashLen=0x00000000
[22:15:26.488]    __FlashArg=0x00000000
[22:15:26.489]    __FlashOp=0x00000000
[22:15:26.489]    __Result=0x00000000
[22:15:26.490]    
[22:15:26.490]    // User-defined
[22:15:26.490]    DbgMCU_CR=0x00000007
[22:15:26.490]    DbgMCU_APB1_Fz=0x00000000
[22:15:26.491]    DbgMCU_APB2_Fz=0x00000000
[22:15:26.491]    TraceClk_Pin=0x00040002
[22:15:26.492]    TraceD0_Pin=0x00040003
[22:15:26.492]    TraceD1_Pin=0x00040004
[22:15:26.493]    TraceD2_Pin=0x00040005
[22:15:26.494]    TraceD3_Pin=0x00040006
[22:15:26.494]  </debugvars>
[22:15:26.495]  
[22:15:26.495]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:15:26.496]    <block atomic="false" info="">
[22:15:26.496]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:15:26.497]        // -> [traceSWO <= 0x00000001]
[22:15:26.497]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:15:26.498]        // -> [traceTPIU <= 0x00000000]
[22:15:26.498]    </block>
[22:15:26.499]    <control if="traceSWO" while="" timeout="0" info="">
[22:15:26.499]      // if-block "traceSWO"
[22:15:26.499]        // =>  TRUE
[22:15:26.500]      <block atomic="false" info="">
[22:15:26.500]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:15:26.500]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:15:26.501]            <block atomic="false" info="">
[22:15:26.501]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:15:26.502]                // -> [dbgmcu_val <= 0x00000000]
[22:15:26.502]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:15:26.502]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:15:26.503]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:15:26.505]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.505]                // -> [dbgmcu_val <= 0x00000007]
[22:15:26.506]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:15:26.506]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:15:26.507]              Sequence("ConfigureTraceSWOPin");
[22:15:26.507]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:15:26.508]                  <block atomic="false" info="">
[22:15:26.508]                    __var pin     = 0;
[22:15:26.509]                      // -> [pin <= 0x00000000]
[22:15:26.509]                    __var port    = 0;
[22:15:26.510]                      // -> [port <= 0x00000000]
[22:15:26.510]                    __var portAdr = 0;
[22:15:26.511]                      // -> [portAdr <= 0x00000000]
[22:15:26.511]                    __var pos     = 0;
[22:15:26.512]                      // -> [pos <= 0x00000000]
[22:15:26.512]                    __var SWO_Pin = 0x00010003;          // PB3
[22:15:26.512]                      // -> [SWO_Pin <= 0x00010003]
[22:15:26.513]                  </block>
[22:15:26.513]                  <block atomic="false" info="configure SWO">
[22:15:26.513]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:15:26.514]                      // -> [pin <= 0x00000003]
[22:15:26.514]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:15:26.514]                      // -> [port <= 0x00000001]
[22:15:26.515]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:15:26.515]                      // -> [portAdr <= 0x40020400]
[22:15:26.516]                    pos = pin * 2;
[22:15:26.516]                      // -> [pos <= 0x00000006]
[22:15:26.516]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:15:26.518]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.520]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.521]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:15:26.522]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.524]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.524]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:15:26.526]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.528]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.528]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:15:26.530]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.532]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.532]                  </block>
[22:15:26.533]                  <control if="pin <  8" while="" timeout="0" info="">
[22:15:26.533]                    // if-block "pin <  8"
[22:15:26.534]                      // =>  TRUE
[22:15:26.534]                    <block atomic="false" info="">
[22:15:26.534]                      pos = ((pin    ) & 7) * 4;
[22:15:26.535]                        // -> [pos <= 0x0000000C]
[22:15:26.535]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:15:26.537]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.539]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.539]                    </block>
[22:15:26.540]                    // end if-block "pin <  8"
[22:15:26.540]                  </control>
[22:15:26.540]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:15:26.541]                    // if-block "pin >= 8"
[22:15:26.541]                      // =>  FALSE
[22:15:26.542]                    // skip if-block "pin >= 8"
[22:15:26.542]                  </control>
[22:15:26.542]                </sequence>
[22:15:26.543]            </block>
[22:15:26.543]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:15:26.543]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:15:26.545]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.546]            </block>
[22:15:26.546]          </sequence>
[22:15:26.546]      </block>
[22:15:26.547]      // end if-block "traceSWO"
[22:15:26.547]    </control>
[22:15:26.547]    <control if="traceTPIU" while="" timeout="0" info="">
[22:15:26.548]      // if-block "traceTPIU"
[22:15:26.548]        // =>  FALSE
[22:15:26.549]      // skip if-block "traceTPIU"
[22:15:26.549]    </control>
[22:15:26.550]  </sequence>
[22:15:26.550]  
[22:15:26.569]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:15:26.569]  
[22:15:26.570]  <debugvars>
[22:15:26.570]    // Pre-defined
[22:15:26.572]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:15:26.573]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:15:26.573]    __dp=0x00000000
[22:15:26.574]    __ap=0x00000000
[22:15:26.574]    __traceout=0x00000001      (SWO Trace)
[22:15:26.574]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:15:26.574]    __FlashAddr=0x00000000
[22:15:26.575]    __FlashLen=0x00000000
[22:15:26.575]    __FlashArg=0x00000000
[22:15:26.575]    __FlashOp=0x00000000
[22:15:26.577]    __Result=0x00000000
[22:15:26.577]    
[22:15:26.577]    // User-defined
[22:15:26.577]    DbgMCU_CR=0x00000007
[22:15:26.577]    DbgMCU_APB1_Fz=0x00000000
[22:15:26.578]    DbgMCU_APB2_Fz=0x00000000
[22:15:26.579]    TraceClk_Pin=0x00040002
[22:15:26.579]    TraceD0_Pin=0x00040003
[22:15:26.580]    TraceD1_Pin=0x00040004
[22:15:26.580]    TraceD2_Pin=0x00040005
[22:15:26.581]    TraceD3_Pin=0x00040006
[22:15:26.581]  </debugvars>
[22:15:26.582]  
[22:15:26.582]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:15:26.582]    <block atomic="false" info="">
[22:15:26.584]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:15:26.584]        // -> [traceSWO <= 0x00000001]
[22:15:26.584]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:15:26.584]        // -> [traceTPIU <= 0x00000000]
[22:15:26.586]    </block>
[22:15:26.586]    <control if="traceSWO" while="" timeout="0" info="">
[22:15:26.586]      // if-block "traceSWO"
[22:15:26.586]        // =>  TRUE
[22:15:26.586]      <block atomic="false" info="">
[22:15:26.588]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:15:26.588]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:15:26.588]            <block atomic="false" info="">
[22:15:26.588]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:15:26.588]                // -> [dbgmcu_val <= 0x00000000]
[22:15:26.588]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:15:26.589]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:15:26.590]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:15:26.592]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.592]                // -> [dbgmcu_val <= 0x00000007]
[22:15:26.592]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:15:26.593]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:15:26.593]              Sequence("ConfigureTraceSWOPin");
[22:15:26.593]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:15:26.594]                  <block atomic="false" info="">
[22:15:26.595]                    __var pin     = 0;
[22:15:26.595]                      // -> [pin <= 0x00000000]
[22:15:26.596]                    __var port    = 0;
[22:15:26.596]                      // -> [port <= 0x00000000]
[22:15:26.597]                    __var portAdr = 0;
[22:15:26.597]                      // -> [portAdr <= 0x00000000]
[22:15:26.597]                    __var pos     = 0;
[22:15:26.599]                      // -> [pos <= 0x00000000]
[22:15:26.599]                    __var SWO_Pin = 0x00010003;          // PB3
[22:15:26.599]                      // -> [SWO_Pin <= 0x00010003]
[22:15:26.599]                  </block>
[22:15:26.599]                  <block atomic="false" info="configure SWO">
[22:15:26.599]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:15:26.601]                      // -> [pin <= 0x00000003]
[22:15:26.601]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:15:26.602]                      // -> [port <= 0x00000001]
[22:15:26.602]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:15:26.603]                      // -> [portAdr <= 0x40020400]
[22:15:26.603]                    pos = pin * 2;
[22:15:26.604]                      // -> [pos <= 0x00000006]
[22:15:26.604]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:15:26.605]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.607]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.607]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:15:26.609]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.611]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.611]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:15:26.614]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.614]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.615]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:15:26.617]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.618]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.619]                  </block>
[22:15:26.619]                  <control if="pin <  8" while="" timeout="0" info="">
[22:15:26.619]                    // if-block "pin <  8"
[22:15:26.620]                      // =>  TRUE
[22:15:26.620]                    <block atomic="false" info="">
[22:15:26.621]                      pos = ((pin    ) & 7) * 4;
[22:15:26.621]                        // -> [pos <= 0x0000000C]
[22:15:26.622]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:15:26.624]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.626]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.626]                    </block>
[22:15:26.627]                    // end if-block "pin <  8"
[22:15:26.627]                  </control>
[22:15:26.628]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:15:26.628]                    // if-block "pin >= 8"
[22:15:26.628]                      // =>  FALSE
[22:15:26.629]                    // skip if-block "pin >= 8"
[22:15:26.629]                  </control>
[22:15:26.630]                </sequence>
[22:15:26.630]            </block>
[22:15:26.631]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:15:26.631]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:15:26.633]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:26.634]            </block>
[22:15:26.634]          </sequence>
[22:15:26.635]      </block>
[22:15:26.635]      // end if-block "traceSWO"
[22:15:26.635]    </control>
[22:15:26.635]    <control if="traceTPIU" while="" timeout="0" info="">
[22:15:26.636]      // if-block "traceTPIU"
[22:15:26.636]        // =>  FALSE
[22:15:26.638]      // skip if-block "traceTPIU"
[22:15:26.638]    </control>
[22:15:26.638]  </sequence>
[22:15:26.638]  
[22:15:27.261]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:15:27.261]  
[22:15:27.309]  <debugvars>
[22:15:27.309]    // Pre-defined
[22:15:27.309]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:15:27.309]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:15:27.309]    __dp=0x00000000
[22:15:27.310]    __ap=0x00000000
[22:15:27.310]    __traceout=0x00000001      (SWO Trace)
[22:15:27.310]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:15:27.310]    __FlashAddr=0x00000000
[22:15:27.311]    __FlashLen=0x00000000
[22:15:27.311]    __FlashArg=0x00000000
[22:15:27.311]    __FlashOp=0x00000000
[22:15:27.311]    __Result=0x00000000
[22:15:27.311]    
[22:15:27.311]    // User-defined
[22:15:27.312]    DbgMCU_CR=0x00000007
[22:15:27.312]    DbgMCU_APB1_Fz=0x00000000
[22:15:27.312]    DbgMCU_APB2_Fz=0x00000000
[22:15:27.312]    TraceClk_Pin=0x00040002
[22:15:27.312]    TraceD0_Pin=0x00040003
[22:15:27.313]    TraceD1_Pin=0x00040004
[22:15:27.313]    TraceD2_Pin=0x00040005
[22:15:27.313]    TraceD3_Pin=0x00040006
[22:15:27.313]  </debugvars>
[22:15:27.314]  
[22:15:27.314]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:15:27.314]    <block atomic="false" info="">
[22:15:27.314]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:15:27.315]        // -> [traceSWO <= 0x00000001]
[22:15:27.315]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:15:27.315]        // -> [traceTPIU <= 0x00000000]
[22:15:27.316]    </block>
[22:15:27.316]    <control if="traceSWO" while="" timeout="0" info="">
[22:15:27.316]      // if-block "traceSWO"
[22:15:27.316]        // =>  TRUE
[22:15:27.316]      <block atomic="false" info="">
[22:15:27.316]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:15:27.316]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:15:27.318]            <block atomic="false" info="">
[22:15:27.318]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:15:27.318]                // -> [dbgmcu_val <= 0x00000000]
[22:15:27.318]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:15:27.318]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:15:27.318]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:15:27.320]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:15:27.321]                // -> [dbgmcu_val <= 0x00000007]
[22:15:27.321]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:15:27.321]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:15:27.321]              Sequence("ConfigureTraceSWOPin");
[22:15:27.322]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:15:27.322]                  <block atomic="false" info="">
[22:15:27.322]                    __var pin     = 0;
[22:15:27.322]                      // -> [pin <= 0x00000000]
[22:15:27.322]                    __var port    = 0;
[22:15:27.322]                      // -> [port <= 0x00000000]
[22:15:27.322]                    __var portAdr = 0;
[22:15:27.323]                      // -> [portAdr <= 0x00000000]
[22:15:27.323]                    __var pos     = 0;
[22:15:27.323]                      // -> [pos <= 0x00000000]
[22:15:27.323]                    __var SWO_Pin = 0x00010003;          // PB3
[22:15:27.325]                      // -> [SWO_Pin <= 0x00010003]
[22:15:27.325]                  </block>
[22:15:27.325]                  <block atomic="false" info="configure SWO">
[22:15:27.325]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:15:27.325]                      // -> [pin <= 0x00000003]
[22:15:27.326]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:15:27.326]                      // -> [port <= 0x00000001]
[22:15:27.327]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:15:27.327]                      // -> [portAdr <= 0x40020400]
[22:15:27.329]                    pos = pin * 2;
[22:15:27.329]                      // -> [pos <= 0x00000006]
[22:15:27.329]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:15:27.330]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:15:27.333]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:27.333]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:15:27.335]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:15:27.336]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:27.336]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:15:27.337]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:15:27.340]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:27.340]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:15:27.342]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:15:27.344]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:27.344]                  </block>
[22:15:27.345]                  <control if="pin <  8" while="" timeout="0" info="">
[22:15:27.345]                    // if-block "pin <  8"
[22:15:27.347]                      // =>  TRUE
[22:15:27.347]                    <block atomic="false" info="">
[22:15:27.347]                      pos = ((pin    ) & 7) * 4;
[22:15:27.347]                        // -> [pos <= 0x0000000C]
[22:15:27.347]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:15:27.350]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:15:27.352]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:27.352]                    </block>
[22:15:27.352]                    // end if-block "pin <  8"
[22:15:27.352]                  </control>
[22:15:27.354]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:15:27.354]                    // if-block "pin >= 8"
[22:15:27.354]                      // =>  FALSE
[22:15:27.354]                    // skip if-block "pin >= 8"
[22:15:27.354]                  </control>
[22:15:27.355]                </sequence>
[22:15:27.356]            </block>
[22:15:27.356]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:15:27.356]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:15:27.358]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:15:27.358]            </block>
[22:15:27.358]          </sequence>
[22:15:27.360]      </block>
[22:15:27.360]      // end if-block "traceSWO"
[22:15:27.360]    </control>
[22:15:27.360]    <control if="traceTPIU" while="" timeout="0" info="">
[22:15:27.361]      // if-block "traceTPIU"
[22:15:27.361]        // =>  FALSE
[22:15:27.362]      // skip if-block "traceTPIU"
[22:15:27.362]    </control>
[22:15:27.363]  </sequence>
[22:15:27.364]  
[22:16:12.441]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:16:12.441]  
[22:16:12.488]  <debugvars>
[22:16:12.489]    // Pre-defined
[22:16:12.489]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:16:12.490]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:16:12.490]    __dp=0x00000000
[22:16:12.491]    __ap=0x00000000
[22:16:12.491]    __traceout=0x00000001      (SWO Trace)
[22:16:12.492]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:16:12.492]    __FlashAddr=0x00000000
[22:16:12.492]    __FlashLen=0x00000000
[22:16:12.492]    __FlashArg=0x00000000
[22:16:12.493]    __FlashOp=0x00000000
[22:16:12.493]    __Result=0x00000000
[22:16:12.493]    
[22:16:12.493]    // User-defined
[22:16:12.494]    DbgMCU_CR=0x00000007
[22:16:12.494]    DbgMCU_APB1_Fz=0x00000000
[22:16:12.495]    DbgMCU_APB2_Fz=0x00000000
[22:16:12.495]    TraceClk_Pin=0x00040002
[22:16:12.495]    TraceD0_Pin=0x00040003
[22:16:12.496]    TraceD1_Pin=0x00040004
[22:16:12.496]    TraceD2_Pin=0x00040005
[22:16:12.496]    TraceD3_Pin=0x00040006
[22:16:12.497]  </debugvars>
[22:16:12.497]  
[22:16:12.498]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:16:12.498]    <block atomic="false" info="">
[22:16:12.499]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:16:12.499]        // -> [traceSWO <= 0x00000001]
[22:16:12.500]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:16:12.500]        // -> [traceTPIU <= 0x00000000]
[22:16:12.501]    </block>
[22:16:12.501]    <control if="traceSWO" while="" timeout="0" info="">
[22:16:12.502]      // if-block "traceSWO"
[22:16:12.502]        // =>  TRUE
[22:16:12.503]      <block atomic="false" info="">
[22:16:12.503]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:16:12.504]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:16:12.504]            <block atomic="false" info="">
[22:16:12.504]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:16:12.505]                // -> [dbgmcu_val <= 0x00000000]
[22:16:12.505]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:16:12.505]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:16:12.506]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:16:12.508]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:16:12.508]                // -> [dbgmcu_val <= 0x00000007]
[22:16:12.509]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:16:12.509]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:16:12.509]              Sequence("ConfigureTraceSWOPin");
[22:16:12.509]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:16:12.509]                  <block atomic="false" info="">
[22:16:12.510]                    __var pin     = 0;
[22:16:12.510]                      // -> [pin <= 0x00000000]
[22:16:12.510]                    __var port    = 0;
[22:16:12.511]                      // -> [port <= 0x00000000]
[22:16:12.511]                    __var portAdr = 0;
[22:16:12.512]                      // -> [portAdr <= 0x00000000]
[22:16:12.512]                    __var pos     = 0;
[22:16:12.512]                      // -> [pos <= 0x00000000]
[22:16:12.513]                    __var SWO_Pin = 0x00010003;          // PB3
[22:16:12.513]                      // -> [SWO_Pin <= 0x00010003]
[22:16:12.514]                  </block>
[22:16:12.514]                  <block atomic="false" info="configure SWO">
[22:16:12.514]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:16:12.515]                      // -> [pin <= 0x00000003]
[22:16:12.515]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:16:12.515]                      // -> [port <= 0x00000001]
[22:16:12.515]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:16:12.516]                      // -> [portAdr <= 0x40020400]
[22:16:12.516]                    pos = pin * 2;
[22:16:12.517]                      // -> [pos <= 0x00000006]
[22:16:12.517]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:16:12.519]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:16:12.520]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:12.521]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:16:12.522]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:16:12.525]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:12.525]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:16:12.526]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:16:12.528]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:12.528]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:16:12.530]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:16:12.531]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:12.532]                  </block>
[22:16:12.532]                  <control if="pin <  8" while="" timeout="0" info="">
[22:16:12.532]                    // if-block "pin <  8"
[22:16:12.533]                      // =>  TRUE
[22:16:12.533]                    <block atomic="false" info="">
[22:16:12.534]                      pos = ((pin    ) & 7) * 4;
[22:16:12.534]                        // -> [pos <= 0x0000000C]
[22:16:12.534]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:16:12.536]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:16:12.537]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:12.538]                    </block>
[22:16:12.538]                    // end if-block "pin <  8"
[22:16:12.538]                  </control>
[22:16:12.539]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:16:12.539]                    // if-block "pin >= 8"
[22:16:12.539]                      // =>  FALSE
[22:16:12.540]                    // skip if-block "pin >= 8"
[22:16:12.540]                  </control>
[22:16:12.540]                </sequence>
[22:16:12.541]            </block>
[22:16:12.541]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:16:12.541]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:16:12.543]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:12.543]            </block>
[22:16:12.544]          </sequence>
[22:16:12.544]      </block>
[22:16:12.544]      // end if-block "traceSWO"
[22:16:12.545]    </control>
[22:16:12.545]    <control if="traceTPIU" while="" timeout="0" info="">
[22:16:12.545]      // if-block "traceTPIU"
[22:16:12.546]        // =>  FALSE
[22:16:12.546]      // skip if-block "traceTPIU"
[22:16:12.546]    </control>
[22:16:12.547]  </sequence>
[22:16:12.547]  
[22:16:37.069]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:16:37.069]  
[22:16:37.070]  <debugvars>
[22:16:37.070]    // Pre-defined
[22:16:37.070]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:16:37.071]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:16:37.071]    __dp=0x00000000
[22:16:37.072]    __ap=0x00000000
[22:16:37.073]    __traceout=0x00000001      (SWO Trace)
[22:16:37.073]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:16:37.073]    __FlashAddr=0x00000000
[22:16:37.073]    __FlashLen=0x00000000
[22:16:37.074]    __FlashArg=0x00000000
[22:16:37.074]    __FlashOp=0x00000000
[22:16:37.075]    __Result=0x00000000
[22:16:37.075]    
[22:16:37.075]    // User-defined
[22:16:37.076]    DbgMCU_CR=0x00000007
[22:16:37.076]    DbgMCU_APB1_Fz=0x00000000
[22:16:37.077]    DbgMCU_APB2_Fz=0x00000000
[22:16:37.077]    TraceClk_Pin=0x00040002
[22:16:37.078]    TraceD0_Pin=0x00040003
[22:16:37.078]    TraceD1_Pin=0x00040004
[22:16:37.079]    TraceD2_Pin=0x00040005
[22:16:37.079]    TraceD3_Pin=0x00040006
[22:16:37.079]  </debugvars>
[22:16:37.080]  
[22:16:37.080]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:16:37.081]    <block atomic="false" info="">
[22:16:37.081]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:16:37.082]        // -> [traceSWO <= 0x00000001]
[22:16:37.082]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:16:37.082]        // -> [traceTPIU <= 0x00000000]
[22:16:37.083]    </block>
[22:16:37.083]    <control if="traceSWO" while="" timeout="0" info="">
[22:16:37.083]      // if-block "traceSWO"
[22:16:37.083]        // =>  TRUE
[22:16:37.084]      <block atomic="false" info="">
[22:16:37.084]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:16:37.084]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:16:37.085]            <block atomic="false" info="">
[22:16:37.085]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:16:37.086]                // -> [dbgmcu_val <= 0x00000000]
[22:16:37.086]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:16:37.086]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:16:37.086]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:16:37.088]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:16:37.088]                // -> [dbgmcu_val <= 0x00000007]
[22:16:37.089]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:16:37.089]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:16:37.089]              Sequence("ConfigureTraceSWOPin");
[22:16:37.090]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:16:37.090]                  <block atomic="false" info="">
[22:16:37.091]                    __var pin     = 0;
[22:16:37.092]                      // -> [pin <= 0x00000000]
[22:16:37.092]                    __var port    = 0;
[22:16:37.092]                      // -> [port <= 0x00000000]
[22:16:37.092]                    __var portAdr = 0;
[22:16:37.093]                      // -> [portAdr <= 0x00000000]
[22:16:37.093]                    __var pos     = 0;
[22:16:37.093]                      // -> [pos <= 0x00000000]
[22:16:37.094]                    __var SWO_Pin = 0x00010003;          // PB3
[22:16:37.094]                      // -> [SWO_Pin <= 0x00010003]
[22:16:37.095]                  </block>
[22:16:37.095]                  <block atomic="false" info="configure SWO">
[22:16:37.095]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:16:37.096]                      // -> [pin <= 0x00000003]
[22:16:37.096]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:16:37.097]                      // -> [port <= 0x00000001]
[22:16:37.098]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:16:37.098]                      // -> [portAdr <= 0x40020400]
[22:16:37.098]                    pos = pin * 2;
[22:16:37.098]                      // -> [pos <= 0x00000006]
[22:16:37.099]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:16:37.100]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:16:37.102]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:37.102]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:16:37.104]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:16:37.105]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:37.106]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:16:37.107]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:16:37.109]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:37.109]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:16:37.112]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:16:37.112]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:37.113]                  </block>
[22:16:37.113]                  <control if="pin <  8" while="" timeout="0" info="">
[22:16:37.114]                    // if-block "pin <  8"
[22:16:37.114]                      // =>  TRUE
[22:16:37.114]                    <block atomic="false" info="">
[22:16:37.115]                      pos = ((pin    ) & 7) * 4;
[22:16:37.115]                        // -> [pos <= 0x0000000C]
[22:16:37.115]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:16:37.117]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:16:37.118]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:37.119]                    </block>
[22:16:37.119]                    // end if-block "pin <  8"
[22:16:37.120]                  </control>
[22:16:37.120]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:16:37.121]                    // if-block "pin >= 8"
[22:16:37.121]                      // =>  FALSE
[22:16:37.122]                    // skip if-block "pin >= 8"
[22:16:37.122]                  </control>
[22:16:37.122]                </sequence>
[22:16:37.123]            </block>
[22:16:37.123]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:16:37.124]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:16:37.125]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:37.126]            </block>
[22:16:37.126]          </sequence>
[22:16:37.127]      </block>
[22:16:37.127]      // end if-block "traceSWO"
[22:16:37.128]    </control>
[22:16:37.128]    <control if="traceTPIU" while="" timeout="0" info="">
[22:16:37.129]      // if-block "traceTPIU"
[22:16:37.129]        // =>  FALSE
[22:16:37.130]      // skip if-block "traceTPIU"
[22:16:37.130]    </control>
[22:16:37.130]  </sequence>
[22:16:37.131]  
[22:16:44.554]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:16:44.554]  
[22:16:44.601]  <debugvars>
[22:16:44.601]    // Pre-defined
[22:16:44.602]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:16:44.603]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:16:44.603]    __dp=0x00000000
[22:16:44.603]    __ap=0x00000000
[22:16:44.604]    __traceout=0x00000001      (SWO Trace)
[22:16:44.605]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:16:44.605]    __FlashAddr=0x00000000
[22:16:44.605]    __FlashLen=0x00000000
[22:16:44.605]    __FlashArg=0x00000000
[22:16:44.606]    __FlashOp=0x00000000
[22:16:44.606]    __Result=0x00000000
[22:16:44.607]    
[22:16:44.607]    // User-defined
[22:16:44.607]    DbgMCU_CR=0x00000007
[22:16:44.608]    DbgMCU_APB1_Fz=0x00000000
[22:16:44.608]    DbgMCU_APB2_Fz=0x00000000
[22:16:44.609]    TraceClk_Pin=0x00040002
[22:16:44.609]    TraceD0_Pin=0x00040003
[22:16:44.610]    TraceD1_Pin=0x00040004
[22:16:44.610]    TraceD2_Pin=0x00040005
[22:16:44.610]    TraceD3_Pin=0x00040006
[22:16:44.610]  </debugvars>
[22:16:44.611]  
[22:16:44.611]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:16:44.611]    <block atomic="false" info="">
[22:16:44.612]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:16:44.612]        // -> [traceSWO <= 0x00000001]
[22:16:44.613]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:16:44.613]        // -> [traceTPIU <= 0x00000000]
[22:16:44.613]    </block>
[22:16:44.615]    <control if="traceSWO" while="" timeout="0" info="">
[22:16:44.615]      // if-block "traceSWO"
[22:16:44.615]        // =>  TRUE
[22:16:44.615]      <block atomic="false" info="">
[22:16:44.616]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:16:44.616]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:16:44.616]            <block atomic="false" info="">
[22:16:44.616]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:16:44.617]                // -> [dbgmcu_val <= 0x00000000]
[22:16:44.617]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:16:44.617]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:16:44.618]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:16:44.619]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:16:44.619]                // -> [dbgmcu_val <= 0x00000007]
[22:16:44.619]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:16:44.620]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:16:44.620]              Sequence("ConfigureTraceSWOPin");
[22:16:44.621]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:16:44.621]                  <block atomic="false" info="">
[22:16:44.622]                    __var pin     = 0;
[22:16:44.622]                      // -> [pin <= 0x00000000]
[22:16:44.623]                    __var port    = 0;
[22:16:44.623]                      // -> [port <= 0x00000000]
[22:16:44.624]                    __var portAdr = 0;
[22:16:44.624]                      // -> [portAdr <= 0x00000000]
[22:16:44.624]                    __var pos     = 0;
[22:16:44.625]                      // -> [pos <= 0x00000000]
[22:16:44.625]                    __var SWO_Pin = 0x00010003;          // PB3
[22:16:44.626]                      // -> [SWO_Pin <= 0x00010003]
[22:16:44.626]                  </block>
[22:16:44.626]                  <block atomic="false" info="configure SWO">
[22:16:44.627]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:16:44.627]                      // -> [pin <= 0x00000003]
[22:16:44.628]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:16:44.629]                      // -> [port <= 0x00000001]
[22:16:44.629]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:16:44.629]                      // -> [portAdr <= 0x40020400]
[22:16:44.629]                    pos = pin * 2;
[22:16:44.629]                      // -> [pos <= 0x00000006]
[22:16:44.629]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:16:44.631]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:16:44.633]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:44.633]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:16:44.635]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:16:44.636]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:44.636]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:16:44.638]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:16:44.640]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:44.640]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:16:44.641]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:16:44.643]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:44.643]                  </block>
[22:16:44.644]                  <control if="pin <  8" while="" timeout="0" info="">
[22:16:44.644]                    // if-block "pin <  8"
[22:16:44.645]                      // =>  TRUE
[22:16:44.645]                    <block atomic="false" info="">
[22:16:44.646]                      pos = ((pin    ) & 7) * 4;
[22:16:44.646]                        // -> [pos <= 0x0000000C]
[22:16:44.646]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:16:44.647]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:16:44.649]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:44.649]                    </block>
[22:16:44.650]                    // end if-block "pin <  8"
[22:16:44.650]                  </control>
[22:16:44.650]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:16:44.651]                    // if-block "pin >= 8"
[22:16:44.651]                      // =>  FALSE
[22:16:44.652]                    // skip if-block "pin >= 8"
[22:16:44.652]                  </control>
[22:16:44.653]                </sequence>
[22:16:44.653]            </block>
[22:16:44.654]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:16:44.654]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:16:44.656]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:44.656]            </block>
[22:16:44.656]          </sequence>
[22:16:44.657]      </block>
[22:16:44.657]      // end if-block "traceSWO"
[22:16:44.657]    </control>
[22:16:44.658]    <control if="traceTPIU" while="" timeout="0" info="">
[22:16:44.659]      // if-block "traceTPIU"
[22:16:44.659]        // =>  FALSE
[22:16:44.660]      // skip if-block "traceTPIU"
[22:16:44.660]    </control>
[22:16:44.660]  </sequence>
[22:16:44.661]  
[22:16:53.944]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:16:53.944]  
[22:16:53.991]  <debugvars>
[22:16:53.992]    // Pre-defined
[22:16:53.992]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:16:53.992]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:16:53.993]    __dp=0x00000000
[22:16:53.993]    __ap=0x00000000
[22:16:53.994]    __traceout=0x00000001      (SWO Trace)
[22:16:53.994]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:16:53.994]    __FlashAddr=0x00000000
[22:16:53.995]    __FlashLen=0x00000000
[22:16:53.995]    __FlashArg=0x00000000
[22:16:53.995]    __FlashOp=0x00000000
[22:16:53.996]    __Result=0x00000000
[22:16:53.996]    
[22:16:53.996]    // User-defined
[22:16:53.996]    DbgMCU_CR=0x00000007
[22:16:53.997]    DbgMCU_APB1_Fz=0x00000000
[22:16:53.997]    DbgMCU_APB2_Fz=0x00000000
[22:16:53.997]    TraceClk_Pin=0x00040002
[22:16:53.998]    TraceD0_Pin=0x00040003
[22:16:53.998]    TraceD1_Pin=0x00040004
[22:16:53.998]    TraceD2_Pin=0x00040005
[22:16:53.999]    TraceD3_Pin=0x00040006
[22:16:53.999]  </debugvars>
[22:16:53.999]  
[22:16:54.000]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:16:54.000]    <block atomic="false" info="">
[22:16:54.000]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:16:54.001]        // -> [traceSWO <= 0x00000001]
[22:16:54.001]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:16:54.002]        // -> [traceTPIU <= 0x00000000]
[22:16:54.002]    </block>
[22:16:54.002]    <control if="traceSWO" while="" timeout="0" info="">
[22:16:54.003]      // if-block "traceSWO"
[22:16:54.003]        // =>  TRUE
[22:16:54.003]      <block atomic="false" info="">
[22:16:54.004]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:16:54.004]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:16:54.004]            <block atomic="false" info="">
[22:16:54.005]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:16:54.005]                // -> [dbgmcu_val <= 0x00000000]
[22:16:54.006]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:16:54.006]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:16:54.007]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:16:54.008]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:16:54.009]                // -> [dbgmcu_val <= 0x00000007]
[22:16:54.009]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:16:54.010]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:16:54.010]              Sequence("ConfigureTraceSWOPin");
[22:16:54.010]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:16:54.011]                  <block atomic="false" info="">
[22:16:54.011]                    __var pin     = 0;
[22:16:54.011]                      // -> [pin <= 0x00000000]
[22:16:54.012]                    __var port    = 0;
[22:16:54.012]                      // -> [port <= 0x00000000]
[22:16:54.012]                    __var portAdr = 0;
[22:16:54.013]                      // -> [portAdr <= 0x00000000]
[22:16:54.013]                    __var pos     = 0;
[22:16:54.013]                      // -> [pos <= 0x00000000]
[22:16:54.014]                    __var SWO_Pin = 0x00010003;          // PB3
[22:16:54.014]                      // -> [SWO_Pin <= 0x00010003]
[22:16:54.014]                  </block>
[22:16:54.015]                  <block atomic="false" info="configure SWO">
[22:16:54.015]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:16:54.016]                      // -> [pin <= 0x00000003]
[22:16:54.016]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:16:54.016]                      // -> [port <= 0x00000001]
[22:16:54.017]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:16:54.017]                      // -> [portAdr <= 0x40020400]
[22:16:54.017]                    pos = pin * 2;
[22:16:54.018]                      // -> [pos <= 0x00000006]
[22:16:54.018]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:16:54.020]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:16:54.021]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:54.022]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:16:54.024]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:16:54.025]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:54.026]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:16:54.027]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:16:54.029]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:54.029]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:16:54.031]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:16:54.032]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:54.033]                  </block>
[22:16:54.033]                  <control if="pin <  8" while="" timeout="0" info="">
[22:16:54.034]                    // if-block "pin <  8"
[22:16:54.035]                      // =>  TRUE
[22:16:54.035]                    <block atomic="false" info="">
[22:16:54.035]                      pos = ((pin    ) & 7) * 4;
[22:16:54.035]                        // -> [pos <= 0x0000000C]
[22:16:54.036]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:16:54.037]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:16:54.039]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:54.039]                    </block>
[22:16:54.040]                    // end if-block "pin <  8"
[22:16:54.040]                  </control>
[22:16:54.040]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:16:54.041]                    // if-block "pin >= 8"
[22:16:54.041]                      // =>  FALSE
[22:16:54.042]                    // skip if-block "pin >= 8"
[22:16:54.042]                  </control>
[22:16:54.043]                </sequence>
[22:16:54.043]            </block>
[22:16:54.043]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:16:54.044]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:16:54.045]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:16:54.046]            </block>
[22:16:54.046]          </sequence>
[22:16:54.047]      </block>
[22:16:54.047]      // end if-block "traceSWO"
[22:16:54.047]    </control>
[22:16:54.047]    <control if="traceTPIU" while="" timeout="0" info="">
[22:16:54.048]      // if-block "traceTPIU"
[22:16:54.048]        // =>  FALSE
[22:16:54.049]      // skip if-block "traceTPIU"
[22:16:54.049]    </control>
[22:16:54.049]  </sequence>
[22:16:54.050]  
[22:17:16.255]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:17:16.255]  
[22:17:16.302]  <debugvars>
[22:17:16.303]    // Pre-defined
[22:17:16.303]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:17:16.303]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:17:16.304]    __dp=0x00000000
[22:17:16.304]    __ap=0x00000000
[22:17:16.305]    __traceout=0x00000001      (SWO Trace)
[22:17:16.305]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:17:16.306]    __FlashAddr=0x00000000
[22:17:16.306]    __FlashLen=0x00000000
[22:17:16.306]    __FlashArg=0x00000000
[22:17:16.307]    __FlashOp=0x00000000
[22:17:16.307]    __Result=0x00000000
[22:17:16.307]    
[22:17:16.307]    // User-defined
[22:17:16.308]    DbgMCU_CR=0x00000007
[22:17:16.308]    DbgMCU_APB1_Fz=0x00000000
[22:17:16.309]    DbgMCU_APB2_Fz=0x00000000
[22:17:16.309]    TraceClk_Pin=0x00040002
[22:17:16.309]    TraceD0_Pin=0x00040003
[22:17:16.309]    TraceD1_Pin=0x00040004
[22:17:16.310]    TraceD2_Pin=0x00040005
[22:17:16.310]    TraceD3_Pin=0x00040006
[22:17:16.311]  </debugvars>
[22:17:16.311]  
[22:17:16.311]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:17:16.312]    <block atomic="false" info="">
[22:17:16.312]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:17:16.312]        // -> [traceSWO <= 0x00000001]
[22:17:16.313]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:17:16.313]        // -> [traceTPIU <= 0x00000000]
[22:17:16.314]    </block>
[22:17:16.314]    <control if="traceSWO" while="" timeout="0" info="">
[22:17:16.314]      // if-block "traceSWO"
[22:17:16.315]        // =>  TRUE
[22:17:16.315]      <block atomic="false" info="">
[22:17:16.316]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:17:16.316]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:17:16.317]            <block atomic="false" info="">
[22:17:16.317]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:17:16.318]                // -> [dbgmcu_val <= 0x00000000]
[22:17:16.318]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:17:16.318]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:17:16.319]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:17:16.320]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:17:16.321]                // -> [dbgmcu_val <= 0x00000007]
[22:17:16.322]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:17:16.322]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:17:16.323]              Sequence("ConfigureTraceSWOPin");
[22:17:16.323]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:17:16.323]                  <block atomic="false" info="">
[22:17:16.324]                    __var pin     = 0;
[22:17:16.324]                      // -> [pin <= 0x00000000]
[22:17:16.324]                    __var port    = 0;
[22:17:16.325]                      // -> [port <= 0x00000000]
[22:17:16.325]                    __var portAdr = 0;
[22:17:16.326]                      // -> [portAdr <= 0x00000000]
[22:17:16.326]                    __var pos     = 0;
[22:17:16.327]                      // -> [pos <= 0x00000000]
[22:17:16.327]                    __var SWO_Pin = 0x00010003;          // PB3
[22:17:16.327]                      // -> [SWO_Pin <= 0x00010003]
[22:17:16.328]                  </block>
[22:17:16.328]                  <block atomic="false" info="configure SWO">
[22:17:16.328]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:17:16.329]                      // -> [pin <= 0x00000003]
[22:17:16.329]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:17:16.330]                      // -> [port <= 0x00000001]
[22:17:16.330]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:17:16.330]                      // -> [portAdr <= 0x40020400]
[22:17:16.331]                    pos = pin * 2;
[22:17:16.331]                      // -> [pos <= 0x00000006]
[22:17:16.332]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:17:16.333]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:17:16.335]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:16.335]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:17:16.336]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:17:16.338]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:16.338]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:17:16.340]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:17:16.341]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:16.342]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:17:16.343]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:17:16.345]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:16.345]                  </block>
[22:17:16.346]                  <control if="pin <  8" while="" timeout="0" info="">
[22:17:16.346]                    // if-block "pin <  8"
[22:17:16.347]                      // =>  TRUE
[22:17:16.347]                    <block atomic="false" info="">
[22:17:16.347]                      pos = ((pin    ) & 7) * 4;
[22:17:16.348]                        // -> [pos <= 0x0000000C]
[22:17:16.348]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:17:16.350]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:17:16.351]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:16.352]                    </block>
[22:17:16.352]                    // end if-block "pin <  8"
[22:17:16.353]                  </control>
[22:17:16.353]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:17:16.354]                    // if-block "pin >= 8"
[22:17:16.354]                      // =>  FALSE
[22:17:16.355]                    // skip if-block "pin >= 8"
[22:17:16.355]                  </control>
[22:17:16.355]                </sequence>
[22:17:16.356]            </block>
[22:17:16.356]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:17:16.356]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:17:16.358]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:16.358]            </block>
[22:17:16.359]          </sequence>
[22:17:16.359]      </block>
[22:17:16.359]      // end if-block "traceSWO"
[22:17:16.359]    </control>
[22:17:16.360]    <control if="traceTPIU" while="" timeout="0" info="">
[22:17:16.360]      // if-block "traceTPIU"
[22:17:16.361]        // =>  FALSE
[22:17:16.361]      // skip if-block "traceTPIU"
[22:17:16.361]    </control>
[22:17:16.362]  </sequence>
[22:17:16.362]  
[22:17:27.213]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:17:27.213]  
[22:17:27.261]  <debugvars>
[22:17:27.261]    // Pre-defined
[22:17:27.261]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:17:27.261]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:17:27.262]    __dp=0x00000000
[22:17:27.263]    __ap=0x00000000
[22:17:27.263]    __traceout=0x00000001      (SWO Trace)
[22:17:27.263]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:17:27.263]    __FlashAddr=0x00000000
[22:17:27.263]    __FlashLen=0x00000000
[22:17:27.263]    __FlashArg=0x00000000
[22:17:27.263]    __FlashOp=0x00000000
[22:17:27.263]    __Result=0x00000000
[22:17:27.264]    
[22:17:27.264]    // User-defined
[22:17:27.264]    DbgMCU_CR=0x00000007
[22:17:27.264]    DbgMCU_APB1_Fz=0x00000000
[22:17:27.265]    DbgMCU_APB2_Fz=0x00000000
[22:17:27.265]    TraceClk_Pin=0x00040002
[22:17:27.265]    TraceD0_Pin=0x00040003
[22:17:27.265]    TraceD1_Pin=0x00040004
[22:17:27.265]    TraceD2_Pin=0x00040005
[22:17:27.266]    TraceD3_Pin=0x00040006
[22:17:27.266]  </debugvars>
[22:17:27.266]  
[22:17:27.266]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:17:27.267]    <block atomic="false" info="">
[22:17:27.267]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:17:27.268]        // -> [traceSWO <= 0x00000001]
[22:17:27.268]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:17:27.268]        // -> [traceTPIU <= 0x00000000]
[22:17:27.268]    </block>
[22:17:27.268]    <control if="traceSWO" while="" timeout="0" info="">
[22:17:27.268]      // if-block "traceSWO"
[22:17:27.268]        // =>  TRUE
[22:17:27.269]      <block atomic="false" info="">
[22:17:27.269]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:17:27.269]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:17:27.269]            <block atomic="false" info="">
[22:17:27.269]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:17:27.269]                // -> [dbgmcu_val <= 0x00000000]
[22:17:27.270]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:17:27.270]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:17:27.270]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:17:27.271]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:17:27.271]                // -> [dbgmcu_val <= 0x00000007]
[22:17:27.272]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:17:27.272]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:17:27.272]              Sequence("ConfigureTraceSWOPin");
[22:17:27.272]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:17:27.272]                  <block atomic="false" info="">
[22:17:27.272]                    __var pin     = 0;
[22:17:27.273]                      // -> [pin <= 0x00000000]
[22:17:27.273]                    __var port    = 0;
[22:17:27.273]                      // -> [port <= 0x00000000]
[22:17:27.274]                    __var portAdr = 0;
[22:17:27.274]                      // -> [portAdr <= 0x00000000]
[22:17:27.274]                    __var pos     = 0;
[22:17:27.274]                      // -> [pos <= 0x00000000]
[22:17:27.275]                    __var SWO_Pin = 0x00010003;          // PB3
[22:17:27.275]                      // -> [SWO_Pin <= 0x00010003]
[22:17:27.275]                  </block>
[22:17:27.276]                  <block atomic="false" info="configure SWO">
[22:17:27.276]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:17:27.276]                      // -> [pin <= 0x00000003]
[22:17:27.276]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:17:27.276]                      // -> [port <= 0x00000001]
[22:17:27.276]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:17:27.277]                      // -> [portAdr <= 0x40020400]
[22:17:27.277]                    pos = pin * 2;
[22:17:27.277]                      // -> [pos <= 0x00000006]
[22:17:27.277]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:17:27.279]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:17:27.279]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:27.279]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:17:27.280]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:17:27.281]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:27.282]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:17:27.282]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:17:27.283]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:27.284]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:17:27.285]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:17:27.286]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:27.286]                  </block>
[22:17:27.286]                  <control if="pin <  8" while="" timeout="0" info="">
[22:17:27.286]                    // if-block "pin <  8"
[22:17:27.287]                      // =>  TRUE
[22:17:27.287]                    <block atomic="false" info="">
[22:17:27.287]                      pos = ((pin    ) & 7) * 4;
[22:17:27.288]                        // -> [pos <= 0x0000000C]
[22:17:27.288]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:17:27.289]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:17:27.290]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:27.290]                    </block>
[22:17:27.290]                    // end if-block "pin <  8"
[22:17:27.290]                  </control>
[22:17:27.291]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:17:27.291]                    // if-block "pin >= 8"
[22:17:27.291]                      // =>  FALSE
[22:17:27.291]                    // skip if-block "pin >= 8"
[22:17:27.292]                  </control>
[22:17:27.292]                </sequence>
[22:17:27.292]            </block>
[22:17:27.292]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:17:27.293]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:17:27.293]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:27.293]            </block>
[22:17:27.293]          </sequence>
[22:17:27.293]      </block>
[22:17:27.293]      // end if-block "traceSWO"
[22:17:27.293]    </control>
[22:17:27.293]    <control if="traceTPIU" while="" timeout="0" info="">
[22:17:27.294]      // if-block "traceTPIU"
[22:17:27.294]        // =>  FALSE
[22:17:27.294]      // skip if-block "traceTPIU"
[22:17:27.294]    </control>
[22:17:27.294]  </sequence>
[22:17:27.294]  
[22:17:35.968]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[22:17:35.968]  
[22:17:36.016]  <debugvars>
[22:17:36.016]    // Pre-defined
[22:17:36.016]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:17:36.016]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:17:36.016]    __dp=0x00000000
[22:17:36.017]    __ap=0x00000000
[22:17:36.017]    __traceout=0x00000001      (SWO Trace)
[22:17:36.017]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:17:36.018]    __FlashAddr=0x00000000
[22:17:36.018]    __FlashLen=0x00000000
[22:17:36.019]    __FlashArg=0x00000000
[22:17:36.019]    __FlashOp=0x00000000
[22:17:36.019]    __Result=0x00000000
[22:17:36.020]    
[22:17:36.020]    // User-defined
[22:17:36.020]    DbgMCU_CR=0x00000007
[22:17:36.020]    DbgMCU_APB1_Fz=0x00000000
[22:17:36.021]    DbgMCU_APB2_Fz=0x00000000
[22:17:36.021]    TraceClk_Pin=0x00040002
[22:17:36.021]    TraceD0_Pin=0x00040003
[22:17:36.022]    TraceD1_Pin=0x00040004
[22:17:36.022]    TraceD2_Pin=0x00040005
[22:17:36.023]    TraceD3_Pin=0x00040006
[22:17:36.023]  </debugvars>
[22:17:36.023]  
[22:17:36.024]  <sequence name="TraceStop" Pname="" disable="false" info="">
[22:17:36.024]    <block atomic="false" info="">
[22:17:36.025]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[22:17:36.025]        // -> [traceSWO <= 0x00000001]
[22:17:36.025]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[22:17:36.026]        // -> [traceTPIU <= 0x00000000]
[22:17:36.026]    </block>
[22:17:36.026]    <control if="traceSWO" while="" timeout="0" info="">
[22:17:36.027]      // if-block "traceSWO"
[22:17:36.028]        // =>  TRUE
[22:17:36.028]      <block atomic="false" info="">
[22:17:36.028]        Sequence("DisableTraceSWO");
[22:17:36.028]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[22:17:36.029]            <block atomic="false" info="">
[22:17:36.029]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:17:36.030]                // -> [dbgmcu_val <= 0x00000000]
[22:17:36.030]            </block>
[22:17:36.030]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[22:17:36.031]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[22:17:36.032]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:17:36.033]                // -> [dbgmcu_val <= 0x00000007]
[22:17:36.033]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[22:17:36.035]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:36.035]            </block>
[22:17:36.036]          </sequence>
[22:17:36.036]      </block>
[22:17:36.037]      // end if-block "traceSWO"
[22:17:36.037]    </control>
[22:17:36.037]    <control if="traceTPIU" while="" timeout="0" info="">
[22:17:36.038]      // if-block "traceTPIU"
[22:17:36.038]        // =>  FALSE
[22:17:36.039]      // skip if-block "traceTPIU"
[22:17:36.039]    </control>
[22:17:36.039]  </sequence>
[22:17:36.040]  
[22:17:47.069]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:17:47.069]  
[22:17:47.116]  <debugvars>
[22:17:47.116]    // Pre-defined
[22:17:47.117]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:17:47.117]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[22:17:47.117]    __dp=0x00000000
[22:17:47.117]    __ap=0x00000000
[22:17:47.118]    __traceout=0x00000001      (SWO Trace)
[22:17:47.118]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:17:47.119]    __FlashAddr=0x00000000
[22:17:47.119]    __FlashLen=0x00000000
[22:17:47.120]    __FlashArg=0x00000000
[22:17:47.120]    __FlashOp=0x00000000
[22:17:47.120]    __Result=0x00000000
[22:17:47.121]    
[22:17:47.121]    // User-defined
[22:17:47.121]    DbgMCU_CR=0x00000007
[22:17:47.122]    DbgMCU_APB1_Fz=0x00000000
[22:17:47.122]    DbgMCU_APB2_Fz=0x00000000
[22:17:47.123]    TraceClk_Pin=0x00040002
[22:17:47.123]    TraceD0_Pin=0x00040003
[22:17:47.124]    TraceD1_Pin=0x00040004
[22:17:47.124]    TraceD2_Pin=0x00040005
[22:17:47.124]    TraceD3_Pin=0x00040006
[22:17:47.124]  </debugvars>
[22:17:47.125]  
[22:17:47.126]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:17:47.126]    <block atomic="false" info="">
[22:17:47.126]      Sequence("CheckID");
[22:17:47.126]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:17:47.126]          <block atomic="false" info="">
[22:17:47.128]            __var pidr1 = 0;
[22:17:47.128]              // -> [pidr1 <= 0x00000000]
[22:17:47.129]            __var pidr2 = 0;
[22:17:47.129]              // -> [pidr2 <= 0x00000000]
[22:17:47.129]            __var jep106id = 0;
[22:17:47.129]              // -> [jep106id <= 0x00000000]
[22:17:47.130]            __var ROMTableBase = 0;
[22:17:47.130]              // -> [ROMTableBase <= 0x00000000]
[22:17:47.130]            __ap = 0;      // AHB-AP
[22:17:47.130]              // -> [__ap <= 0x00000000]
[22:17:47.132]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:17:47.133]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[22:17:47.133]              // -> [ROMTableBase <= 0xE00FF000]
[22:17:47.133]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:17:47.135]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:17:47.136]              // -> [pidr1 <= 0x00000004]
[22:17:47.136]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:17:47.137]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[22:17:47.137]              // -> [pidr2 <= 0x0000000A]
[22:17:47.138]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:17:47.138]              // -> [jep106id <= 0x00000020]
[22:17:47.138]          </block>
[22:17:47.139]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:17:47.140]            // if-block "jep106id != 0x20"
[22:17:47.140]              // =>  FALSE
[22:17:47.140]            // skip if-block "jep106id != 0x20"
[22:17:47.141]          </control>
[22:17:47.142]        </sequence>
[22:17:47.142]    </block>
[22:17:47.142]  </sequence>
[22:17:47.142]  
[22:17:47.143]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:17:47.143]  
[22:17:47.143]  <debugvars>
[22:17:47.144]    // Pre-defined
[22:17:47.144]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:17:47.145]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[22:17:47.145]    __dp=0x00000000
[22:17:47.146]    __ap=0x00000000
[22:17:47.146]    __traceout=0x00000001      (SWO Trace)
[22:17:47.147]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:17:47.147]    __FlashAddr=0x00000000
[22:17:47.147]    __FlashLen=0x00000000
[22:17:47.148]    __FlashArg=0x00000000
[22:17:47.149]    __FlashOp=0x00000000
[22:17:47.149]    __Result=0x00000000
[22:17:47.150]    
[22:17:47.150]    // User-defined
[22:17:47.150]    DbgMCU_CR=0x00000007
[22:17:47.150]    DbgMCU_APB1_Fz=0x00000000
[22:17:47.150]    DbgMCU_APB2_Fz=0x00000000
[22:17:47.150]    TraceClk_Pin=0x00040002
[22:17:47.151]    TraceD0_Pin=0x00040003
[22:17:47.151]    TraceD1_Pin=0x00040004
[22:17:47.151]    TraceD2_Pin=0x00040005
[22:17:47.152]    TraceD3_Pin=0x00040006
[22:17:47.152]  </debugvars>
[22:17:47.154]  
[22:17:47.154]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:17:47.154]    <block atomic="false" info="">
[22:17:47.154]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:17:47.156]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:47.156]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:17:47.158]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:47.159]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:17:47.160]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:47.161]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:17:47.162]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:47.163]    </block>
[22:17:47.163]  </sequence>
[22:17:47.163]  
[22:17:49.250]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:17:49.250]  
[22:17:49.274]  <debugvars>
[22:17:49.274]    // Pre-defined
[22:17:49.275]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:17:49.275]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:17:49.275]    __dp=0x00000000
[22:17:49.276]    __ap=0x00000000
[22:17:49.276]    __traceout=0x00000001      (SWO Trace)
[22:17:49.276]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:17:49.276]    __FlashAddr=0x00000000
[22:17:49.277]    __FlashLen=0x00000000
[22:17:49.277]    __FlashArg=0x00000000
[22:17:49.277]    __FlashOp=0x00000000
[22:17:49.278]    __Result=0x00000000
[22:17:49.278]    
[22:17:49.278]    // User-defined
[22:17:49.278]    DbgMCU_CR=0x00000007
[22:17:49.279]    DbgMCU_APB1_Fz=0x00000000
[22:17:49.279]    DbgMCU_APB2_Fz=0x00000000
[22:17:49.279]    TraceClk_Pin=0x00040002
[22:17:49.279]    TraceD0_Pin=0x00040003
[22:17:49.280]    TraceD1_Pin=0x00040004
[22:17:49.280]    TraceD2_Pin=0x00040005
[22:17:49.280]    TraceD3_Pin=0x00040006
[22:17:49.280]  </debugvars>
[22:17:49.281]  
[22:17:49.281]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:17:49.281]    <block atomic="false" info="">
[22:17:49.282]      Sequence("CheckID");
[22:17:49.282]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:17:49.282]          <block atomic="false" info="">
[22:17:49.282]            __var pidr1 = 0;
[22:17:49.282]              // -> [pidr1 <= 0x00000000]
[22:17:49.283]            __var pidr2 = 0;
[22:17:49.283]              // -> [pidr2 <= 0x00000000]
[22:17:49.283]            __var jep106id = 0;
[22:17:49.284]              // -> [jep106id <= 0x00000000]
[22:17:49.284]            __var ROMTableBase = 0;
[22:17:49.284]              // -> [ROMTableBase <= 0x00000000]
[22:17:49.284]            __ap = 0;      // AHB-AP
[22:17:49.285]              // -> [__ap <= 0x00000000]
[22:17:49.285]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:17:49.286]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.286]              // -> [ROMTableBase <= 0xE00FF000]
[22:17:49.287]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:17:49.288]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.289]              // -> [pidr1 <= 0x00000004]
[22:17:49.289]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:17:49.291]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.291]              // -> [pidr2 <= 0x0000000A]
[22:17:49.292]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:17:49.292]              // -> [jep106id <= 0x00000020]
[22:17:49.293]          </block>
[22:17:49.293]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:17:49.294]            // if-block "jep106id != 0x20"
[22:17:49.294]              // =>  FALSE
[22:17:49.294]            // skip if-block "jep106id != 0x20"
[22:17:49.295]          </control>
[22:17:49.295]        </sequence>
[22:17:49.296]    </block>
[22:17:49.296]  </sequence>
[22:17:49.297]  
[22:17:49.298]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:17:49.298]  
[22:17:49.298]  <debugvars>
[22:17:49.298]    // Pre-defined
[22:17:49.299]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:17:49.299]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:17:49.300]    __dp=0x00000000
[22:17:49.300]    __ap=0x00000000
[22:17:49.300]    __traceout=0x00000001      (SWO Trace)
[22:17:49.301]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:17:49.301]    __FlashAddr=0x00000000
[22:17:49.301]    __FlashLen=0x00000000
[22:17:49.301]    __FlashArg=0x00000000
[22:17:49.302]    __FlashOp=0x00000000
[22:17:49.302]    __Result=0x00000000
[22:17:49.302]    
[22:17:49.302]    // User-defined
[22:17:49.302]    DbgMCU_CR=0x00000007
[22:17:49.303]    DbgMCU_APB1_Fz=0x00000000
[22:17:49.303]    DbgMCU_APB2_Fz=0x00000000
[22:17:49.303]    TraceClk_Pin=0x00040002
[22:17:49.304]    TraceD0_Pin=0x00040003
[22:17:49.304]    TraceD1_Pin=0x00040004
[22:17:49.305]    TraceD2_Pin=0x00040005
[22:17:49.305]    TraceD3_Pin=0x00040006
[22:17:49.306]  </debugvars>
[22:17:49.306]  
[22:17:49.307]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:17:49.307]    <block atomic="false" info="">
[22:17:49.308]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:17:49.309]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.310]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:17:49.312]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.312]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:17:49.314]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.314]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:17:49.316]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.316]    </block>
[22:17:49.316]  </sequence>
[22:17:49.317]  
[22:17:49.374]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[22:17:49.374]  
[22:17:49.375]  <debugvars>
[22:17:49.375]    // Pre-defined
[22:17:49.376]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:17:49.376]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:17:49.377]    __dp=0x00000000
[22:17:49.377]    __ap=0x00000000
[22:17:49.378]    __traceout=0x00000001      (SWO Trace)
[22:17:49.378]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:17:49.378]    __FlashAddr=0x00000000
[22:17:49.379]    __FlashLen=0x00000000
[22:17:49.379]    __FlashArg=0x00000000
[22:17:49.380]    __FlashOp=0x00000000
[22:17:49.380]    __Result=0x00000000
[22:17:49.381]    
[22:17:49.381]    // User-defined
[22:17:49.381]    DbgMCU_CR=0x00000007
[22:17:49.381]    DbgMCU_APB1_Fz=0x00000000
[22:17:49.382]    DbgMCU_APB2_Fz=0x00000000
[22:17:49.382]    TraceClk_Pin=0x00040002
[22:17:49.383]    TraceD0_Pin=0x00040003
[22:17:49.383]    TraceD1_Pin=0x00040004
[22:17:49.383]    TraceD2_Pin=0x00040005
[22:17:49.384]    TraceD3_Pin=0x00040006
[22:17:49.384]  </debugvars>
[22:17:49.384]  
[22:17:49.385]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:17:49.385]    <block atomic="false" info="">
[22:17:49.385]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:17:49.386]        // -> [traceSWO <= 0x00000001]
[22:17:49.386]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:17:49.387]        // -> [traceTPIU <= 0x00000000]
[22:17:49.387]    </block>
[22:17:49.388]    <control if="traceSWO" while="" timeout="0" info="">
[22:17:49.388]      // if-block "traceSWO"
[22:17:49.388]        // =>  TRUE
[22:17:49.388]      <block atomic="false" info="">
[22:17:49.389]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:17:49.389]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:17:49.390]            <block atomic="false" info="">
[22:17:49.390]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:17:49.390]                // -> [dbgmcu_val <= 0x00000000]
[22:17:49.391]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:17:49.391]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:17:49.391]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:17:49.393]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.393]                // -> [dbgmcu_val <= 0x00000007]
[22:17:49.394]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:17:49.394]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:17:49.395]              Sequence("ConfigureTraceSWOPin");
[22:17:49.395]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:17:49.395]                  <block atomic="false" info="">
[22:17:49.396]                    __var pin     = 0;
[22:17:49.396]                      // -> [pin <= 0x00000000]
[22:17:49.397]                    __var port    = 0;
[22:17:49.397]                      // -> [port <= 0x00000000]
[22:17:49.397]                    __var portAdr = 0;
[22:17:49.397]                      // -> [portAdr <= 0x00000000]
[22:17:49.399]                    __var pos     = 0;
[22:17:49.399]                      // -> [pos <= 0x00000000]
[22:17:49.399]                    __var SWO_Pin = 0x00010003;          // PB3
[22:17:49.400]                      // -> [SWO_Pin <= 0x00010003]
[22:17:49.400]                  </block>
[22:17:49.401]                  <block atomic="false" info="configure SWO">
[22:17:49.401]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:17:49.401]                      // -> [pin <= 0x00000003]
[22:17:49.402]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:17:49.402]                      // -> [port <= 0x00000001]
[22:17:49.402]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:17:49.403]                      // -> [portAdr <= 0x40020400]
[22:17:49.403]                    pos = pin * 2;
[22:17:49.403]                      // -> [pos <= 0x00000006]
[22:17:49.404]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:17:49.406]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.407]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.407]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:17:49.409]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.409]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.410]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:17:49.413]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.414]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.414]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:17:49.415]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.418]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.418]                  </block>
[22:17:49.418]                  <control if="pin <  8" while="" timeout="0" info="">
[22:17:49.418]                    // if-block "pin <  8"
[22:17:49.418]                      // =>  TRUE
[22:17:49.418]                    <block atomic="false" info="">
[22:17:49.420]                      pos = ((pin    ) & 7) * 4;
[22:17:49.420]                        // -> [pos <= 0x0000000C]
[22:17:49.420]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:17:49.422]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.424]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.424]                    </block>
[22:17:49.424]                    // end if-block "pin <  8"
[22:17:49.424]                  </control>
[22:17:49.425]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:17:49.425]                    // if-block "pin >= 8"
[22:17:49.427]                      // =>  FALSE
[22:17:49.427]                    // skip if-block "pin >= 8"
[22:17:49.427]                  </control>
[22:17:49.427]                </sequence>
[22:17:49.427]            </block>
[22:17:49.428]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:17:49.429]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:17:49.429]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.430]            </block>
[22:17:49.430]          </sequence>
[22:17:49.431]      </block>
[22:17:49.432]      // end if-block "traceSWO"
[22:17:49.432]    </control>
[22:17:49.432]    <control if="traceTPIU" while="" timeout="0" info="">
[22:17:49.433]      // if-block "traceTPIU"
[22:17:49.433]        // =>  FALSE
[22:17:49.434]      // skip if-block "traceTPIU"
[22:17:49.434]    </control>
[22:17:49.434]  </sequence>
[22:17:49.434]  
[22:17:49.451]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:17:49.451]  
[22:17:49.452]  <debugvars>
[22:17:49.452]    // Pre-defined
[22:17:49.452]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:17:49.453]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:17:49.454]    __dp=0x00000000
[22:17:49.454]    __ap=0x00000000
[22:17:49.455]    __traceout=0x00000001      (SWO Trace)
[22:17:49.455]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:17:49.456]    __FlashAddr=0x00000000
[22:17:49.456]    __FlashLen=0x00000000
[22:17:49.456]    __FlashArg=0x00000000
[22:17:49.457]    __FlashOp=0x00000000
[22:17:49.457]    __Result=0x00000000
[22:17:49.457]    
[22:17:49.457]    // User-defined
[22:17:49.458]    DbgMCU_CR=0x00000007
[22:17:49.459]    DbgMCU_APB1_Fz=0x00000000
[22:17:49.459]    DbgMCU_APB2_Fz=0x00000000
[22:17:49.459]    TraceClk_Pin=0x00040002
[22:17:49.460]    TraceD0_Pin=0x00040003
[22:17:49.460]    TraceD1_Pin=0x00040004
[22:17:49.461]    TraceD2_Pin=0x00040005
[22:17:49.461]    TraceD3_Pin=0x00040006
[22:17:49.462]  </debugvars>
[22:17:49.462]  
[22:17:49.462]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:17:49.462]    <block atomic="false" info="">
[22:17:49.463]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:17:49.463]        // -> [traceSWO <= 0x00000001]
[22:17:49.463]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:17:49.464]        // -> [traceTPIU <= 0x00000000]
[22:17:49.464]    </block>
[22:17:49.464]    <control if="traceSWO" while="" timeout="0" info="">
[22:17:49.465]      // if-block "traceSWO"
[22:17:49.465]        // =>  TRUE
[22:17:49.466]      <block atomic="false" info="">
[22:17:49.466]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:17:49.466]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:17:49.467]            <block atomic="false" info="">
[22:17:49.467]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:17:49.467]                // -> [dbgmcu_val <= 0x00000000]
[22:17:49.468]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:17:49.468]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:17:49.469]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:17:49.470]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.471]                // -> [dbgmcu_val <= 0x00000007]
[22:17:49.471]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:17:49.471]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:17:49.472]              Sequence("ConfigureTraceSWOPin");
[22:17:49.472]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:17:49.473]                  <block atomic="false" info="">
[22:17:49.473]                    __var pin     = 0;
[22:17:49.473]                      // -> [pin <= 0x00000000]
[22:17:49.474]                    __var port    = 0;
[22:17:49.475]                      // -> [port <= 0x00000000]
[22:17:49.475]                    __var portAdr = 0;
[22:17:49.475]                      // -> [portAdr <= 0x00000000]
[22:17:49.475]                    __var pos     = 0;
[22:17:49.476]                      // -> [pos <= 0x00000000]
[22:17:49.476]                    __var SWO_Pin = 0x00010003;          // PB3
[22:17:49.477]                      // -> [SWO_Pin <= 0x00010003]
[22:17:49.478]                  </block>
[22:17:49.478]                  <block atomic="false" info="configure SWO">
[22:17:49.478]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:17:49.479]                      // -> [pin <= 0x00000003]
[22:17:49.479]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:17:49.479]                      // -> [port <= 0x00000001]
[22:17:49.479]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:17:49.480]                      // -> [portAdr <= 0x40020400]
[22:17:49.481]                    pos = pin * 2;
[22:17:49.481]                      // -> [pos <= 0x00000006]
[22:17:49.481]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:17:49.482]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.484]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.484]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:17:49.486]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.488]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.488]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:17:49.490]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.491]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.492]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:17:49.493]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.495]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.495]                  </block>
[22:17:49.496]                  <control if="pin <  8" while="" timeout="0" info="">
[22:17:49.497]                    // if-block "pin <  8"
[22:17:49.497]                      // =>  TRUE
[22:17:49.497]                    <block atomic="false" info="">
[22:17:49.497]                      pos = ((pin    ) & 7) * 4;
[22:17:49.498]                        // -> [pos <= 0x0000000C]
[22:17:49.498]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:17:49.500]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.502]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.502]                    </block>
[22:17:49.503]                    // end if-block "pin <  8"
[22:17:49.503]                  </control>
[22:17:49.504]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:17:49.504]                    // if-block "pin >= 8"
[22:17:49.504]                      // =>  FALSE
[22:17:49.504]                    // skip if-block "pin >= 8"
[22:17:49.505]                  </control>
[22:17:49.505]                </sequence>
[22:17:49.505]            </block>
[22:17:49.506]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:17:49.507]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:17:49.508]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:49.508]            </block>
[22:17:49.509]          </sequence>
[22:17:49.509]      </block>
[22:17:49.510]      // end if-block "traceSWO"
[22:17:49.510]    </control>
[22:17:49.510]    <control if="traceTPIU" while="" timeout="0" info="">
[22:17:49.511]      // if-block "traceTPIU"
[22:17:49.511]        // =>  FALSE
[22:17:49.512]      // skip if-block "traceTPIU"
[22:17:49.512]    </control>
[22:17:49.513]  </sequence>
[22:17:49.513]  
[22:17:50.941]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:17:50.941]  
[22:17:50.988]  <debugvars>
[22:17:50.989]    // Pre-defined
[22:17:50.989]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:17:50.990]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:17:50.990]    __dp=0x00000000
[22:17:50.991]    __ap=0x00000000
[22:17:50.991]    __traceout=0x00000001      (SWO Trace)
[22:17:50.992]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:17:50.992]    __FlashAddr=0x00000000
[22:17:50.993]    __FlashLen=0x00000000
[22:17:50.993]    __FlashArg=0x00000000
[22:17:50.993]    __FlashOp=0x00000000
[22:17:50.994]    __Result=0x00000000
[22:17:50.994]    
[22:17:50.994]    // User-defined
[22:17:50.994]    DbgMCU_CR=0x00000007
[22:17:50.995]    DbgMCU_APB1_Fz=0x00000000
[22:17:50.995]    DbgMCU_APB2_Fz=0x00000000
[22:17:50.995]    TraceClk_Pin=0x00040002
[22:17:50.996]    TraceD0_Pin=0x00040003
[22:17:50.996]    TraceD1_Pin=0x00040004
[22:17:50.996]    TraceD2_Pin=0x00040005
[22:17:50.997]    TraceD3_Pin=0x00040006
[22:17:50.997]  </debugvars>
[22:17:50.997]  
[22:17:50.998]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:17:50.998]    <block atomic="false" info="">
[22:17:50.999]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:17:50.999]        // -> [traceSWO <= 0x00000001]
[22:17:50.999]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:17:51.000]        // -> [traceTPIU <= 0x00000000]
[22:17:51.000]    </block>
[22:17:51.000]    <control if="traceSWO" while="" timeout="0" info="">
[22:17:51.001]      // if-block "traceSWO"
[22:17:51.001]        // =>  TRUE
[22:17:51.001]      <block atomic="false" info="">
[22:17:51.002]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:17:51.003]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:17:51.003]            <block atomic="false" info="">
[22:17:51.003]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:17:51.003]                // -> [dbgmcu_val <= 0x00000000]
[22:17:51.004]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:17:51.004]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:17:51.005]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:17:51.006]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:17:51.007]                // -> [dbgmcu_val <= 0x00000007]
[22:17:51.007]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:17:51.007]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:17:51.008]              Sequence("ConfigureTraceSWOPin");
[22:17:51.008]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:17:51.009]                  <block atomic="false" info="">
[22:17:51.009]                    __var pin     = 0;
[22:17:51.010]                      // -> [pin <= 0x00000000]
[22:17:51.010]                    __var port    = 0;
[22:17:51.011]                      // -> [port <= 0x00000000]
[22:17:51.011]                    __var portAdr = 0;
[22:17:51.011]                      // -> [portAdr <= 0x00000000]
[22:17:51.011]                    __var pos     = 0;
[22:17:51.012]                      // -> [pos <= 0x00000000]
[22:17:51.012]                    __var SWO_Pin = 0x00010003;          // PB3
[22:17:51.012]                      // -> [SWO_Pin <= 0x00010003]
[22:17:51.013]                  </block>
[22:17:51.013]                  <block atomic="false" info="configure SWO">
[22:17:51.014]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:17:51.014]                      // -> [pin <= 0x00000003]
[22:17:51.014]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:17:51.015]                      // -> [port <= 0x00000001]
[22:17:51.015]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:17:51.015]                      // -> [portAdr <= 0x40020400]
[22:17:51.016]                    pos = pin * 2;
[22:17:51.016]                      // -> [pos <= 0x00000006]
[22:17:51.016]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:17:51.018]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:17:51.019]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:51.019]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:17:51.021]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:17:51.022]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:51.023]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:17:51.024]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:17:51.026]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:51.026]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:17:51.028]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:17:51.029]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:51.029]                  </block>
[22:17:51.030]                  <control if="pin <  8" while="" timeout="0" info="">
[22:17:51.030]                    // if-block "pin <  8"
[22:17:51.030]                      // =>  TRUE
[22:17:51.031]                    <block atomic="false" info="">
[22:17:51.031]                      pos = ((pin    ) & 7) * 4;
[22:17:51.031]                        // -> [pos <= 0x0000000C]
[22:17:51.031]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:17:51.033]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:17:51.035]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:51.035]                    </block>
[22:17:51.036]                    // end if-block "pin <  8"
[22:17:51.036]                  </control>
[22:17:51.037]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:17:51.037]                    // if-block "pin >= 8"
[22:17:51.038]                      // =>  FALSE
[22:17:51.038]                    // skip if-block "pin >= 8"
[22:17:51.038]                  </control>
[22:17:51.039]                </sequence>
[22:17:51.039]            </block>
[22:17:51.040]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:17:51.040]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:17:51.042]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:17:51.042]            </block>
[22:17:51.043]          </sequence>
[22:17:51.043]      </block>
[22:17:51.044]      // end if-block "traceSWO"
[22:17:51.044]    </control>
[22:17:51.045]    <control if="traceTPIU" while="" timeout="0" info="">
[22:17:51.045]      // if-block "traceTPIU"
[22:17:51.045]        // =>  FALSE
[22:17:51.045]      // skip if-block "traceTPIU"
[22:17:51.046]    </control>
[22:17:51.046]  </sequence>
[22:17:51.047]  
[22:18:12.714]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:18:12.714]  
[22:18:12.761]  <debugvars>
[22:18:12.761]    // Pre-defined
[22:18:12.762]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:18:12.762]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:18:12.763]    __dp=0x00000000
[22:18:12.763]    __ap=0x00000000
[22:18:12.764]    __traceout=0x00000001      (SWO Trace)
[22:18:12.764]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:18:12.765]    __FlashAddr=0x00000000
[22:18:12.765]    __FlashLen=0x00000000
[22:18:12.765]    __FlashArg=0x00000000
[22:18:12.766]    __FlashOp=0x00000000
[22:18:12.766]    __Result=0x00000000
[22:18:12.767]    
[22:18:12.767]    // User-defined
[22:18:12.767]    DbgMCU_CR=0x00000007
[22:18:12.767]    DbgMCU_APB1_Fz=0x00000000
[22:18:12.768]    DbgMCU_APB2_Fz=0x00000000
[22:18:12.768]    TraceClk_Pin=0x00040002
[22:18:12.768]    TraceD0_Pin=0x00040003
[22:18:12.769]    TraceD1_Pin=0x00040004
[22:18:12.769]    TraceD2_Pin=0x00040005
[22:18:12.770]    TraceD3_Pin=0x00040006
[22:18:12.770]  </debugvars>
[22:18:12.771]  
[22:18:12.771]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:18:12.771]    <block atomic="false" info="">
[22:18:12.772]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:18:12.772]        // -> [traceSWO <= 0x00000001]
[22:18:12.773]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:18:12.773]        // -> [traceTPIU <= 0x00000000]
[22:18:12.773]    </block>
[22:18:12.773]    <control if="traceSWO" while="" timeout="0" info="">
[22:18:12.774]      // if-block "traceSWO"
[22:18:12.774]        // =>  TRUE
[22:18:12.774]      <block atomic="false" info="">
[22:18:12.775]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:18:12.775]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:18:12.775]            <block atomic="false" info="">
[22:18:12.776]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:18:12.776]                // -> [dbgmcu_val <= 0x00000000]
[22:18:12.777]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:18:12.777]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:18:12.777]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:18:12.779]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:18:12.779]                // -> [dbgmcu_val <= 0x00000007]
[22:18:12.780]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:18:12.780]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:18:12.780]              Sequence("ConfigureTraceSWOPin");
[22:18:12.781]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:18:12.781]                  <block atomic="false" info="">
[22:18:12.781]                    __var pin     = 0;
[22:18:12.782]                      // -> [pin <= 0x00000000]
[22:18:12.782]                    __var port    = 0;
[22:18:12.783]                      // -> [port <= 0x00000000]
[22:18:12.783]                    __var portAdr = 0;
[22:18:12.784]                      // -> [portAdr <= 0x00000000]
[22:18:12.784]                    __var pos     = 0;
[22:18:12.784]                      // -> [pos <= 0x00000000]
[22:18:12.785]                    __var SWO_Pin = 0x00010003;          // PB3
[22:18:12.785]                      // -> [SWO_Pin <= 0x00010003]
[22:18:12.786]                  </block>
[22:18:12.786]                  <block atomic="false" info="configure SWO">
[22:18:12.787]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:18:12.787]                      // -> [pin <= 0x00000003]
[22:18:12.788]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:18:12.788]                      // -> [port <= 0x00000001]
[22:18:12.789]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:18:12.789]                      // -> [portAdr <= 0x40020400]
[22:18:12.789]                    pos = pin * 2;
[22:18:12.790]                      // -> [pos <= 0x00000006]
[22:18:12.790]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:18:12.792]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:12.793]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:12.794]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:18:12.795]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:18:12.797]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:12.797]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:18:12.799]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:18:12.800]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:12.801]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:18:12.802]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:18:12.804]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:12.805]                  </block>
[22:18:12.805]                  <control if="pin <  8" while="" timeout="0" info="">
[22:18:12.805]                    // if-block "pin <  8"
[22:18:12.806]                      // =>  TRUE
[22:18:12.806]                    <block atomic="false" info="">
[22:18:12.806]                      pos = ((pin    ) & 7) * 4;
[22:18:12.807]                        // -> [pos <= 0x0000000C]
[22:18:12.807]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:18:12.809]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:12.810]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:12.810]                    </block>
[22:18:12.811]                    // end if-block "pin <  8"
[22:18:12.811]                  </control>
[22:18:12.811]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:18:12.812]                    // if-block "pin >= 8"
[22:18:12.813]                      // =>  FALSE
[22:18:12.813]                    // skip if-block "pin >= 8"
[22:18:12.813]                  </control>
[22:18:12.814]                </sequence>
[22:18:12.814]            </block>
[22:18:12.814]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:18:12.815]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:18:12.816]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:12.817]            </block>
[22:18:12.817]          </sequence>
[22:18:12.817]      </block>
[22:18:12.818]      // end if-block "traceSWO"
[22:18:12.818]    </control>
[22:18:12.818]    <control if="traceTPIU" while="" timeout="0" info="">
[22:18:12.818]      // if-block "traceTPIU"
[22:18:12.819]        // =>  FALSE
[22:18:12.819]      // skip if-block "traceTPIU"
[22:18:12.819]    </control>
[22:18:12.820]  </sequence>
[22:18:12.820]  
[22:18:14.074]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:18:14.074]  
[22:18:14.122]  <debugvars>
[22:18:14.122]    // Pre-defined
[22:18:14.122]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:18:14.122]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:18:14.123]    __dp=0x00000000
[22:18:14.123]    __ap=0x00000000
[22:18:14.123]    __traceout=0x00000001      (SWO Trace)
[22:18:14.123]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:18:14.123]    __FlashAddr=0x00000000
[22:18:14.124]    __FlashLen=0x00000000
[22:18:14.124]    __FlashArg=0x00000000
[22:18:14.124]    __FlashOp=0x00000000
[22:18:14.124]    __Result=0x00000000
[22:18:14.124]    
[22:18:14.124]    // User-defined
[22:18:14.125]    DbgMCU_CR=0x00000007
[22:18:14.125]    DbgMCU_APB1_Fz=0x00000000
[22:18:14.125]    DbgMCU_APB2_Fz=0x00000000
[22:18:14.125]    TraceClk_Pin=0x00040002
[22:18:14.125]    TraceD0_Pin=0x00040003
[22:18:14.125]    TraceD1_Pin=0x00040004
[22:18:14.125]    TraceD2_Pin=0x00040005
[22:18:14.126]    TraceD3_Pin=0x00040006
[22:18:14.126]  </debugvars>
[22:18:14.126]  
[22:18:14.127]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:18:14.127]    <block atomic="false" info="">
[22:18:14.127]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:18:14.127]        // -> [traceSWO <= 0x00000001]
[22:18:14.127]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:18:14.127]        // -> [traceTPIU <= 0x00000000]
[22:18:14.127]    </block>
[22:18:14.127]    <control if="traceSWO" while="" timeout="0" info="">
[22:18:14.127]      // if-block "traceSWO"
[22:18:14.128]        // =>  TRUE
[22:18:14.128]      <block atomic="false" info="">
[22:18:14.128]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:18:14.128]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:18:14.128]            <block atomic="false" info="">
[22:18:14.128]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:18:14.129]                // -> [dbgmcu_val <= 0x00000000]
[22:18:14.129]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:18:14.129]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:18:14.129]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:18:14.130]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.130]                // -> [dbgmcu_val <= 0x00000007]
[22:18:14.130]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:18:14.131]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:18:14.131]              Sequence("ConfigureTraceSWOPin");
[22:18:14.131]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:18:14.131]                  <block atomic="false" info="">
[22:18:14.131]                    __var pin     = 0;
[22:18:14.131]                      // -> [pin <= 0x00000000]
[22:18:14.132]                    __var port    = 0;
[22:18:14.132]                      // -> [port <= 0x00000000]
[22:18:14.132]                    __var portAdr = 0;
[22:18:14.132]                      // -> [portAdr <= 0x00000000]
[22:18:14.132]                    __var pos     = 0;
[22:18:14.132]                      // -> [pos <= 0x00000000]
[22:18:14.132]                    __var SWO_Pin = 0x00010003;          // PB3
[22:18:14.133]                      // -> [SWO_Pin <= 0x00010003]
[22:18:14.133]                  </block>
[22:18:14.133]                  <block atomic="false" info="configure SWO">
[22:18:14.133]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:18:14.133]                      // -> [pin <= 0x00000003]
[22:18:14.133]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:18:14.133]                      // -> [port <= 0x00000001]
[22:18:14.134]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:18:14.134]                      // -> [portAdr <= 0x40020400]
[22:18:14.134]                    pos = pin * 2;
[22:18:14.134]                      // -> [pos <= 0x00000006]
[22:18:14.134]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:18:14.135]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.136]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.136]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:18:14.137]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.138]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.138]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:18:14.139]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.140]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.140]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:18:14.141]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.141]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.142]                  </block>
[22:18:14.142]                  <control if="pin <  8" while="" timeout="0" info="">
[22:18:14.142]                    // if-block "pin <  8"
[22:18:14.142]                      // =>  TRUE
[22:18:14.142]                    <block atomic="false" info="">
[22:18:14.142]                      pos = ((pin    ) & 7) * 4;
[22:18:14.142]                        // -> [pos <= 0x0000000C]
[22:18:14.143]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:18:14.144]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.144]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.145]                    </block>
[22:18:14.145]                    // end if-block "pin <  8"
[22:18:14.145]                  </control>
[22:18:14.145]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:18:14.145]                    // if-block "pin >= 8"
[22:18:14.146]                      // =>  FALSE
[22:18:14.146]                    // skip if-block "pin >= 8"
[22:18:14.146]                  </control>
[22:18:14.146]                </sequence>
[22:18:14.146]            </block>
[22:18:14.146]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:18:14.146]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:18:14.147]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.148]            </block>
[22:18:14.148]          </sequence>
[22:18:14.148]      </block>
[22:18:14.148]      // end if-block "traceSWO"
[22:18:14.148]    </control>
[22:18:14.148]    <control if="traceTPIU" while="" timeout="0" info="">
[22:18:14.148]      // if-block "traceTPIU"
[22:18:14.149]        // =>  FALSE
[22:18:14.149]      // skip if-block "traceTPIU"
[22:18:14.149]    </control>
[22:18:14.149]  </sequence>
[22:18:14.149]  
[22:18:14.439]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:18:14.439]  
[22:18:14.487]  <debugvars>
[22:18:14.488]    // Pre-defined
[22:18:14.488]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:18:14.489]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:18:14.489]    __dp=0x00000000
[22:18:14.489]    __ap=0x00000000
[22:18:14.490]    __traceout=0x00000001      (SWO Trace)
[22:18:14.490]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:18:14.491]    __FlashAddr=0x00000000
[22:18:14.491]    __FlashLen=0x00000000
[22:18:14.491]    __FlashArg=0x00000000
[22:18:14.492]    __FlashOp=0x00000000
[22:18:14.492]    __Result=0x00000000
[22:18:14.493]    
[22:18:14.493]    // User-defined
[22:18:14.493]    DbgMCU_CR=0x00000007
[22:18:14.493]    DbgMCU_APB1_Fz=0x00000000
[22:18:14.494]    DbgMCU_APB2_Fz=0x00000000
[22:18:14.494]    TraceClk_Pin=0x00040002
[22:18:14.495]    TraceD0_Pin=0x00040003
[22:18:14.495]    TraceD1_Pin=0x00040004
[22:18:14.495]    TraceD2_Pin=0x00040005
[22:18:14.496]    TraceD3_Pin=0x00040006
[22:18:14.496]  </debugvars>
[22:18:14.497]  
[22:18:14.497]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:18:14.497]    <block atomic="false" info="">
[22:18:14.498]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:18:14.498]        // -> [traceSWO <= 0x00000001]
[22:18:14.499]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:18:14.500]        // -> [traceTPIU <= 0x00000000]
[22:18:14.500]    </block>
[22:18:14.501]    <control if="traceSWO" while="" timeout="0" info="">
[22:18:14.501]      // if-block "traceSWO"
[22:18:14.501]        // =>  TRUE
[22:18:14.502]      <block atomic="false" info="">
[22:18:14.502]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:18:14.503]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:18:14.504]            <block atomic="false" info="">
[22:18:14.504]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:18:14.504]                // -> [dbgmcu_val <= 0x00000000]
[22:18:14.505]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:18:14.505]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:18:14.506]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:18:14.507]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.508]                // -> [dbgmcu_val <= 0x00000007]
[22:18:14.508]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:18:14.508]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:18:14.508]              Sequence("ConfigureTraceSWOPin");
[22:18:14.509]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:18:14.509]                  <block atomic="false" info="">
[22:18:14.510]                    __var pin     = 0;
[22:18:14.510]                      // -> [pin <= 0x00000000]
[22:18:14.510]                    __var port    = 0;
[22:18:14.511]                      // -> [port <= 0x00000000]
[22:18:14.511]                    __var portAdr = 0;
[22:18:14.512]                      // -> [portAdr <= 0x00000000]
[22:18:14.512]                    __var pos     = 0;
[22:18:14.512]                      // -> [pos <= 0x00000000]
[22:18:14.513]                    __var SWO_Pin = 0x00010003;          // PB3
[22:18:14.513]                      // -> [SWO_Pin <= 0x00010003]
[22:18:14.514]                  </block>
[22:18:14.514]                  <block atomic="false" info="configure SWO">
[22:18:14.515]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:18:14.515]                      // -> [pin <= 0x00000003]
[22:18:14.515]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:18:14.516]                      // -> [port <= 0x00000001]
[22:18:14.516]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:18:14.517]                      // -> [portAdr <= 0x40020400]
[22:18:14.517]                    pos = pin * 2;
[22:18:14.517]                      // -> [pos <= 0x00000006]
[22:18:14.518]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:18:14.520]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.521]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.522]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:18:14.523]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.525]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.525]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:18:14.526]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.528]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.528]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:18:14.530]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.531]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.532]                  </block>
[22:18:14.532]                  <control if="pin <  8" while="" timeout="0" info="">
[22:18:14.533]                    // if-block "pin <  8"
[22:18:14.533]                      // =>  TRUE
[22:18:14.534]                    <block atomic="false" info="">
[22:18:14.534]                      pos = ((pin    ) & 7) * 4;
[22:18:14.534]                        // -> [pos <= 0x0000000C]
[22:18:14.535]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:18:14.536]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.538]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.538]                    </block>
[22:18:14.539]                    // end if-block "pin <  8"
[22:18:14.539]                  </control>
[22:18:14.540]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:18:14.540]                    // if-block "pin >= 8"
[22:18:14.540]                      // =>  FALSE
[22:18:14.541]                    // skip if-block "pin >= 8"
[22:18:14.541]                  </control>
[22:18:14.541]                </sequence>
[22:18:14.541]            </block>
[22:18:14.542]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:18:14.542]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:18:14.544]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:14.545]            </block>
[22:18:14.545]          </sequence>
[22:18:14.545]      </block>
[22:18:14.546]      // end if-block "traceSWO"
[22:18:14.546]    </control>
[22:18:14.547]    <control if="traceTPIU" while="" timeout="0" info="">
[22:18:14.547]      // if-block "traceTPIU"
[22:18:14.548]        // =>  FALSE
[22:18:14.548]      // skip if-block "traceTPIU"
[22:18:14.549]    </control>
[22:18:14.549]  </sequence>
[22:18:14.549]  
[22:18:15.306]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:18:15.306]  
[22:18:15.306]  <debugvars>
[22:18:15.306]    // Pre-defined
[22:18:15.307]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:18:15.307]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:18:15.308]    __dp=0x00000000
[22:18:15.308]    __ap=0x00000000
[22:18:15.309]    __traceout=0x00000001      (SWO Trace)
[22:18:15.309]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:18:15.309]    __FlashAddr=0x00000000
[22:18:15.310]    __FlashLen=0x00000000
[22:18:15.310]    __FlashArg=0x00000000
[22:18:15.310]    __FlashOp=0x00000000
[22:18:15.311]    __Result=0x00000000
[22:18:15.311]    
[22:18:15.311]    // User-defined
[22:18:15.311]    DbgMCU_CR=0x00000007
[22:18:15.312]    DbgMCU_APB1_Fz=0x00000000
[22:18:15.312]    DbgMCU_APB2_Fz=0x00000000
[22:18:15.312]    TraceClk_Pin=0x00040002
[22:18:15.313]    TraceD0_Pin=0x00040003
[22:18:15.313]    TraceD1_Pin=0x00040004
[22:18:15.314]    TraceD2_Pin=0x00040005
[22:18:15.315]    TraceD3_Pin=0x00040006
[22:18:15.315]  </debugvars>
[22:18:15.315]  
[22:18:15.315]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:18:15.316]    <block atomic="false" info="">
[22:18:15.316]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:18:15.316]        // -> [traceSWO <= 0x00000001]
[22:18:15.317]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:18:15.318]        // -> [traceTPIU <= 0x00000000]
[22:18:15.318]    </block>
[22:18:15.318]    <control if="traceSWO" while="" timeout="0" info="">
[22:18:15.318]      // if-block "traceSWO"
[22:18:15.319]        // =>  TRUE
[22:18:15.319]      <block atomic="false" info="">
[22:18:15.319]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:18:15.320]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:18:15.320]            <block atomic="false" info="">
[22:18:15.321]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:18:15.321]                // -> [dbgmcu_val <= 0x00000000]
[22:18:15.322]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:18:15.322]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:18:15.323]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:18:15.324]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:18:15.325]                // -> [dbgmcu_val <= 0x00000007]
[22:18:15.325]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:18:15.326]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:18:15.326]              Sequence("ConfigureTraceSWOPin");
[22:18:15.327]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:18:15.327]                  <block atomic="false" info="">
[22:18:15.327]                    __var pin     = 0;
[22:18:15.327]                      // -> [pin <= 0x00000000]
[22:18:15.328]                    __var port    = 0;
[22:18:15.328]                      // -> [port <= 0x00000000]
[22:18:15.329]                    __var portAdr = 0;
[22:18:15.330]                      // -> [portAdr <= 0x00000000]
[22:18:15.330]                    __var pos     = 0;
[22:18:15.330]                      // -> [pos <= 0x00000000]
[22:18:15.331]                    __var SWO_Pin = 0x00010003;          // PB3
[22:18:15.331]                      // -> [SWO_Pin <= 0x00010003]
[22:18:15.331]                  </block>
[22:18:15.331]                  <block atomic="false" info="configure SWO">
[22:18:15.332]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:18:15.332]                      // -> [pin <= 0x00000003]
[22:18:15.333]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:18:15.333]                      // -> [port <= 0x00000001]
[22:18:15.333]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:18:15.334]                      // -> [portAdr <= 0x40020400]
[22:18:15.334]                    pos = pin * 2;
[22:18:15.335]                      // -> [pos <= 0x00000006]
[22:18:15.335]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:18:15.337]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:15.339]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:15.339]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:18:15.340]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:18:15.342]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:15.342]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:18:15.344]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:18:15.345]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:15.346]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:18:15.347]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:18:15.349]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:15.350]                  </block>
[22:18:15.350]                  <control if="pin <  8" while="" timeout="0" info="">
[22:18:15.350]                    // if-block "pin <  8"
[22:18:15.351]                      // =>  TRUE
[22:18:15.351]                    <block atomic="false" info="">
[22:18:15.352]                      pos = ((pin    ) & 7) * 4;
[22:18:15.352]                        // -> [pos <= 0x0000000C]
[22:18:15.353]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:18:15.354]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:15.356]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:15.356]                    </block>
[22:18:15.356]                    // end if-block "pin <  8"
[22:18:15.357]                  </control>
[22:18:15.357]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:18:15.358]                    // if-block "pin >= 8"
[22:18:15.358]                      // =>  FALSE
[22:18:15.359]                    // skip if-block "pin >= 8"
[22:18:15.359]                  </control>
[22:18:15.360]                </sequence>
[22:18:15.360]            </block>
[22:18:15.361]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:18:15.361]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:18:15.363]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:15.363]            </block>
[22:18:15.363]          </sequence>
[22:18:15.364]      </block>
[22:18:15.364]      // end if-block "traceSWO"
[22:18:15.365]    </control>
[22:18:15.365]    <control if="traceTPIU" while="" timeout="0" info="">
[22:18:15.365]      // if-block "traceTPIU"
[22:18:15.366]        // =>  FALSE
[22:18:15.366]      // skip if-block "traceTPIU"
[22:18:15.366]    </control>
[22:18:15.367]  </sequence>
[22:18:15.367]  
[22:18:32.751]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:18:32.751]  
[22:18:32.793]  <debugvars>
[22:18:32.795]    // Pre-defined
[22:18:32.795]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:18:32.796]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:18:32.796]    __dp=0x00000000
[22:18:32.797]    __ap=0x00000000
[22:18:32.797]    __traceout=0x00000001      (SWO Trace)
[22:18:32.798]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:18:32.798]    __FlashAddr=0x00000000
[22:18:32.798]    __FlashLen=0x00000000
[22:18:32.799]    __FlashArg=0x00000000
[22:18:32.799]    __FlashOp=0x00000000
[22:18:32.799]    __Result=0x00000000
[22:18:32.800]    
[22:18:32.800]    // User-defined
[22:18:32.800]    DbgMCU_CR=0x00000007
[22:18:32.800]    DbgMCU_APB1_Fz=0x00000000
[22:18:32.801]    DbgMCU_APB2_Fz=0x00000000
[22:18:32.801]    TraceClk_Pin=0x00040002
[22:18:32.801]    TraceD0_Pin=0x00040003
[22:18:32.802]    TraceD1_Pin=0x00040004
[22:18:32.802]    TraceD2_Pin=0x00040005
[22:18:32.802]    TraceD3_Pin=0x00040006
[22:18:32.803]  </debugvars>
[22:18:32.803]  
[22:18:32.803]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:18:32.804]    <block atomic="false" info="">
[22:18:32.804]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:18:32.804]        // -> [traceSWO <= 0x00000001]
[22:18:32.805]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:18:32.805]        // -> [traceTPIU <= 0x00000000]
[22:18:32.805]    </block>
[22:18:32.805]    <control if="traceSWO" while="" timeout="0" info="">
[22:18:32.805]      // if-block "traceSWO"
[22:18:32.806]        // =>  TRUE
[22:18:32.806]      <block atomic="false" info="">
[22:18:32.806]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:18:32.808]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:18:32.808]            <block atomic="false" info="">
[22:18:32.808]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:18:32.808]                // -> [dbgmcu_val <= 0x00000000]
[22:18:32.808]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:18:32.810]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:18:32.810]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:18:32.811]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:18:32.812]                // -> [dbgmcu_val <= 0x00000007]
[22:18:32.812]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:18:32.813]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:18:32.813]              Sequence("ConfigureTraceSWOPin");
[22:18:32.814]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:18:32.814]                  <block atomic="false" info="">
[22:18:32.814]                    __var pin     = 0;
[22:18:32.815]                      // -> [pin <= 0x00000000]
[22:18:32.815]                    __var port    = 0;
[22:18:32.815]                      // -> [port <= 0x00000000]
[22:18:32.815]                    __var portAdr = 0;
[22:18:32.816]                      // -> [portAdr <= 0x00000000]
[22:18:32.817]                    __var pos     = 0;
[22:18:32.817]                      // -> [pos <= 0x00000000]
[22:18:32.817]                    __var SWO_Pin = 0x00010003;          // PB3
[22:18:32.817]                      // -> [SWO_Pin <= 0x00010003]
[22:18:32.817]                  </block>
[22:18:32.818]                  <block atomic="false" info="configure SWO">
[22:18:32.818]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:18:32.818]                      // -> [pin <= 0x00000003]
[22:18:32.819]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:18:32.819]                      // -> [port <= 0x00000001]
[22:18:32.820]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:18:32.820]                      // -> [portAdr <= 0x40020400]
[22:18:32.821]                    pos = pin * 2;
[22:18:32.821]                      // -> [pos <= 0x00000006]
[22:18:32.821]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:18:32.822]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:32.825]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:32.825]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:18:32.826]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:18:32.827]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:32.828]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:18:32.829]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:18:32.831]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:32.832]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:18:32.833]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:18:32.835]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:32.835]                  </block>
[22:18:32.835]                  <control if="pin <  8" while="" timeout="0" info="">
[22:18:32.835]                    // if-block "pin <  8"
[22:18:32.836]                      // =>  TRUE
[22:18:32.836]                    <block atomic="false" info="">
[22:18:32.836]                      pos = ((pin    ) & 7) * 4;
[22:18:32.838]                        // -> [pos <= 0x0000000C]
[22:18:32.838]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:18:32.840]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:32.840]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:32.841]                    </block>
[22:18:32.841]                    // end if-block "pin <  8"
[22:18:32.841]                  </control>
[22:18:32.842]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:18:32.842]                    // if-block "pin >= 8"
[22:18:32.842]                      // =>  FALSE
[22:18:32.843]                    // skip if-block "pin >= 8"
[22:18:32.844]                  </control>
[22:18:32.844]                </sequence>
[22:18:32.844]            </block>
[22:18:32.844]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:18:32.845]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:18:32.846]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:32.846]            </block>
[22:18:32.847]          </sequence>
[22:18:32.848]      </block>
[22:18:32.848]      // end if-block "traceSWO"
[22:18:32.848]    </control>
[22:18:32.849]    <control if="traceTPIU" while="" timeout="0" info="">
[22:18:32.850]      // if-block "traceTPIU"
[22:18:32.850]        // =>  FALSE
[22:18:32.850]      // skip if-block "traceTPIU"
[22:18:32.850]    </control>
[22:18:32.850]  </sequence>
[22:18:32.851]  
[22:18:35.526]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:18:35.526]  
[22:18:35.574]  <debugvars>
[22:18:35.574]    // Pre-defined
[22:18:35.575]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:18:35.575]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:18:35.576]    __dp=0x00000000
[22:18:35.576]    __ap=0x00000000
[22:18:35.577]    __traceout=0x00000001      (SWO Trace)
[22:18:35.577]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:18:35.578]    __FlashAddr=0x00000000
[22:18:35.578]    __FlashLen=0x00000000
[22:18:35.579]    __FlashArg=0x00000000
[22:18:35.579]    __FlashOp=0x00000000
[22:18:35.579]    __Result=0x00000000
[22:18:35.580]    
[22:18:35.580]    // User-defined
[22:18:35.580]    DbgMCU_CR=0x00000007
[22:18:35.581]    DbgMCU_APB1_Fz=0x00000000
[22:18:35.581]    DbgMCU_APB2_Fz=0x00000000
[22:18:35.582]    TraceClk_Pin=0x00040002
[22:18:35.582]    TraceD0_Pin=0x00040003
[22:18:35.583]    TraceD1_Pin=0x00040004
[22:18:35.583]    TraceD2_Pin=0x00040005
[22:18:35.583]    TraceD3_Pin=0x00040006
[22:18:35.584]  </debugvars>
[22:18:35.584]  
[22:18:35.585]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:18:35.585]    <block atomic="false" info="">
[22:18:35.586]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:18:35.586]        // -> [traceSWO <= 0x00000001]
[22:18:35.587]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:18:35.587]        // -> [traceTPIU <= 0x00000000]
[22:18:35.588]    </block>
[22:18:35.588]    <control if="traceSWO" while="" timeout="0" info="">
[22:18:35.588]      // if-block "traceSWO"
[22:18:35.589]        // =>  TRUE
[22:18:35.589]      <block atomic="false" info="">
[22:18:35.590]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:18:35.590]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:18:35.591]            <block atomic="false" info="">
[22:18:35.591]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:18:35.592]                // -> [dbgmcu_val <= 0x00000000]
[22:18:35.592]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:18:35.593]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:18:35.593]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:18:35.595]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:18:35.595]                // -> [dbgmcu_val <= 0x00000007]
[22:18:35.595]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:18:35.596]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:18:35.597]              Sequence("ConfigureTraceSWOPin");
[22:18:35.597]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:18:35.598]                  <block atomic="false" info="">
[22:18:35.598]                    __var pin     = 0;
[22:18:35.599]                      // -> [pin <= 0x00000000]
[22:18:35.599]                    __var port    = 0;
[22:18:35.599]                      // -> [port <= 0x00000000]
[22:18:35.600]                    __var portAdr = 0;
[22:18:35.600]                      // -> [portAdr <= 0x00000000]
[22:18:35.600]                    __var pos     = 0;
[22:18:35.601]                      // -> [pos <= 0x00000000]
[22:18:35.601]                    __var SWO_Pin = 0x00010003;          // PB3
[22:18:35.602]                      // -> [SWO_Pin <= 0x00010003]
[22:18:35.602]                  </block>
[22:18:35.603]                  <block atomic="false" info="configure SWO">
[22:18:35.603]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:18:35.604]                      // -> [pin <= 0x00000003]
[22:18:35.604]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:18:35.604]                      // -> [port <= 0x00000001]
[22:18:35.605]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:18:35.605]                      // -> [portAdr <= 0x40020400]
[22:18:35.606]                    pos = pin * 2;
[22:18:35.607]                      // -> [pos <= 0x00000006]
[22:18:35.607]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:18:35.608]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:35.609]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:35.610]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:18:35.611]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:18:35.613]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:35.613]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:18:35.614]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:18:35.616]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:35.617]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:18:35.618]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:18:35.620]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:35.620]                  </block>
[22:18:35.621]                  <control if="pin <  8" while="" timeout="0" info="">
[22:18:35.621]                    // if-block "pin <  8"
[22:18:35.621]                      // =>  TRUE
[22:18:35.622]                    <block atomic="false" info="">
[22:18:35.622]                      pos = ((pin    ) & 7) * 4;
[22:18:35.623]                        // -> [pos <= 0x0000000C]
[22:18:35.623]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:18:35.625]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:35.626]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:35.627]                    </block>
[22:18:35.627]                    // end if-block "pin <  8"
[22:18:35.628]                  </control>
[22:18:35.628]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:18:35.629]                    // if-block "pin >= 8"
[22:18:35.629]                      // =>  FALSE
[22:18:35.630]                    // skip if-block "pin >= 8"
[22:18:35.630]                  </control>
[22:18:35.631]                </sequence>
[22:18:35.631]            </block>
[22:18:35.631]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:18:35.632]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:18:35.633]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:35.634]            </block>
[22:18:35.634]          </sequence>
[22:18:35.634]      </block>
[22:18:35.635]      // end if-block "traceSWO"
[22:18:35.635]    </control>
[22:18:35.636]    <control if="traceTPIU" while="" timeout="0" info="">
[22:18:35.636]      // if-block "traceTPIU"
[22:18:35.637]        // =>  FALSE
[22:18:35.637]      // skip if-block "traceTPIU"
[22:18:35.637]    </control>
[22:18:35.637]  </sequence>
[22:18:35.638]  
[22:18:36.251]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:18:36.251]  
[22:18:36.299]  <debugvars>
[22:18:36.300]    // Pre-defined
[22:18:36.300]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:18:36.301]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:18:36.301]    __dp=0x00000000
[22:18:36.302]    __ap=0x00000000
[22:18:36.302]    __traceout=0x00000001      (SWO Trace)
[22:18:36.302]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:18:36.303]    __FlashAddr=0x00000000
[22:18:36.303]    __FlashLen=0x00000000
[22:18:36.304]    __FlashArg=0x00000000
[22:18:36.304]    __FlashOp=0x00000000
[22:18:36.304]    __Result=0x00000000
[22:18:36.305]    
[22:18:36.305]    // User-defined
[22:18:36.305]    DbgMCU_CR=0x00000007
[22:18:36.306]    DbgMCU_APB1_Fz=0x00000000
[22:18:36.306]    DbgMCU_APB2_Fz=0x00000000
[22:18:36.307]    TraceClk_Pin=0x00040002
[22:18:36.307]    TraceD0_Pin=0x00040003
[22:18:36.308]    TraceD1_Pin=0x00040004
[22:18:36.308]    TraceD2_Pin=0x00040005
[22:18:36.308]    TraceD3_Pin=0x00040006
[22:18:36.309]  </debugvars>
[22:18:36.309]  
[22:18:36.310]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:18:36.310]    <block atomic="false" info="">
[22:18:36.310]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:18:36.311]        // -> [traceSWO <= 0x00000001]
[22:18:36.311]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:18:36.312]        // -> [traceTPIU <= 0x00000000]
[22:18:36.312]    </block>
[22:18:36.313]    <control if="traceSWO" while="" timeout="0" info="">
[22:18:36.313]      // if-block "traceSWO"
[22:18:36.315]        // =>  TRUE
[22:18:36.315]      <block atomic="false" info="">
[22:18:36.315]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:18:36.315]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:18:36.315]            <block atomic="false" info="">
[22:18:36.316]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:18:36.316]                // -> [dbgmcu_val <= 0x00000000]
[22:18:36.316]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:18:36.317]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:18:36.317]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:18:36.319]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.319]                // -> [dbgmcu_val <= 0x00000007]
[22:18:36.319]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:18:36.320]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:18:36.320]              Sequence("ConfigureTraceSWOPin");
[22:18:36.321]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:18:36.321]                  <block atomic="false" info="">
[22:18:36.321]                    __var pin     = 0;
[22:18:36.322]                      // -> [pin <= 0x00000000]
[22:18:36.322]                    __var port    = 0;
[22:18:36.322]                      // -> [port <= 0x00000000]
[22:18:36.322]                    __var portAdr = 0;
[22:18:36.323]                      // -> [portAdr <= 0x00000000]
[22:18:36.323]                    __var pos     = 0;
[22:18:36.323]                      // -> [pos <= 0x00000000]
[22:18:36.324]                    __var SWO_Pin = 0x00010003;          // PB3
[22:18:36.324]                      // -> [SWO_Pin <= 0x00010003]
[22:18:36.324]                  </block>
[22:18:36.325]                  <block atomic="false" info="configure SWO">
[22:18:36.325]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:18:36.326]                      // -> [pin <= 0x00000003]
[22:18:36.326]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:18:36.327]                      // -> [port <= 0x00000001]
[22:18:36.327]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:18:36.328]                      // -> [portAdr <= 0x40020400]
[22:18:36.328]                    pos = pin * 2;
[22:18:36.328]                      // -> [pos <= 0x00000006]
[22:18:36.328]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:18:36.331]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.331]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.332]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:18:36.333]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.335]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.336]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:18:36.338]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.339]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.339]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:18:36.340]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.342]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.342]                  </block>
[22:18:36.343]                  <control if="pin <  8" while="" timeout="0" info="">
[22:18:36.343]                    // if-block "pin <  8"
[22:18:36.343]                      // =>  TRUE
[22:18:36.344]                    <block atomic="false" info="">
[22:18:36.344]                      pos = ((pin    ) & 7) * 4;
[22:18:36.345]                        // -> [pos <= 0x0000000C]
[22:18:36.345]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:18:36.346]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.348]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.348]                    </block>
[22:18:36.348]                    // end if-block "pin <  8"
[22:18:36.349]                  </control>
[22:18:36.349]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:18:36.350]                    // if-block "pin >= 8"
[22:18:36.350]                      // =>  FALSE
[22:18:36.350]                    // skip if-block "pin >= 8"
[22:18:36.351]                  </control>
[22:18:36.352]                </sequence>
[22:18:36.352]            </block>
[22:18:36.352]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:18:36.352]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:18:36.354]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.354]            </block>
[22:18:36.354]          </sequence>
[22:18:36.355]      </block>
[22:18:36.355]      // end if-block "traceSWO"
[22:18:36.356]    </control>
[22:18:36.356]    <control if="traceTPIU" while="" timeout="0" info="">
[22:18:36.356]      // if-block "traceTPIU"
[22:18:36.357]        // =>  FALSE
[22:18:36.358]      // skip if-block "traceTPIU"
[22:18:36.358]    </control>
[22:18:36.359]  </sequence>
[22:18:36.359]  
[22:18:36.843]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:18:36.843]  
[22:18:36.891]  <debugvars>
[22:18:36.892]    // Pre-defined
[22:18:36.892]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:18:36.892]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:18:36.892]    __dp=0x00000000
[22:18:36.893]    __ap=0x00000000
[22:18:36.893]    __traceout=0x00000001      (SWO Trace)
[22:18:36.894]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:18:36.894]    __FlashAddr=0x00000000
[22:18:36.894]    __FlashLen=0x00000000
[22:18:36.895]    __FlashArg=0x00000000
[22:18:36.895]    __FlashOp=0x00000000
[22:18:36.895]    __Result=0x00000000
[22:18:36.896]    
[22:18:36.896]    // User-defined
[22:18:36.896]    DbgMCU_CR=0x00000007
[22:18:36.896]    DbgMCU_APB1_Fz=0x00000000
[22:18:36.897]    DbgMCU_APB2_Fz=0x00000000
[22:18:36.897]    TraceClk_Pin=0x00040002
[22:18:36.898]    TraceD0_Pin=0x00040003
[22:18:36.898]    TraceD1_Pin=0x00040004
[22:18:36.899]    TraceD2_Pin=0x00040005
[22:18:36.899]    TraceD3_Pin=0x00040006
[22:18:36.900]  </debugvars>
[22:18:36.900]  
[22:18:36.901]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:18:36.901]    <block atomic="false" info="">
[22:18:36.901]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:18:36.902]        // -> [traceSWO <= 0x00000001]
[22:18:36.902]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:18:36.902]        // -> [traceTPIU <= 0x00000000]
[22:18:36.903]    </block>
[22:18:36.903]    <control if="traceSWO" while="" timeout="0" info="">
[22:18:36.904]      // if-block "traceSWO"
[22:18:36.904]        // =>  TRUE
[22:18:36.905]      <block atomic="false" info="">
[22:18:36.905]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:18:36.905]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:18:36.906]            <block atomic="false" info="">
[22:18:36.906]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:18:36.906]                // -> [dbgmcu_val <= 0x00000000]
[22:18:36.907]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:18:36.907]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:18:36.907]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:18:36.909]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.909]                // -> [dbgmcu_val <= 0x00000007]
[22:18:36.909]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:18:36.910]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:18:36.910]              Sequence("ConfigureTraceSWOPin");
[22:18:36.911]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:18:36.911]                  <block atomic="false" info="">
[22:18:36.911]                    __var pin     = 0;
[22:18:36.912]                      // -> [pin <= 0x00000000]
[22:18:36.912]                    __var port    = 0;
[22:18:36.913]                      // -> [port <= 0x00000000]
[22:18:36.913]                    __var portAdr = 0;
[22:18:36.914]                      // -> [portAdr <= 0x00000000]
[22:18:36.914]                    __var pos     = 0;
[22:18:36.914]                      // -> [pos <= 0x00000000]
[22:18:36.915]                    __var SWO_Pin = 0x00010003;          // PB3
[22:18:36.915]                      // -> [SWO_Pin <= 0x00010003]
[22:18:36.916]                  </block>
[22:18:36.916]                  <block atomic="false" info="configure SWO">
[22:18:36.917]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:18:36.917]                      // -> [pin <= 0x00000003]
[22:18:36.918]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:18:36.918]                      // -> [port <= 0x00000001]
[22:18:36.918]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:18:36.919]                      // -> [portAdr <= 0x40020400]
[22:18:36.919]                    pos = pin * 2;
[22:18:36.919]                      // -> [pos <= 0x00000006]
[22:18:36.920]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:18:36.921]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.923]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.923]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:18:36.924]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.926]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.926]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:18:36.927]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.929]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.929]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:18:36.931]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.932]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.933]                  </block>
[22:18:36.933]                  <control if="pin <  8" while="" timeout="0" info="">
[22:18:36.934]                    // if-block "pin <  8"
[22:18:36.934]                      // =>  TRUE
[22:18:36.934]                    <block atomic="false" info="">
[22:18:36.934]                      pos = ((pin    ) & 7) * 4;
[22:18:36.935]                        // -> [pos <= 0x0000000C]
[22:18:36.935]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:18:36.937]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.938]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.939]                    </block>
[22:18:36.939]                    // end if-block "pin <  8"
[22:18:36.939]                  </control>
[22:18:36.940]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:18:36.940]                    // if-block "pin >= 8"
[22:18:36.941]                      // =>  FALSE
[22:18:36.941]                    // skip if-block "pin >= 8"
[22:18:36.941]                  </control>
[22:18:36.941]                </sequence>
[22:18:36.942]            </block>
[22:18:36.942]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:18:36.942]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:18:36.944]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:36.944]            </block>
[22:18:36.944]          </sequence>
[22:18:36.945]      </block>
[22:18:36.945]      // end if-block "traceSWO"
[22:18:36.946]    </control>
[22:18:36.946]    <control if="traceTPIU" while="" timeout="0" info="">
[22:18:36.947]      // if-block "traceTPIU"
[22:18:36.947]        // =>  FALSE
[22:18:36.948]      // skip if-block "traceTPIU"
[22:18:36.948]    </control>
[22:18:36.948]  </sequence>
[22:18:36.949]  
[22:18:37.721]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:18:37.722]  
[22:18:37.768]  <debugvars>
[22:18:37.768]    // Pre-defined
[22:18:37.769]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:18:37.769]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:18:37.769]    __dp=0x00000000
[22:18:37.770]    __ap=0x00000000
[22:18:37.770]    __traceout=0x00000001      (SWO Trace)
[22:18:37.771]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:18:37.771]    __FlashAddr=0x00000000
[22:18:37.771]    __FlashLen=0x00000000
[22:18:37.772]    __FlashArg=0x00000000
[22:18:37.772]    __FlashOp=0x00000000
[22:18:37.773]    __Result=0x00000000
[22:18:37.773]    
[22:18:37.773]    // User-defined
[22:18:37.774]    DbgMCU_CR=0x00000007
[22:18:37.774]    DbgMCU_APB1_Fz=0x00000000
[22:18:37.775]    DbgMCU_APB2_Fz=0x00000000
[22:18:37.775]    TraceClk_Pin=0x00040002
[22:18:37.776]    TraceD0_Pin=0x00040003
[22:18:37.776]    TraceD1_Pin=0x00040004
[22:18:37.776]    TraceD2_Pin=0x00040005
[22:18:37.777]    TraceD3_Pin=0x00040006
[22:18:37.777]  </debugvars>
[22:18:37.778]  
[22:18:37.778]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:18:37.778]    <block atomic="false" info="">
[22:18:37.779]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:18:37.779]        // -> [traceSWO <= 0x00000001]
[22:18:37.780]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:18:37.780]        // -> [traceTPIU <= 0x00000000]
[22:18:37.781]    </block>
[22:18:37.781]    <control if="traceSWO" while="" timeout="0" info="">
[22:18:37.781]      // if-block "traceSWO"
[22:18:37.782]        // =>  TRUE
[22:18:37.782]      <block atomic="false" info="">
[22:18:37.782]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:18:37.783]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:18:37.783]            <block atomic="false" info="">
[22:18:37.784]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:18:37.784]                // -> [dbgmcu_val <= 0x00000000]
[22:18:37.784]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:18:37.784]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:18:37.785]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:18:37.786]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:18:37.787]                // -> [dbgmcu_val <= 0x00000007]
[22:18:37.787]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:18:37.788]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:18:37.788]              Sequence("ConfigureTraceSWOPin");
[22:18:37.789]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:18:37.789]                  <block atomic="false" info="">
[22:18:37.789]                    __var pin     = 0;
[22:18:37.790]                      // -> [pin <= 0x00000000]
[22:18:37.790]                    __var port    = 0;
[22:18:37.791]                      // -> [port <= 0x00000000]
[22:18:37.791]                    __var portAdr = 0;
[22:18:37.792]                      // -> [portAdr <= 0x00000000]
[22:18:37.792]                    __var pos     = 0;
[22:18:37.792]                      // -> [pos <= 0x00000000]
[22:18:37.793]                    __var SWO_Pin = 0x00010003;          // PB3
[22:18:37.794]                      // -> [SWO_Pin <= 0x00010003]
[22:18:37.794]                  </block>
[22:18:37.794]                  <block atomic="false" info="configure SWO">
[22:18:37.794]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:18:37.795]                      // -> [pin <= 0x00000003]
[22:18:37.795]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:18:37.795]                      // -> [port <= 0x00000001]
[22:18:37.795]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:18:37.796]                      // -> [portAdr <= 0x40020400]
[22:18:37.796]                    pos = pin * 2;
[22:18:37.797]                      // -> [pos <= 0x00000006]
[22:18:37.797]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:18:37.798]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:37.800]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:37.800]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:18:37.802]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:18:37.804]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:37.804]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:18:37.806]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:18:37.807]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:37.808]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:18:37.810]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:18:37.811]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:37.811]                  </block>
[22:18:37.812]                  <control if="pin <  8" while="" timeout="0" info="">
[22:18:37.812]                    // if-block "pin <  8"
[22:18:37.812]                      // =>  TRUE
[22:18:37.813]                    <block atomic="false" info="">
[22:18:37.813]                      pos = ((pin    ) & 7) * 4;
[22:18:37.813]                        // -> [pos <= 0x0000000C]
[22:18:37.814]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:18:37.815]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:37.817]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:37.818]                    </block>
[22:18:37.818]                    // end if-block "pin <  8"
[22:18:37.818]                  </control>
[22:18:37.819]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:18:37.819]                    // if-block "pin >= 8"
[22:18:37.819]                      // =>  FALSE
[22:18:37.820]                    // skip if-block "pin >= 8"
[22:18:37.820]                  </control>
[22:18:37.821]                </sequence>
[22:18:37.821]            </block>
[22:18:37.821]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:18:37.822]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:18:37.824]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:37.824]            </block>
[22:18:37.824]          </sequence>
[22:18:37.824]      </block>
[22:18:37.825]      // end if-block "traceSWO"
[22:18:37.825]    </control>
[22:18:37.825]    <control if="traceTPIU" while="" timeout="0" info="">
[22:18:37.826]      // if-block "traceTPIU"
[22:18:37.826]        // =>  FALSE
[22:18:37.827]      // skip if-block "traceTPIU"
[22:18:37.827]    </control>
[22:18:37.827]  </sequence>
[22:18:37.827]  
[22:18:38.614]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:18:38.614]  
[22:18:38.661]  <debugvars>
[22:18:38.661]    // Pre-defined
[22:18:38.661]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:18:38.661]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:18:38.661]    __dp=0x00000000
[22:18:38.662]    __ap=0x00000000
[22:18:38.662]    __traceout=0x00000001      (SWO Trace)
[22:18:38.662]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:18:38.662]    __FlashAddr=0x00000000
[22:18:38.662]    __FlashLen=0x00000000
[22:18:38.663]    __FlashArg=0x00000000
[22:18:38.663]    __FlashOp=0x00000000
[22:18:38.663]    __Result=0x00000000
[22:18:38.663]    
[22:18:38.663]    // User-defined
[22:18:38.663]    DbgMCU_CR=0x00000007
[22:18:38.664]    DbgMCU_APB1_Fz=0x00000000
[22:18:38.664]    DbgMCU_APB2_Fz=0x00000000
[22:18:38.664]    TraceClk_Pin=0x00040002
[22:18:38.664]    TraceD0_Pin=0x00040003
[22:18:38.664]    TraceD1_Pin=0x00040004
[22:18:38.664]    TraceD2_Pin=0x00040005
[22:18:38.665]    TraceD3_Pin=0x00040006
[22:18:38.665]  </debugvars>
[22:18:38.665]  
[22:18:38.665]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:18:38.666]    <block atomic="false" info="">
[22:18:38.666]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:18:38.666]        // -> [traceSWO <= 0x00000001]
[22:18:38.666]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:18:38.667]        // -> [traceTPIU <= 0x00000000]
[22:18:38.667]    </block>
[22:18:38.667]    <control if="traceSWO" while="" timeout="0" info="">
[22:18:38.667]      // if-block "traceSWO"
[22:18:38.667]        // =>  TRUE
[22:18:38.668]      <block atomic="false" info="">
[22:18:38.668]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:18:38.668]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:18:38.668]            <block atomic="false" info="">
[22:18:38.668]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:18:38.668]                // -> [dbgmcu_val <= 0x00000000]
[22:18:38.669]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:18:38.669]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:18:38.669]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:18:38.670]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:18:38.670]                // -> [dbgmcu_val <= 0x00000007]
[22:18:38.670]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:18:38.670]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:18:38.671]              Sequence("ConfigureTraceSWOPin");
[22:18:38.671]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:18:38.671]                  <block atomic="false" info="">
[22:18:38.671]                    __var pin     = 0;
[22:18:38.672]                      // -> [pin <= 0x00000000]
[22:18:38.672]                    __var port    = 0;
[22:18:38.672]                      // -> [port <= 0x00000000]
[22:18:38.672]                    __var portAdr = 0;
[22:18:38.672]                      // -> [portAdr <= 0x00000000]
[22:18:38.672]                    __var pos     = 0;
[22:18:38.672]                      // -> [pos <= 0x00000000]
[22:18:38.672]                    __var SWO_Pin = 0x00010003;          // PB3
[22:18:38.673]                      // -> [SWO_Pin <= 0x00010003]
[22:18:38.673]                  </block>
[22:18:38.673]                  <block atomic="false" info="configure SWO">
[22:18:38.673]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:18:38.673]                      // -> [pin <= 0x00000003]
[22:18:38.674]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:18:38.674]                      // -> [port <= 0x00000001]
[22:18:38.674]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:18:38.674]                      // -> [portAdr <= 0x40020400]
[22:18:38.674]                    pos = pin * 2;
[22:18:38.675]                      // -> [pos <= 0x00000006]
[22:18:38.675]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:18:38.676]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:38.676]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:38.677]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:18:38.677]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:18:38.678]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:38.679]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:18:38.679]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:18:38.680]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:38.680]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:18:38.681]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:18:38.682]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:38.682]                  </block>
[22:18:38.682]                  <control if="pin <  8" while="" timeout="0" info="">
[22:18:38.683]                    // if-block "pin <  8"
[22:18:38.683]                      // =>  TRUE
[22:18:38.683]                    <block atomic="false" info="">
[22:18:38.683]                      pos = ((pin    ) & 7) * 4;
[22:18:38.683]                        // -> [pos <= 0x0000000C]
[22:18:38.683]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:18:38.684]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:38.685]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:38.685]                    </block>
[22:18:38.686]                    // end if-block "pin <  8"
[22:18:38.686]                  </control>
[22:18:38.686]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:18:38.686]                    // if-block "pin >= 8"
[22:18:38.686]                      // =>  FALSE
[22:18:38.686]                    // skip if-block "pin >= 8"
[22:18:38.686]                  </control>
[22:18:38.686]                </sequence>
[22:18:38.687]            </block>
[22:18:38.687]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:18:38.687]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:18:38.688]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:38.688]            </block>
[22:18:38.688]          </sequence>
[22:18:38.689]      </block>
[22:18:38.689]      // end if-block "traceSWO"
[22:18:38.689]    </control>
[22:18:38.689]    <control if="traceTPIU" while="" timeout="0" info="">
[22:18:38.689]      // if-block "traceTPIU"
[22:18:38.689]        // =>  FALSE
[22:18:38.689]      // skip if-block "traceTPIU"
[22:18:38.690]    </control>
[22:18:38.690]  </sequence>
[22:18:38.690]  
[22:18:58.032]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:18:58.032]  
[22:18:58.079]  <debugvars>
[22:18:58.080]    // Pre-defined
[22:18:58.080]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:18:58.081]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:18:58.081]    __dp=0x00000000
[22:18:58.081]    __ap=0x00000000
[22:18:58.081]    __traceout=0x00000001      (SWO Trace)
[22:18:58.082]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:18:58.082]    __FlashAddr=0x00000000
[22:18:58.083]    __FlashLen=0x00000000
[22:18:58.083]    __FlashArg=0x00000000
[22:18:58.084]    __FlashOp=0x00000000
[22:18:58.084]    __Result=0x00000000
[22:18:58.084]    
[22:18:58.084]    // User-defined
[22:18:58.085]    DbgMCU_CR=0x00000007
[22:18:58.085]    DbgMCU_APB1_Fz=0x00000000
[22:18:58.085]    DbgMCU_APB2_Fz=0x00000000
[22:18:58.085]    TraceClk_Pin=0x00040002
[22:18:58.086]    TraceD0_Pin=0x00040003
[22:18:58.086]    TraceD1_Pin=0x00040004
[22:18:58.086]    TraceD2_Pin=0x00040005
[22:18:58.087]    TraceD3_Pin=0x00040006
[22:18:58.087]  </debugvars>
[22:18:58.088]  
[22:18:58.089]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:18:58.089]    <block atomic="false" info="">
[22:18:58.089]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:18:58.089]        // -> [traceSWO <= 0x00000001]
[22:18:58.090]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:18:58.090]        // -> [traceTPIU <= 0x00000000]
[22:18:58.090]    </block>
[22:18:58.091]    <control if="traceSWO" while="" timeout="0" info="">
[22:18:58.091]      // if-block "traceSWO"
[22:18:58.091]        // =>  TRUE
[22:18:58.092]      <block atomic="false" info="">
[22:18:58.092]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:18:58.093]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:18:58.093]            <block atomic="false" info="">
[22:18:58.093]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:18:58.093]                // -> [dbgmcu_val <= 0x00000000]
[22:18:58.094]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:18:58.094]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:18:58.094]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:18:58.096]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:18:58.097]                // -> [dbgmcu_val <= 0x00000007]
[22:18:58.097]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:18:58.097]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:18:58.098]              Sequence("ConfigureTraceSWOPin");
[22:18:58.098]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:18:58.098]                  <block atomic="false" info="">
[22:18:58.099]                    __var pin     = 0;
[22:18:58.099]                      // -> [pin <= 0x00000000]
[22:18:58.099]                    __var port    = 0;
[22:18:58.100]                      // -> [port <= 0x00000000]
[22:18:58.100]                    __var portAdr = 0;
[22:18:58.101]                      // -> [portAdr <= 0x00000000]
[22:18:58.101]                    __var pos     = 0;
[22:18:58.101]                      // -> [pos <= 0x00000000]
[22:18:58.101]                    __var SWO_Pin = 0x00010003;          // PB3
[22:18:58.102]                      // -> [SWO_Pin <= 0x00010003]
[22:18:58.102]                  </block>
[22:18:58.103]                  <block atomic="false" info="configure SWO">
[22:18:58.103]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:18:58.103]                      // -> [pin <= 0x00000003]
[22:18:58.104]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:18:58.104]                      // -> [port <= 0x00000001]
[22:18:58.105]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:18:58.105]                      // -> [portAdr <= 0x40020400]
[22:18:58.106]                    pos = pin * 2;
[22:18:58.106]                      // -> [pos <= 0x00000006]
[22:18:58.107]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:18:58.108]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:58.110]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:58.110]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:18:58.111]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:18:58.113]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:58.113]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:18:58.115]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:18:58.116]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:58.117]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:18:58.118]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:18:58.120]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:58.120]                  </block>
[22:18:58.120]                  <control if="pin <  8" while="" timeout="0" info="">
[22:18:58.121]                    // if-block "pin <  8"
[22:18:58.121]                      // =>  TRUE
[22:18:58.121]                    <block atomic="false" info="">
[22:18:58.122]                      pos = ((pin    ) & 7) * 4;
[22:18:58.122]                        // -> [pos <= 0x0000000C]
[22:18:58.122]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:18:58.124]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:18:58.125]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:58.126]                    </block>
[22:18:58.126]                    // end if-block "pin <  8"
[22:18:58.126]                  </control>
[22:18:58.127]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:18:58.127]                    // if-block "pin >= 8"
[22:18:58.127]                      // =>  FALSE
[22:18:58.128]                    // skip if-block "pin >= 8"
[22:18:58.128]                  </control>
[22:18:58.129]                </sequence>
[22:18:58.129]            </block>
[22:18:58.129]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:18:58.129]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:18:58.130]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:18:58.131]            </block>
[22:18:58.131]          </sequence>
[22:18:58.132]      </block>
[22:18:58.132]      // end if-block "traceSWO"
[22:18:58.132]    </control>
[22:18:58.132]    <control if="traceTPIU" while="" timeout="0" info="">
[22:18:58.133]      // if-block "traceTPIU"
[22:18:58.133]        // =>  FALSE
[22:18:58.133]      // skip if-block "traceTPIU"
[22:18:58.134]    </control>
[22:18:58.134]  </sequence>
[22:18:58.134]  
[22:20:43.811]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:20:43.811]  
[22:20:43.857]  <debugvars>
[22:20:43.857]    // Pre-defined
[22:20:43.859]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:20:43.859]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:20:43.860]    __dp=0x00000000
[22:20:43.860]    __ap=0x00000000
[22:20:43.860]    __traceout=0x00000001      (SWO Trace)
[22:20:43.860]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:20:43.861]    __FlashAddr=0x00000000
[22:20:43.861]    __FlashLen=0x00000000
[22:20:43.861]    __FlashArg=0x00000000
[22:20:43.861]    __FlashOp=0x00000000
[22:20:43.862]    __Result=0x00000000
[22:20:43.862]    
[22:20:43.862]    // User-defined
[22:20:43.864]    DbgMCU_CR=0x00000007
[22:20:43.864]    DbgMCU_APB1_Fz=0x00000000
[22:20:43.864]    DbgMCU_APB2_Fz=0x00000000
[22:20:43.864]    TraceClk_Pin=0x00040002
[22:20:43.864]    TraceD0_Pin=0x00040003
[22:20:43.866]    TraceD1_Pin=0x00040004
[22:20:43.866]    TraceD2_Pin=0x00040005
[22:20:43.866]    TraceD3_Pin=0x00040006
[22:20:43.866]  </debugvars>
[22:20:43.867]  
[22:20:43.867]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:20:43.867]    <block atomic="false" info="">
[22:20:43.869]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:20:43.869]        // -> [traceSWO <= 0x00000001]
[22:20:43.869]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:20:43.869]        // -> [traceTPIU <= 0x00000000]
[22:20:43.869]    </block>
[22:20:43.871]    <control if="traceSWO" while="" timeout="0" info="">
[22:20:43.871]      // if-block "traceSWO"
[22:20:43.871]        // =>  TRUE
[22:20:43.871]      <block atomic="false" info="">
[22:20:43.871]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:20:43.872]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:20:43.872]            <block atomic="false" info="">
[22:20:43.872]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:20:43.873]                // -> [dbgmcu_val <= 0x00000000]
[22:20:43.873]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:20:43.873]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:20:43.875]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:20:43.876]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:20:43.876]                // -> [dbgmcu_val <= 0x00000007]
[22:20:43.877]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:20:43.877]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:20:43.877]              Sequence("ConfigureTraceSWOPin");
[22:20:43.879]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:20:43.879]                  <block atomic="false" info="">
[22:20:43.879]                    __var pin     = 0;
[22:20:43.879]                      // -> [pin <= 0x00000000]
[22:20:43.879]                    __var port    = 0;
[22:20:43.880]                      // -> [port <= 0x00000000]
[22:20:43.880]                    __var portAdr = 0;
[22:20:43.880]                      // -> [portAdr <= 0x00000000]
[22:20:43.882]                    __var pos     = 0;
[22:20:43.882]                      // -> [pos <= 0x00000000]
[22:20:43.882]                    __var SWO_Pin = 0x00010003;          // PB3
[22:20:43.883]                      // -> [SWO_Pin <= 0x00010003]
[22:20:43.883]                  </block>
[22:20:43.883]                  <block atomic="false" info="configure SWO">
[22:20:43.883]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:20:43.885]                      // -> [pin <= 0x00000003]
[22:20:43.885]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:20:43.885]                      // -> [port <= 0x00000001]
[22:20:43.886]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:20:43.886]                      // -> [portAdr <= 0x40020400]
[22:20:43.886]                    pos = pin * 2;
[22:20:43.887]                      // -> [pos <= 0x00000006]
[22:20:43.887]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:20:43.888]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:20:43.890]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:20:43.890]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:20:43.891]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:20:43.893]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:20:43.893]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:20:43.895]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:20:43.896]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:20:43.897]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:20:43.899]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:20:43.900]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:20:43.900]                  </block>
[22:20:43.901]                  <control if="pin <  8" while="" timeout="0" info="">
[22:20:43.901]                    // if-block "pin <  8"
[22:20:43.902]                      // =>  TRUE
[22:20:43.902]                    <block atomic="false" info="">
[22:20:43.904]                      pos = ((pin    ) & 7) * 4;
[22:20:43.904]                        // -> [pos <= 0x0000000C]
[22:20:43.904]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:20:43.905]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:20:43.907]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:20:43.907]                    </block>
[22:20:43.908]                    // end if-block "pin <  8"
[22:20:43.908]                  </control>
[22:20:43.908]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:20:43.909]                    // if-block "pin >= 8"
[22:20:43.909]                      // =>  FALSE
[22:20:43.910]                    // skip if-block "pin >= 8"
[22:20:43.910]                  </control>
[22:20:43.910]                </sequence>
[22:20:43.911]            </block>
[22:20:43.911]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:20:43.912]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:20:43.913]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:20:43.913]            </block>
[22:20:43.913]          </sequence>
[22:20:43.914]      </block>
[22:20:43.914]      // end if-block "traceSWO"
[22:20:43.915]    </control>
[22:20:43.915]    <control if="traceTPIU" while="" timeout="0" info="">
[22:20:43.915]      // if-block "traceTPIU"
[22:20:43.915]        // =>  FALSE
[22:20:43.916]      // skip if-block "traceTPIU"
[22:20:43.916]    </control>
[22:20:43.917]  </sequence>
[22:20:43.917]  
[22:23:17.424]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:23:17.424]  
[22:23:17.471]  <debugvars>
[22:23:17.471]    // Pre-defined
[22:23:17.472]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:23:17.472]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:23:17.473]    __dp=0x00000000
[22:23:17.473]    __ap=0x00000000
[22:23:17.473]    __traceout=0x00000001      (SWO Trace)
[22:23:17.474]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:23:17.474]    __FlashAddr=0x00000000
[22:23:17.474]    __FlashLen=0x00000000
[22:23:17.474]    __FlashArg=0x00000000
[22:23:17.475]    __FlashOp=0x00000000
[22:23:17.475]    __Result=0x00000000
[22:23:17.475]    
[22:23:17.475]    // User-defined
[22:23:17.476]    DbgMCU_CR=0x00000007
[22:23:17.476]    DbgMCU_APB1_Fz=0x00000000
[22:23:17.476]    DbgMCU_APB2_Fz=0x00000000
[22:23:17.477]    TraceClk_Pin=0x00040002
[22:23:17.477]    TraceD0_Pin=0x00040003
[22:23:17.477]    TraceD1_Pin=0x00040004
[22:23:17.477]    TraceD2_Pin=0x00040005
[22:23:17.478]    TraceD3_Pin=0x00040006
[22:23:17.478]  </debugvars>
[22:23:17.479]  
[22:23:17.479]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:23:17.480]    <block atomic="false" info="">
[22:23:17.480]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:23:17.480]        // -> [traceSWO <= 0x00000001]
[22:23:17.481]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:23:17.481]        // -> [traceTPIU <= 0x00000000]
[22:23:17.482]    </block>
[22:23:17.482]    <control if="traceSWO" while="" timeout="0" info="">
[22:23:17.482]      // if-block "traceSWO"
[22:23:17.483]        // =>  TRUE
[22:23:17.484]      <block atomic="false" info="">
[22:23:17.484]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:23:17.484]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:23:17.484]            <block atomic="false" info="">
[22:23:17.484]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:23:17.485]                // -> [dbgmcu_val <= 0x00000000]
[22:23:17.485]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:23:17.486]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:23:17.486]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:23:17.487]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:23:17.488]                // -> [dbgmcu_val <= 0x00000007]
[22:23:17.488]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:23:17.488]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:23:17.489]              Sequence("ConfigureTraceSWOPin");
[22:23:17.489]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:23:17.490]                  <block atomic="false" info="">
[22:23:17.490]                    __var pin     = 0;
[22:23:17.490]                      // -> [pin <= 0x00000000]
[22:23:17.491]                    __var port    = 0;
[22:23:17.491]                      // -> [port <= 0x00000000]
[22:23:17.491]                    __var portAdr = 0;
[22:23:17.492]                      // -> [portAdr <= 0x00000000]
[22:23:17.492]                    __var pos     = 0;
[22:23:17.492]                      // -> [pos <= 0x00000000]
[22:23:17.493]                    __var SWO_Pin = 0x00010003;          // PB3
[22:23:17.493]                      // -> [SWO_Pin <= 0x00010003]
[22:23:17.493]                  </block>
[22:23:17.494]                  <block atomic="false" info="configure SWO">
[22:23:17.494]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:23:17.495]                      // -> [pin <= 0x00000003]
[22:23:17.495]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:23:17.495]                      // -> [port <= 0x00000001]
[22:23:17.496]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:23:17.496]                      // -> [portAdr <= 0x40020400]
[22:23:17.497]                    pos = pin * 2;
[22:23:17.497]                      // -> [pos <= 0x00000006]
[22:23:17.498]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:23:17.499]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:23:17.500]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:23:17.501]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:23:17.502]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:23:17.504]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:23:17.504]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:23:17.505]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:23:17.507]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:23:17.507]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:23:17.509]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:23:17.510]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:23:17.511]                  </block>
[22:23:17.511]                  <control if="pin <  8" while="" timeout="0" info="">
[22:23:17.511]                    // if-block "pin <  8"
[22:23:17.512]                      // =>  TRUE
[22:23:17.512]                    <block atomic="false" info="">
[22:23:17.512]                      pos = ((pin    ) & 7) * 4;
[22:23:17.513]                        // -> [pos <= 0x0000000C]
[22:23:17.513]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:23:17.515]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:23:17.516]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:23:17.517]                    </block>
[22:23:17.517]                    // end if-block "pin <  8"
[22:23:17.518]                  </control>
[22:23:17.518]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:23:17.518]                    // if-block "pin >= 8"
[22:23:17.518]                      // =>  FALSE
[22:23:17.519]                    // skip if-block "pin >= 8"
[22:23:17.519]                  </control>
[22:23:17.519]                </sequence>
[22:23:17.519]            </block>
[22:23:17.519]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:23:17.519]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:23:17.521]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:23:17.521]            </block>
[22:23:17.521]          </sequence>
[22:23:17.522]      </block>
[22:23:17.522]      // end if-block "traceSWO"
[22:23:17.522]    </control>
[22:23:17.523]    <control if="traceTPIU" while="" timeout="0" info="">
[22:23:17.523]      // if-block "traceTPIU"
[22:23:17.524]        // =>  FALSE
[22:23:17.524]      // skip if-block "traceTPIU"
[22:23:17.524]    </control>
[22:23:17.525]  </sequence>
[22:23:17.525]  
[22:23:38.515]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[22:23:38.515]  
[22:23:38.563]  <debugvars>
[22:23:38.563]    // Pre-defined
[22:23:38.564]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:23:38.564]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:23:38.564]    __dp=0x00000000
[22:23:38.565]    __ap=0x00000000
[22:23:38.565]    __traceout=0x00000001      (SWO Trace)
[22:23:38.565]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:23:38.566]    __FlashAddr=0x00000000
[22:23:38.566]    __FlashLen=0x00000000
[22:23:38.566]    __FlashArg=0x00000000
[22:23:38.566]    __FlashOp=0x00000000
[22:23:38.567]    __Result=0x00000000
[22:23:38.567]    
[22:23:38.567]    // User-defined
[22:23:38.567]    DbgMCU_CR=0x00000007
[22:23:38.568]    DbgMCU_APB1_Fz=0x00000000
[22:23:38.568]    DbgMCU_APB2_Fz=0x00000000
[22:23:38.568]    TraceClk_Pin=0x00040002
[22:23:38.569]    TraceD0_Pin=0x00040003
[22:23:38.569]    TraceD1_Pin=0x00040004
[22:23:38.569]    TraceD2_Pin=0x00040005
[22:23:38.570]    TraceD3_Pin=0x00040006
[22:23:38.570]  </debugvars>
[22:23:38.571]  
[22:23:38.571]  <sequence name="TraceStop" Pname="" disable="false" info="">
[22:23:38.571]    <block atomic="false" info="">
[22:23:38.572]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[22:23:38.572]        // -> [traceSWO <= 0x00000001]
[22:23:38.572]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[22:23:38.573]        // -> [traceTPIU <= 0x00000000]
[22:23:38.573]    </block>
[22:23:38.573]    <control if="traceSWO" while="" timeout="0" info="">
[22:23:38.574]      // if-block "traceSWO"
[22:23:38.574]        // =>  TRUE
[22:23:38.574]      <block atomic="false" info="">
[22:23:38.575]        Sequence("DisableTraceSWO");
[22:23:38.575]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[22:23:38.576]            <block atomic="false" info="">
[22:23:38.576]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:23:38.576]                // -> [dbgmcu_val <= 0x00000000]
[22:23:38.577]            </block>
[22:23:38.577]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[22:23:38.577]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[22:23:38.579]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:23:38.579]                // -> [dbgmcu_val <= 0x00000007]
[22:23:38.580]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[22:23:38.581]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:23:38.582]            </block>
[22:23:38.582]          </sequence>
[22:23:38.583]      </block>
[22:23:38.583]      // end if-block "traceSWO"
[22:23:38.584]    </control>
[22:23:38.584]    <control if="traceTPIU" while="" timeout="0" info="">
[22:23:38.584]      // if-block "traceTPIU"
[22:23:38.585]        // =>  FALSE
[22:23:38.585]      // skip if-block "traceTPIU"
[22:23:38.586]    </control>
[22:23:38.586]  </sequence>
[22:23:38.587]  
