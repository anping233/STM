/*
 *  CMSIS Pack Debug Access Sequence Log
 *  File        : D:\study\STM32\practice\gpio\prj\f411_proj_Sequences_0004.log
 *  Created     : 20:38:26 (04/06/2023)
 *  Device      : STM32F411CEUx
 *  PDSC File   : C:/Users/anping/AppData/Local/Arm/Packs/Keil/STM32F4xx_DFP/2.17.0/Keil.STM32F4xx_DFP.pdsc
 *  Config File : D:\study\STM32\practice\gpio\prj\DebugConfig\Target_1_STM32F411CEUx.dbgconf
 *
 */

[20:38:26.426]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:38:26.426]  
[20:38:26.427]  <debugvars>
[20:38:26.428]    // Pre-defined
[20:38:26.429]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:38:26.430]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[20:38:26.431]    __dp=0x00000000
[20:38:26.431]    __ap=0x00000000
[20:38:26.432]    __traceout=0x00000001      (SWO Trace)
[20:38:26.433]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:38:26.433]    __FlashAddr=0x00000000
[20:38:26.434]    __FlashLen=0x00000000
[20:38:26.434]    __FlashArg=0x00000000
[20:38:26.434]    __FlashOp=0x00000000
[20:38:26.435]    __Result=0x00000000
[20:38:26.435]    
[20:38:26.435]    // User-defined
[20:38:26.435]    DbgMCU_CR=0x00000007
[20:38:26.436]    DbgMCU_APB1_Fz=0x00000000
[20:38:26.436]    DbgMCU_APB2_Fz=0x00000000
[20:38:26.437]    TraceClk_Pin=0x00040002
[20:38:26.437]    TraceD0_Pin=0x00040003
[20:38:26.437]    TraceD1_Pin=0x00040004
[20:38:26.438]    TraceD2_Pin=0x00040005
[20:38:26.438]    TraceD3_Pin=0x00040006
[20:38:26.438]  </debugvars>
[20:38:26.439]  
[20:38:26.439]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:38:26.440]    <block atomic="false" info="">
[20:38:26.440]      Sequence("CheckID");
[20:38:26.441]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:38:26.441]          <block atomic="false" info="">
[20:38:26.441]            __var pidr1 = 0;
[20:38:26.441]              // -> [pidr1 <= 0x00000000]
[20:38:26.442]            __var pidr2 = 0;
[20:38:26.442]              // -> [pidr2 <= 0x00000000]
[20:38:26.443]            __var jep106id = 0;
[20:38:26.443]              // -> [jep106id <= 0x00000000]
[20:38:26.443]            __var ROMTableBase = 0;
[20:38:26.444]              // -> [ROMTableBase <= 0x00000000]
[20:38:26.444]            __ap = 0;      // AHB-AP
[20:38:26.444]              // -> [__ap <= 0x00000000]
[20:38:26.445]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:38:26.446]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[20:38:26.446]              // -> [ROMTableBase <= 0xE00FF000]
[20:38:26.446]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:38:26.448]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:38:26.448]              // -> [pidr1 <= 0x00000004]
[20:38:26.449]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:38:26.450]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[20:38:26.451]              // -> [pidr2 <= 0x0000000A]
[20:38:26.451]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:38:26.451]              // -> [jep106id <= 0x00000020]
[20:38:26.451]          </block>
[20:38:26.452]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:38:26.452]            // if-block "jep106id != 0x20"
[20:38:26.452]              // =>  FALSE
[20:38:26.453]            // skip if-block "jep106id != 0x20"
[20:38:26.453]          </control>
[20:38:26.454]        </sequence>
[20:38:26.454]    </block>
[20:38:26.454]  </sequence>
[20:38:26.455]  
[20:38:26.455]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:38:26.455]  
[20:38:26.455]  <debugvars>
[20:38:26.456]    // Pre-defined
[20:38:26.456]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:38:26.457]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[20:38:26.457]    __dp=0x00000000
[20:38:26.457]    __ap=0x00000000
[20:38:26.458]    __traceout=0x00000001      (SWO Trace)
[20:38:26.458]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:38:26.459]    __FlashAddr=0x00000000
[20:38:26.459]    __FlashLen=0x00000000
[20:38:26.460]    __FlashArg=0x00000000
[20:38:26.460]    __FlashOp=0x00000000
[20:38:26.461]    __Result=0x00000000
[20:38:26.461]    
[20:38:26.461]    // User-defined
[20:38:26.461]    DbgMCU_CR=0x00000007
[20:38:26.462]    DbgMCU_APB1_Fz=0x00000000
[20:38:26.462]    DbgMCU_APB2_Fz=0x00000000
[20:38:26.463]    TraceClk_Pin=0x00040002
[20:38:26.463]    TraceD0_Pin=0x00040003
[20:38:26.464]    TraceD1_Pin=0x00040004
[20:38:26.464]    TraceD2_Pin=0x00040005
[20:38:26.464]    TraceD3_Pin=0x00040006
[20:38:26.465]  </debugvars>
[20:38:26.466]  
[20:38:26.467]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:38:26.467]    <block atomic="false" info="">
[20:38:26.467]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:38:26.469]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:26.470]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:38:26.471]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:26.472]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:38:26.473]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:26.474]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:38:26.475]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:26.476]    </block>
[20:38:26.476]  </sequence>
[20:38:26.477]  
[20:38:28.145]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:38:28.145]  
[20:38:28.146]  <debugvars>
[20:38:28.146]    // Pre-defined
[20:38:28.146]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:38:28.146]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:38:28.147]    __dp=0x00000000
[20:38:28.147]    __ap=0x00000000
[20:38:28.147]    __traceout=0x00000001      (SWO Trace)
[20:38:28.148]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:38:28.148]    __FlashAddr=0x00000000
[20:38:28.148]    __FlashLen=0x00000000
[20:38:28.149]    __FlashArg=0x00000000
[20:38:28.149]    __FlashOp=0x00000000
[20:38:28.149]    __Result=0x00000000
[20:38:28.150]    
[20:38:28.150]    // User-defined
[20:38:28.150]    DbgMCU_CR=0x00000007
[20:38:28.150]    DbgMCU_APB1_Fz=0x00000000
[20:38:28.151]    DbgMCU_APB2_Fz=0x00000000
[20:38:28.151]    TraceClk_Pin=0x00040002
[20:38:28.151]    TraceD0_Pin=0x00040003
[20:38:28.151]    TraceD1_Pin=0x00040004
[20:38:28.152]    TraceD2_Pin=0x00040005
[20:38:28.152]    TraceD3_Pin=0x00040006
[20:38:28.152]  </debugvars>
[20:38:28.153]  
[20:38:28.153]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:38:28.153]    <block atomic="false" info="">
[20:38:28.153]      Sequence("CheckID");
[20:38:28.154]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:38:28.154]          <block atomic="false" info="">
[20:38:28.154]            __var pidr1 = 0;
[20:38:28.155]              // -> [pidr1 <= 0x00000000]
[20:38:28.155]            __var pidr2 = 0;
[20:38:28.155]              // -> [pidr2 <= 0x00000000]
[20:38:28.156]            __var jep106id = 0;
[20:38:28.156]              // -> [jep106id <= 0x00000000]
[20:38:28.156]            __var ROMTableBase = 0;
[20:38:28.157]              // -> [ROMTableBase <= 0x00000000]
[20:38:28.157]            __ap = 0;      // AHB-AP
[20:38:28.157]              // -> [__ap <= 0x00000000]
[20:38:28.158]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:38:28.158]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.159]              // -> [ROMTableBase <= 0xE00FF000]
[20:38:28.160]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:38:28.161]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.162]              // -> [pidr1 <= 0x00000004]
[20:38:28.162]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:38:28.163]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.164]              // -> [pidr2 <= 0x0000000A]
[20:38:28.164]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:38:28.164]              // -> [jep106id <= 0x00000020]
[20:38:28.165]          </block>
[20:38:28.166]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:38:28.166]            // if-block "jep106id != 0x20"
[20:38:28.167]              // =>  FALSE
[20:38:28.167]            // skip if-block "jep106id != 0x20"
[20:38:28.168]          </control>
[20:38:28.168]        </sequence>
[20:38:28.168]    </block>
[20:38:28.169]  </sequence>
[20:38:28.169]  
[20:38:28.170]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:38:28.170]  
[20:38:28.170]  <debugvars>
[20:38:28.170]    // Pre-defined
[20:38:28.170]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:38:28.171]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:38:28.171]    __dp=0x00000000
[20:38:28.171]    __ap=0x00000000
[20:38:28.172]    __traceout=0x00000001      (SWO Trace)
[20:38:28.172]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:38:28.172]    __FlashAddr=0x00000000
[20:38:28.172]    __FlashLen=0x00000000
[20:38:28.173]    __FlashArg=0x00000000
[20:38:28.173]    __FlashOp=0x00000000
[20:38:28.173]    __Result=0x00000000
[20:38:28.174]    
[20:38:28.174]    // User-defined
[20:38:28.174]    DbgMCU_CR=0x00000007
[20:38:28.174]    DbgMCU_APB1_Fz=0x00000000
[20:38:28.175]    DbgMCU_APB2_Fz=0x00000000
[20:38:28.175]    TraceClk_Pin=0x00040002
[20:38:28.175]    TraceD0_Pin=0x00040003
[20:38:28.176]    TraceD1_Pin=0x00040004
[20:38:28.176]    TraceD2_Pin=0x00040005
[20:38:28.176]    TraceD3_Pin=0x00040006
[20:38:28.177]  </debugvars>
[20:38:28.177]  
[20:38:28.177]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:38:28.178]    <block atomic="false" info="">
[20:38:28.178]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:38:28.179]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.180]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:38:28.181]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.182]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:38:28.183]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.184]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:38:28.185]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.185]    </block>
[20:38:28.186]  </sequence>
[20:38:28.186]  
[20:38:28.236]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:38:28.236]  
[20:38:28.237]  <debugvars>
[20:38:28.237]    // Pre-defined
[20:38:28.238]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:38:28.238]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:38:28.238]    __dp=0x00000000
[20:38:28.239]    __ap=0x00000000
[20:38:28.239]    __traceout=0x00000001      (SWO Trace)
[20:38:28.239]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:38:28.240]    __FlashAddr=0x00000000
[20:38:28.240]    __FlashLen=0x00000000
[20:38:28.241]    __FlashArg=0x00000000
[20:38:28.241]    __FlashOp=0x00000000
[20:38:28.241]    __Result=0x00000000
[20:38:28.242]    
[20:38:28.242]    // User-defined
[20:38:28.242]    DbgMCU_CR=0x00000007
[20:38:28.242]    DbgMCU_APB1_Fz=0x00000000
[20:38:28.243]    DbgMCU_APB2_Fz=0x00000000
[20:38:28.243]    TraceClk_Pin=0x00040002
[20:38:28.244]    TraceD0_Pin=0x00040003
[20:38:28.244]    TraceD1_Pin=0x00040004
[20:38:28.244]    TraceD2_Pin=0x00040005
[20:38:28.245]    TraceD3_Pin=0x00040006
[20:38:28.245]  </debugvars>
[20:38:28.245]  
[20:38:28.246]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:38:28.246]    <block atomic="false" info="">
[20:38:28.247]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:38:28.247]        // -> [traceSWO <= 0x00000001]
[20:38:28.247]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:38:28.248]        // -> [traceTPIU <= 0x00000000]
[20:38:28.248]    </block>
[20:38:28.248]    <control if="traceSWO" while="" timeout="0" info="">
[20:38:28.249]      // if-block "traceSWO"
[20:38:28.249]        // =>  TRUE
[20:38:28.249]      <block atomic="false" info="">
[20:38:28.249]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:38:28.250]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:38:28.250]            <block atomic="false" info="">
[20:38:28.250]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:38:28.251]                // -> [dbgmcu_val <= 0x00000000]
[20:38:28.251]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:38:28.251]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:38:28.251]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:38:28.253]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.253]                // -> [dbgmcu_val <= 0x00000007]
[20:38:28.254]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:38:28.255]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:38:28.255]              Sequence("ConfigureTraceSWOPin");
[20:38:28.256]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:38:28.256]                  <block atomic="false" info="">
[20:38:28.256]                    __var pin     = 0;
[20:38:28.256]                      // -> [pin <= 0x00000000]
[20:38:28.257]                    __var port    = 0;
[20:38:28.257]                      // -> [port <= 0x00000000]
[20:38:28.257]                    __var portAdr = 0;
[20:38:28.258]                      // -> [portAdr <= 0x00000000]
[20:38:28.258]                    __var pos     = 0;
[20:38:28.258]                      // -> [pos <= 0x00000000]
[20:38:28.259]                    __var SWO_Pin = 0x00010003;          // PB3
[20:38:28.259]                      // -> [SWO_Pin <= 0x00010003]
[20:38:28.260]                  </block>
[20:38:28.260]                  <block atomic="false" info="configure SWO">
[20:38:28.260]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:38:28.260]                      // -> [pin <= 0x00000003]
[20:38:28.261]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:38:28.261]                      // -> [port <= 0x00000001]
[20:38:28.262]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:38:28.262]                      // -> [portAdr <= 0x40020400]
[20:38:28.263]                    pos = pin * 2;
[20:38:28.263]                      // -> [pos <= 0x00000006]
[20:38:28.263]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:38:28.265]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.268]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.268]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:38:28.269]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.271]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.271]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:38:28.272]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.274]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.274]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:38:28.276]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.277]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.277]                  </block>
[20:38:28.278]                  <control if="pin <  8" while="" timeout="0" info="">
[20:38:28.278]                    // if-block "pin <  8"
[20:38:28.278]                      // =>  TRUE
[20:38:28.279]                    <block atomic="false" info="">
[20:38:28.279]                      pos = ((pin    ) & 7) * 4;
[20:38:28.279]                        // -> [pos <= 0x0000000C]
[20:38:28.279]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:38:28.281]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.282]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.283]                    </block>
[20:38:28.283]                    // end if-block "pin <  8"
[20:38:28.283]                  </control>
[20:38:28.284]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:38:28.284]                    // if-block "pin >= 8"
[20:38:28.284]                      // =>  FALSE
[20:38:28.285]                    // skip if-block "pin >= 8"
[20:38:28.286]                  </control>
[20:38:28.286]                </sequence>
[20:38:28.286]            </block>
[20:38:28.286]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:38:28.286]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:38:28.288]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.288]            </block>
[20:38:28.289]          </sequence>
[20:38:28.289]      </block>
[20:38:28.289]      // end if-block "traceSWO"
[20:38:28.290]    </control>
[20:38:28.290]    <control if="traceTPIU" while="" timeout="0" info="">
[20:38:28.290]      // if-block "traceTPIU"
[20:38:28.291]        // =>  FALSE
[20:38:28.291]      // skip if-block "traceTPIU"
[20:38:28.292]    </control>
[20:38:28.292]  </sequence>
[20:38:28.293]  
[20:38:28.312]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:38:28.312]  
[20:38:28.312]  <debugvars>
[20:38:28.312]    // Pre-defined
[20:38:28.313]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:38:28.313]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:38:28.313]    __dp=0x00000000
[20:38:28.314]    __ap=0x00000000
[20:38:28.314]    __traceout=0x00000001      (SWO Trace)
[20:38:28.314]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:38:28.315]    __FlashAddr=0x00000000
[20:38:28.315]    __FlashLen=0x00000000
[20:38:28.315]    __FlashArg=0x00000000
[20:38:28.316]    __FlashOp=0x00000000
[20:38:28.316]    __Result=0x00000000
[20:38:28.317]    
[20:38:28.317]    // User-defined
[20:38:28.317]    DbgMCU_CR=0x00000007
[20:38:28.318]    DbgMCU_APB1_Fz=0x00000000
[20:38:28.318]    DbgMCU_APB2_Fz=0x00000000
[20:38:28.318]    TraceClk_Pin=0x00040002
[20:38:28.319]    TraceD0_Pin=0x00040003
[20:38:28.319]    TraceD1_Pin=0x00040004
[20:38:28.319]    TraceD2_Pin=0x00040005
[20:38:28.319]    TraceD3_Pin=0x00040006
[20:38:28.320]  </debugvars>
[20:38:28.321]  
[20:38:28.321]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:38:28.321]    <block atomic="false" info="">
[20:38:28.321]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:38:28.321]        // -> [traceSWO <= 0x00000001]
[20:38:28.322]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:38:28.322]        // -> [traceTPIU <= 0x00000000]
[20:38:28.322]    </block>
[20:38:28.323]    <control if="traceSWO" while="" timeout="0" info="">
[20:38:28.323]      // if-block "traceSWO"
[20:38:28.323]        // =>  TRUE
[20:38:28.324]      <block atomic="false" info="">
[20:38:28.324]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:38:28.324]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:38:28.325]            <block atomic="false" info="">
[20:38:28.325]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:38:28.326]                // -> [dbgmcu_val <= 0x00000000]
[20:38:28.326]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:38:28.326]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:38:28.327]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:38:28.329]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.329]                // -> [dbgmcu_val <= 0x00000007]
[20:38:28.330]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:38:28.330]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:38:28.330]              Sequence("ConfigureTraceSWOPin");
[20:38:28.331]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:38:28.331]                  <block atomic="false" info="">
[20:38:28.331]                    __var pin     = 0;
[20:38:28.332]                      // -> [pin <= 0x00000000]
[20:38:28.332]                    __var port    = 0;
[20:38:28.332]                      // -> [port <= 0x00000000]
[20:38:28.333]                    __var portAdr = 0;
[20:38:28.333]                      // -> [portAdr <= 0x00000000]
[20:38:28.333]                    __var pos     = 0;
[20:38:28.334]                      // -> [pos <= 0x00000000]
[20:38:28.334]                    __var SWO_Pin = 0x00010003;          // PB3
[20:38:28.334]                      // -> [SWO_Pin <= 0x00010003]
[20:38:28.335]                  </block>
[20:38:28.335]                  <block atomic="false" info="configure SWO">
[20:38:28.335]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:38:28.336]                      // -> [pin <= 0x00000003]
[20:38:28.336]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:38:28.336]                      // -> [port <= 0x00000001]
[20:38:28.336]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:38:28.337]                      // -> [portAdr <= 0x40020400]
[20:38:28.337]                    pos = pin * 2;
[20:38:28.337]                      // -> [pos <= 0x00000006]
[20:38:28.338]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:38:28.340]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.341]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.341]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:38:28.343]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.344]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.344]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:38:28.345]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.346]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.347]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:38:28.348]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.349]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.350]                  </block>
[20:38:28.350]                  <control if="pin <  8" while="" timeout="0" info="">
[20:38:28.351]                    // if-block "pin <  8"
[20:38:28.351]                      // =>  TRUE
[20:38:28.351]                    <block atomic="false" info="">
[20:38:28.352]                      pos = ((pin    ) & 7) * 4;
[20:38:28.352]                        // -> [pos <= 0x0000000C]
[20:38:28.352]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:38:28.354]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.355]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.356]                    </block>
[20:38:28.356]                    // end if-block "pin <  8"
[20:38:28.356]                  </control>
[20:38:28.357]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:38:28.357]                    // if-block "pin >= 8"
[20:38:28.358]                      // =>  FALSE
[20:38:28.358]                    // skip if-block "pin >= 8"
[20:38:28.358]                  </control>
[20:38:28.359]                </sequence>
[20:38:28.359]            </block>
[20:38:28.359]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:38:28.360]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:38:28.361]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:28.361]            </block>
[20:38:28.362]          </sequence>
[20:38:28.362]      </block>
[20:38:28.362]      // end if-block "traceSWO"
[20:38:28.363]    </control>
[20:38:28.363]    <control if="traceTPIU" while="" timeout="0" info="">
[20:38:28.363]      // if-block "traceTPIU"
[20:38:28.364]        // =>  FALSE
[20:38:28.364]      // skip if-block "traceTPIU"
[20:38:28.365]    </control>
[20:38:28.365]  </sequence>
[20:38:28.367]  
[20:38:29.005]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:38:29.005]  
[20:38:29.006]  <debugvars>
[20:38:29.006]    // Pre-defined
[20:38:29.006]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:38:29.006]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:38:29.007]    __dp=0x00000000
[20:38:29.007]    __ap=0x00000000
[20:38:29.007]    __traceout=0x00000001      (SWO Trace)
[20:38:29.007]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:38:29.007]    __FlashAddr=0x00000000
[20:38:29.007]    __FlashLen=0x00000000
[20:38:29.008]    __FlashArg=0x00000000
[20:38:29.008]    __FlashOp=0x00000000
[20:38:29.008]    __Result=0x00000000
[20:38:29.008]    
[20:38:29.008]    // User-defined
[20:38:29.008]    DbgMCU_CR=0x00000007
[20:38:29.009]    DbgMCU_APB1_Fz=0x00000000
[20:38:29.009]    DbgMCU_APB2_Fz=0x00000000
[20:38:29.009]    TraceClk_Pin=0x00040002
[20:38:29.009]    TraceD0_Pin=0x00040003
[20:38:29.009]    TraceD1_Pin=0x00040004
[20:38:29.010]    TraceD2_Pin=0x00040005
[20:38:29.010]    TraceD3_Pin=0x00040006
[20:38:29.010]  </debugvars>
[20:38:29.010]  
[20:38:29.010]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:38:29.010]    <block atomic="false" info="">
[20:38:29.011]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:38:29.011]        // -> [traceSWO <= 0x00000001]
[20:38:29.011]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:38:29.011]        // -> [traceTPIU <= 0x00000000]
[20:38:29.011]    </block>
[20:38:29.012]    <control if="traceSWO" while="" timeout="0" info="">
[20:38:29.012]      // if-block "traceSWO"
[20:38:29.012]        // =>  TRUE
[20:38:29.013]      <block atomic="false" info="">
[20:38:29.013]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:38:29.013]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:38:29.013]            <block atomic="false" info="">
[20:38:29.014]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:38:29.014]                // -> [dbgmcu_val <= 0x00000000]
[20:38:29.015]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:38:29.015]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:38:29.015]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:38:29.015]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:38:29.016]                // -> [dbgmcu_val <= 0x00000007]
[20:38:29.016]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:38:29.016]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:38:29.016]              Sequence("ConfigureTraceSWOPin");
[20:38:29.016]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:38:29.017]                  <block atomic="false" info="">
[20:38:29.017]                    __var pin     = 0;
[20:38:29.017]                      // -> [pin <= 0x00000000]
[20:38:29.017]                    __var port    = 0;
[20:38:29.017]                      // -> [port <= 0x00000000]
[20:38:29.018]                    __var portAdr = 0;
[20:38:29.018]                      // -> [portAdr <= 0x00000000]
[20:38:29.019]                    __var pos     = 0;
[20:38:29.019]                      // -> [pos <= 0x00000000]
[20:38:29.019]                    __var SWO_Pin = 0x00010003;          // PB3
[20:38:29.019]                      // -> [SWO_Pin <= 0x00010003]
[20:38:29.019]                  </block>
[20:38:29.019]                  <block atomic="false" info="configure SWO">
[20:38:29.019]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:38:29.019]                      // -> [pin <= 0x00000003]
[20:38:29.020]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:38:29.020]                      // -> [port <= 0x00000001]
[20:38:29.020]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:38:29.020]                      // -> [portAdr <= 0x40020400]
[20:38:29.020]                    pos = pin * 2;
[20:38:29.021]                      // -> [pos <= 0x00000006]
[20:38:29.021]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:38:29.022]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:38:29.023]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:29.024]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:38:29.024]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:38:29.025]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:29.026]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:38:29.027]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:38:29.029]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:29.029]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:38:29.030]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:38:29.032]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:29.032]                  </block>
[20:38:29.032]                  <control if="pin <  8" while="" timeout="0" info="">
[20:38:29.032]                    // if-block "pin <  8"
[20:38:29.032]                      // =>  TRUE
[20:38:29.033]                    <block atomic="false" info="">
[20:38:29.033]                      pos = ((pin    ) & 7) * 4;
[20:38:29.033]                        // -> [pos <= 0x0000000C]
[20:38:29.033]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:38:29.034]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:38:29.035]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:29.035]                    </block>
[20:38:29.035]                    // end if-block "pin <  8"
[20:38:29.035]                  </control>
[20:38:29.035]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:38:29.036]                    // if-block "pin >= 8"
[20:38:29.036]                      // =>  FALSE
[20:38:29.036]                    // skip if-block "pin >= 8"
[20:38:29.036]                  </control>
[20:38:29.036]                </sequence>
[20:38:29.037]            </block>
[20:38:29.037]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:38:29.037]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:38:29.038]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:38:29.038]            </block>
[20:38:29.039]          </sequence>
[20:38:29.039]      </block>
[20:38:29.039]      // end if-block "traceSWO"
[20:38:29.039]    </control>
[20:38:29.039]    <control if="traceTPIU" while="" timeout="0" info="">
[20:38:29.040]      // if-block "traceTPIU"
[20:38:29.040]        // =>  FALSE
[20:38:29.041]      // skip if-block "traceTPIU"
[20:38:29.041]    </control>
[20:38:29.041]  </sequence>
[20:38:29.041]  
[20:40:13.098]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:40:13.098]  
[20:40:13.106]  <debugvars>
[20:40:13.107]    // Pre-defined
[20:40:13.107]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:40:13.107]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:40:13.108]    __dp=0x00000000
[20:40:13.108]    __ap=0x00000000
[20:40:13.109]    __traceout=0x00000001      (SWO Trace)
[20:40:13.109]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:40:13.110]    __FlashAddr=0x00000000
[20:40:13.110]    __FlashLen=0x00000000
[20:40:13.111]    __FlashArg=0x00000000
[20:40:13.111]    __FlashOp=0x00000000
[20:40:13.111]    __Result=0x00000000
[20:40:13.112]    
[20:40:13.112]    // User-defined
[20:40:13.112]    DbgMCU_CR=0x00000007
[20:40:13.113]    DbgMCU_APB1_Fz=0x00000000
[20:40:13.113]    DbgMCU_APB2_Fz=0x00000000
[20:40:13.114]    TraceClk_Pin=0x00040002
[20:40:13.114]    TraceD0_Pin=0x00040003
[20:40:13.115]    TraceD1_Pin=0x00040004
[20:40:13.115]    TraceD2_Pin=0x00040005
[20:40:13.115]    TraceD3_Pin=0x00040006
[20:40:13.115]  </debugvars>
[20:40:13.116]  
[20:40:13.116]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:40:13.117]    <block atomic="false" info="">
[20:40:13.117]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:40:13.117]        // -> [traceSWO <= 0x00000001]
[20:40:13.117]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:40:13.118]        // -> [traceTPIU <= 0x00000000]
[20:40:13.118]    </block>
[20:40:13.118]    <control if="traceSWO" while="" timeout="0" info="">
[20:40:13.119]      // if-block "traceSWO"
[20:40:13.119]        // =>  TRUE
[20:40:13.120]      <block atomic="false" info="">
[20:40:13.120]        Sequence("DisableTraceSWO");
[20:40:13.120]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:40:13.121]            <block atomic="false" info="">
[20:40:13.121]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:40:13.122]                // -> [dbgmcu_val <= 0x00000000]
[20:40:13.122]            </block>
[20:40:13.122]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:40:13.123]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:40:13.124]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:40:13.124]                // -> [dbgmcu_val <= 0x00000007]
[20:40:13.125]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[20:40:13.126]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:13.127]            </block>
[20:40:13.128]          </sequence>
[20:40:13.128]      </block>
[20:40:13.129]      // end if-block "traceSWO"
[20:40:13.129]    </control>
[20:40:13.130]    <control if="traceTPIU" while="" timeout="0" info="">
[20:40:13.130]      // if-block "traceTPIU"
[20:40:13.130]        // =>  FALSE
[20:40:13.131]      // skip if-block "traceTPIU"
[20:40:13.131]    </control>
[20:40:13.132]  </sequence>
[20:40:13.132]  
[20:40:51.460]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:40:51.460]  
[20:40:51.508]  <debugvars>
[20:40:51.508]    // Pre-defined
[20:40:51.508]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:40:51.509]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:40:51.509]    __dp=0x00000000
[20:40:51.510]    __ap=0x00000000
[20:40:51.510]    __traceout=0x00000001      (SWO Trace)
[20:40:51.511]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:40:51.511]    __FlashAddr=0x00000000
[20:40:51.511]    __FlashLen=0x00000000
[20:40:51.512]    __FlashArg=0x00000000
[20:40:51.512]    __FlashOp=0x00000000
[20:40:51.512]    __Result=0x00000000
[20:40:51.513]    
[20:40:51.513]    // User-defined
[20:40:51.514]    DbgMCU_CR=0x00000007
[20:40:51.514]    DbgMCU_APB1_Fz=0x00000000
[20:40:51.514]    DbgMCU_APB2_Fz=0x00000000
[20:40:51.514]    TraceClk_Pin=0x00040002
[20:40:51.515]    TraceD0_Pin=0x00040003
[20:40:51.515]    TraceD1_Pin=0x00040004
[20:40:51.515]    TraceD2_Pin=0x00040005
[20:40:51.515]    TraceD3_Pin=0x00040006
[20:40:51.516]  </debugvars>
[20:40:51.516]  
[20:40:51.517]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:40:51.517]    <block atomic="false" info="">
[20:40:51.517]      Sequence("CheckID");
[20:40:51.518]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:40:51.518]          <block atomic="false" info="">
[20:40:51.518]            __var pidr1 = 0;
[20:40:51.519]              // -> [pidr1 <= 0x00000000]
[20:40:51.519]            __var pidr2 = 0;
[20:40:51.520]              // -> [pidr2 <= 0x00000000]
[20:40:51.520]            __var jep106id = 0;
[20:40:51.521]              // -> [jep106id <= 0x00000000]
[20:40:51.521]            __var ROMTableBase = 0;
[20:40:51.522]              // -> [ROMTableBase <= 0x00000000]
[20:40:51.522]            __ap = 0;      // AHB-AP
[20:40:51.522]              // -> [__ap <= 0x00000000]
[20:40:51.523]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:40:51.524]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.524]              // -> [ROMTableBase <= 0xE00FF000]
[20:40:51.524]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:40:51.527]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.528]              // -> [pidr1 <= 0x00000004]
[20:40:51.528]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:40:51.530]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.530]              // -> [pidr2 <= 0x0000000A]
[20:40:51.531]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:40:51.531]              // -> [jep106id <= 0x00000020]
[20:40:51.531]          </block>
[20:40:51.532]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:40:51.532]            // if-block "jep106id != 0x20"
[20:40:51.533]              // =>  FALSE
[20:40:51.533]            // skip if-block "jep106id != 0x20"
[20:40:51.533]          </control>
[20:40:51.534]        </sequence>
[20:40:51.534]    </block>
[20:40:51.534]  </sequence>
[20:40:51.535]  
[20:40:51.536]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:40:51.536]  
[20:40:51.536]  <debugvars>
[20:40:51.536]    // Pre-defined
[20:40:51.536]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:40:51.536]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:40:51.537]    __dp=0x00000000
[20:40:51.537]    __ap=0x00000000
[20:40:51.537]    __traceout=0x00000001      (SWO Trace)
[20:40:51.538]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:40:51.538]    __FlashAddr=0x00000000
[20:40:51.539]    __FlashLen=0x00000000
[20:40:51.539]    __FlashArg=0x00000000
[20:40:51.539]    __FlashOp=0x00000000
[20:40:51.540]    __Result=0x00000000
[20:40:51.540]    
[20:40:51.540]    // User-defined
[20:40:51.540]    DbgMCU_CR=0x00000007
[20:40:51.541]    DbgMCU_APB1_Fz=0x00000000
[20:40:51.541]    DbgMCU_APB2_Fz=0x00000000
[20:40:51.541]    TraceClk_Pin=0x00040002
[20:40:51.542]    TraceD0_Pin=0x00040003
[20:40:51.542]    TraceD1_Pin=0x00040004
[20:40:51.543]    TraceD2_Pin=0x00040005
[20:40:51.543]    TraceD3_Pin=0x00040006
[20:40:51.543]  </debugvars>
[20:40:51.544]  
[20:40:51.544]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:40:51.544]    <block atomic="false" info="">
[20:40:51.545]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:40:51.547]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.547]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:40:51.549]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.550]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:40:51.552]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.552]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:40:51.553]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.554]    </block>
[20:40:51.554]  </sequence>
[20:40:51.554]  
[20:40:51.612]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:40:51.612]  
[20:40:51.613]  <debugvars>
[20:40:51.613]    // Pre-defined
[20:40:51.614]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:40:51.614]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:40:51.614]    __dp=0x00000000
[20:40:51.615]    __ap=0x00000000
[20:40:51.615]    __traceout=0x00000001      (SWO Trace)
[20:40:51.616]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:40:51.616]    __FlashAddr=0x00000000
[20:40:51.617]    __FlashLen=0x00000000
[20:40:51.617]    __FlashArg=0x00000000
[20:40:51.617]    __FlashOp=0x00000000
[20:40:51.618]    __Result=0x00000000
[20:40:51.618]    
[20:40:51.618]    // User-defined
[20:40:51.618]    DbgMCU_CR=0x00000007
[20:40:51.619]    DbgMCU_APB1_Fz=0x00000000
[20:40:51.619]    DbgMCU_APB2_Fz=0x00000000
[20:40:51.620]    TraceClk_Pin=0x00040002
[20:40:51.620]    TraceD0_Pin=0x00040003
[20:40:51.620]    TraceD1_Pin=0x00040004
[20:40:51.620]    TraceD2_Pin=0x00040005
[20:40:51.621]    TraceD3_Pin=0x00040006
[20:40:51.621]  </debugvars>
[20:40:51.621]  
[20:40:51.622]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:40:51.622]    <block atomic="false" info="">
[20:40:51.622]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:40:51.623]        // -> [traceSWO <= 0x00000001]
[20:40:51.623]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:40:51.623]        // -> [traceTPIU <= 0x00000000]
[20:40:51.624]    </block>
[20:40:51.624]    <control if="traceSWO" while="" timeout="0" info="">
[20:40:51.624]      // if-block "traceSWO"
[20:40:51.625]        // =>  TRUE
[20:40:51.625]      <block atomic="false" info="">
[20:40:51.625]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:40:51.626]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:40:51.626]            <block atomic="false" info="">
[20:40:51.627]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:40:51.628]                // -> [dbgmcu_val <= 0x00000000]
[20:40:51.628]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:40:51.628]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:40:51.629]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:40:51.630]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.631]                // -> [dbgmcu_val <= 0x00000007]
[20:40:51.631]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:40:51.631]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:40:51.631]              Sequence("ConfigureTraceSWOPin");
[20:40:51.632]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:40:51.632]                  <block atomic="false" info="">
[20:40:51.632]                    __var pin     = 0;
[20:40:51.633]                      // -> [pin <= 0x00000000]
[20:40:51.633]                    __var port    = 0;
[20:40:51.633]                      // -> [port <= 0x00000000]
[20:40:51.634]                    __var portAdr = 0;
[20:40:51.634]                      // -> [portAdr <= 0x00000000]
[20:40:51.634]                    __var pos     = 0;
[20:40:51.635]                      // -> [pos <= 0x00000000]
[20:40:51.635]                    __var SWO_Pin = 0x00010003;          // PB3
[20:40:51.635]                      // -> [SWO_Pin <= 0x00010003]
[20:40:51.635]                  </block>
[20:40:51.636]                  <block atomic="false" info="configure SWO">
[20:40:51.636]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:40:51.636]                      // -> [pin <= 0x00000003]
[20:40:51.637]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:40:51.637]                      // -> [port <= 0x00000001]
[20:40:51.638]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:40:51.638]                      // -> [portAdr <= 0x40020400]
[20:40:51.638]                    pos = pin * 2;
[20:40:51.638]                      // -> [pos <= 0x00000006]
[20:40:51.639]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:40:51.640]                      // -> [Read32(0x40023830) => 0x00000007]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.642]                      // -> [Write32(0x40023830, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.642]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:40:51.644]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.645]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.645]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:40:51.647]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.648]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.649]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:40:51.650]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.652]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.652]                  </block>
[20:40:51.652]                  <control if="pin <  8" while="" timeout="0" info="">
[20:40:51.653]                    // if-block "pin <  8"
[20:40:51.653]                      // =>  TRUE
[20:40:51.653]                    <block atomic="false" info="">
[20:40:51.653]                      pos = ((pin    ) & 7) * 4;
[20:40:51.654]                        // -> [pos <= 0x0000000C]
[20:40:51.654]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:40:51.655]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.656]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.657]                    </block>
[20:40:51.657]                    // end if-block "pin <  8"
[20:40:51.657]                  </control>
[20:40:51.658]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:40:51.658]                    // if-block "pin >= 8"
[20:40:51.659]                      // =>  FALSE
[20:40:51.659]                    // skip if-block "pin >= 8"
[20:40:51.660]                  </control>
[20:40:51.660]                </sequence>
[20:40:51.661]            </block>
[20:40:51.661]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:40:51.662]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:40:51.663]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.663]            </block>
[20:40:51.664]          </sequence>
[20:40:51.664]      </block>
[20:40:51.664]      // end if-block "traceSWO"
[20:40:51.665]    </control>
[20:40:51.665]    <control if="traceTPIU" while="" timeout="0" info="">
[20:40:51.665]      // if-block "traceTPIU"
[20:40:51.666]        // =>  FALSE
[20:40:51.666]      // skip if-block "traceTPIU"
[20:40:51.666]    </control>
[20:40:51.667]  </sequence>
[20:40:51.667]  
[20:40:51.687]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:40:51.687]  
[20:40:51.687]  <debugvars>
[20:40:51.688]    // Pre-defined
[20:40:51.688]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:40:51.688]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:40:51.689]    __dp=0x00000000
[20:40:51.689]    __ap=0x00000000
[20:40:51.689]    __traceout=0x00000001      (SWO Trace)
[20:40:51.690]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:40:51.690]    __FlashAddr=0x00000000
[20:40:51.691]    __FlashLen=0x00000000
[20:40:51.691]    __FlashArg=0x00000000
[20:40:51.691]    __FlashOp=0x00000000
[20:40:51.692]    __Result=0x00000000
[20:40:51.692]    
[20:40:51.692]    // User-defined
[20:40:51.693]    DbgMCU_CR=0x00000007
[20:40:51.693]    DbgMCU_APB1_Fz=0x00000000
[20:40:51.694]    DbgMCU_APB2_Fz=0x00000000
[20:40:51.695]    TraceClk_Pin=0x00040002
[20:40:51.695]    TraceD0_Pin=0x00040003
[20:40:51.695]    TraceD1_Pin=0x00040004
[20:40:51.696]    TraceD2_Pin=0x00040005
[20:40:51.696]    TraceD3_Pin=0x00040006
[20:40:51.696]  </debugvars>
[20:40:51.697]  
[20:40:51.697]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:40:51.697]    <block atomic="false" info="">
[20:40:51.698]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:40:51.698]        // -> [traceSWO <= 0x00000001]
[20:40:51.698]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:40:51.699]        // -> [traceTPIU <= 0x00000000]
[20:40:51.699]    </block>
[20:40:51.699]    <control if="traceSWO" while="" timeout="0" info="">
[20:40:51.700]      // if-block "traceSWO"
[20:40:51.700]        // =>  TRUE
[20:40:51.700]      <block atomic="false" info="">
[20:40:51.701]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:40:51.701]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:40:51.701]            <block atomic="false" info="">
[20:40:51.702]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:40:51.702]                // -> [dbgmcu_val <= 0x00000000]
[20:40:51.702]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:40:51.703]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:40:51.703]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:40:51.705]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.705]                // -> [dbgmcu_val <= 0x00000007]
[20:40:51.706]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:40:51.706]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:40:51.706]              Sequence("ConfigureTraceSWOPin");
[20:40:51.707]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:40:51.707]                  <block atomic="false" info="">
[20:40:51.707]                    __var pin     = 0;
[20:40:51.708]                      // -> [pin <= 0x00000000]
[20:40:51.708]                    __var port    = 0;
[20:40:51.709]                      // -> [port <= 0x00000000]
[20:40:51.709]                    __var portAdr = 0;
[20:40:51.710]                      // -> [portAdr <= 0x00000000]
[20:40:51.710]                    __var pos     = 0;
[20:40:51.710]                      // -> [pos <= 0x00000000]
[20:40:51.711]                    __var SWO_Pin = 0x00010003;          // PB3
[20:40:51.711]                      // -> [SWO_Pin <= 0x00010003]
[20:40:51.711]                  </block>
[20:40:51.712]                  <block atomic="false" info="configure SWO">
[20:40:51.712]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:40:51.713]                      // -> [pin <= 0x00000003]
[20:40:51.713]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:40:51.713]                      // -> [port <= 0x00000001]
[20:40:51.714]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:40:51.714]                      // -> [portAdr <= 0x40020400]
[20:40:51.714]                    pos = pin * 2;
[20:40:51.714]                      // -> [pos <= 0x00000006]
[20:40:51.715]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:40:51.716]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.718]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.718]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:40:51.719]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.721]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.721]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:40:51.723]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.724]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.724]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:40:51.726]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.728]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.728]                  </block>
[20:40:51.728]                  <control if="pin <  8" while="" timeout="0" info="">
[20:40:51.729]                    // if-block "pin <  8"
[20:40:51.729]                      // =>  TRUE
[20:40:51.730]                    <block atomic="false" info="">
[20:40:51.730]                      pos = ((pin    ) & 7) * 4;
[20:40:51.730]                        // -> [pos <= 0x0000000C]
[20:40:51.731]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:40:51.732]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.734]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.734]                    </block>
[20:40:51.734]                    // end if-block "pin <  8"
[20:40:51.734]                  </control>
[20:40:51.735]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:40:51.735]                    // if-block "pin >= 8"
[20:40:51.735]                      // =>  FALSE
[20:40:51.736]                    // skip if-block "pin >= 8"
[20:40:51.736]                  </control>
[20:40:51.736]                </sequence>
[20:40:51.736]            </block>
[20:40:51.737]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:40:51.737]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:40:51.738]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:51.739]            </block>
[20:40:51.739]          </sequence>
[20:40:51.740]      </block>
[20:40:51.740]      // end if-block "traceSWO"
[20:40:51.741]    </control>
[20:40:51.741]    <control if="traceTPIU" while="" timeout="0" info="">
[20:40:51.741]      // if-block "traceTPIU"
[20:40:51.742]        // =>  FALSE
[20:40:51.742]      // skip if-block "traceTPIU"
[20:40:51.743]    </control>
[20:40:51.743]  </sequence>
[20:40:51.743]  
[20:40:52.341]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:40:52.341]  
[20:40:52.389]  <debugvars>
[20:40:52.389]    // Pre-defined
[20:40:52.390]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:40:52.390]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:40:52.391]    __dp=0x00000000
[20:40:52.391]    __ap=0x00000000
[20:40:52.391]    __traceout=0x00000001      (SWO Trace)
[20:40:52.392]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:40:52.392]    __FlashAddr=0x00000000
[20:40:52.393]    __FlashLen=0x00000000
[20:40:52.393]    __FlashArg=0x00000000
[20:40:52.393]    __FlashOp=0x00000000
[20:40:52.393]    __Result=0x00000000
[20:40:52.394]    
[20:40:52.394]    // User-defined
[20:40:52.395]    DbgMCU_CR=0x00000007
[20:40:52.396]    DbgMCU_APB1_Fz=0x00000000
[20:40:52.396]    DbgMCU_APB2_Fz=0x00000000
[20:40:52.397]    TraceClk_Pin=0x00040002
[20:40:52.398]    TraceD0_Pin=0x00040003
[20:40:52.398]    TraceD1_Pin=0x00040004
[20:40:52.398]    TraceD2_Pin=0x00040005
[20:40:52.399]    TraceD3_Pin=0x00040006
[20:40:52.399]  </debugvars>
[20:40:52.400]  
[20:40:52.400]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:40:52.401]    <block atomic="false" info="">
[20:40:52.401]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:40:52.401]        // -> [traceSWO <= 0x00000001]
[20:40:52.402]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:40:52.402]        // -> [traceTPIU <= 0x00000000]
[20:40:52.402]    </block>
[20:40:52.403]    <control if="traceSWO" while="" timeout="0" info="">
[20:40:52.403]      // if-block "traceSWO"
[20:40:52.403]        // =>  TRUE
[20:40:52.404]      <block atomic="false" info="">
[20:40:52.404]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:40:52.404]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:40:52.404]            <block atomic="false" info="">
[20:40:52.405]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:40:52.405]                // -> [dbgmcu_val <= 0x00000000]
[20:40:52.406]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:40:52.406]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:40:52.406]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:40:52.408]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:40:52.408]                // -> [dbgmcu_val <= 0x00000007]
[20:40:52.408]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:40:52.409]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:40:52.409]              Sequence("ConfigureTraceSWOPin");
[20:40:52.410]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:40:52.410]                  <block atomic="false" info="">
[20:40:52.411]                    __var pin     = 0;
[20:40:52.411]                      // -> [pin <= 0x00000000]
[20:40:52.412]                    __var port    = 0;
[20:40:52.412]                      // -> [port <= 0x00000000]
[20:40:52.412]                    __var portAdr = 0;
[20:40:52.413]                      // -> [portAdr <= 0x00000000]
[20:40:52.413]                    __var pos     = 0;
[20:40:52.414]                      // -> [pos <= 0x00000000]
[20:40:52.414]                    __var SWO_Pin = 0x00010003;          // PB3
[20:40:52.414]                      // -> [SWO_Pin <= 0x00010003]
[20:40:52.415]                  </block>
[20:40:52.415]                  <block atomic="false" info="configure SWO">
[20:40:52.416]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:40:52.416]                      // -> [pin <= 0x00000003]
[20:40:52.416]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:40:52.417]                      // -> [port <= 0x00000001]
[20:40:52.417]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:40:52.417]                      // -> [portAdr <= 0x40020400]
[20:40:52.418]                    pos = pin * 2;
[20:40:52.418]                      // -> [pos <= 0x00000006]
[20:40:52.418]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:40:52.420]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:40:52.421]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:52.422]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:40:52.423]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:40:52.425]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:52.425]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:40:52.427]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:40:52.429]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:52.429]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:40:52.430]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:40:52.432]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:52.432]                  </block>
[20:40:52.433]                  <control if="pin <  8" while="" timeout="0" info="">
[20:40:52.434]                    // if-block "pin <  8"
[20:40:52.434]                      // =>  TRUE
[20:40:52.434]                    <block atomic="false" info="">
[20:40:52.434]                      pos = ((pin    ) & 7) * 4;
[20:40:52.435]                        // -> [pos <= 0x0000000C]
[20:40:52.435]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:40:52.437]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:40:52.439]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:52.439]                    </block>
[20:40:52.439]                    // end if-block "pin <  8"
[20:40:52.440]                  </control>
[20:40:52.440]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:40:52.440]                    // if-block "pin >= 8"
[20:40:52.441]                      // =>  FALSE
[20:40:52.441]                    // skip if-block "pin >= 8"
[20:40:52.441]                  </control>
[20:40:52.442]                </sequence>
[20:40:52.442]            </block>
[20:40:52.443]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:40:52.444]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:40:52.445]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:40:52.445]            </block>
[20:40:52.446]          </sequence>
[20:40:52.446]      </block>
[20:40:52.447]      // end if-block "traceSWO"
[20:40:52.447]    </control>
[20:40:52.447]    <control if="traceTPIU" while="" timeout="0" info="">
[20:40:52.447]      // if-block "traceTPIU"
[20:40:52.448]        // =>  FALSE
[20:40:52.448]      // skip if-block "traceTPIU"
[20:40:52.449]    </control>
[20:40:52.450]  </sequence>
[20:40:52.450]  
[20:41:19.857]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:41:19.857]  
[20:41:19.904]  <debugvars>
[20:41:19.904]    // Pre-defined
[20:41:19.905]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:41:19.906]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:41:19.906]    __dp=0x00000000
[20:41:19.906]    __ap=0x00000000
[20:41:19.907]    __traceout=0x00000001      (SWO Trace)
[20:41:19.907]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:41:19.908]    __FlashAddr=0x00000000
[20:41:19.908]    __FlashLen=0x00000000
[20:41:19.909]    __FlashArg=0x00000000
[20:41:19.909]    __FlashOp=0x00000000
[20:41:19.909]    __Result=0x00000000
[20:41:19.909]    
[20:41:19.910]    // User-defined
[20:41:19.910]    DbgMCU_CR=0x00000007
[20:41:19.910]    DbgMCU_APB1_Fz=0x00000000
[20:41:19.910]    DbgMCU_APB2_Fz=0x00000000
[20:41:19.911]    TraceClk_Pin=0x00040002
[20:41:19.911]    TraceD0_Pin=0x00040003
[20:41:19.912]    TraceD1_Pin=0x00040004
[20:41:19.912]    TraceD2_Pin=0x00040005
[20:41:19.912]    TraceD3_Pin=0x00040006
[20:41:19.913]  </debugvars>
[20:41:19.913]  
[20:41:19.914]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:41:19.914]    <block atomic="false" info="">
[20:41:19.915]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:41:19.915]        // -> [traceSWO <= 0x00000001]
[20:41:19.915]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:41:19.915]        // -> [traceTPIU <= 0x00000000]
[20:41:19.916]    </block>
[20:41:19.916]    <control if="traceSWO" while="" timeout="0" info="">
[20:41:19.917]      // if-block "traceSWO"
[20:41:19.917]        // =>  TRUE
[20:41:19.917]      <block atomic="false" info="">
[20:41:19.918]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:41:19.918]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:41:19.918]            <block atomic="false" info="">
[20:41:19.919]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:41:19.919]                // -> [dbgmcu_val <= 0x00000000]
[20:41:19.920]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:41:19.920]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:41:19.921]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:41:19.922]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:41:19.922]                // -> [dbgmcu_val <= 0x00000007]
[20:41:19.923]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:41:19.923]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:41:19.923]              Sequence("ConfigureTraceSWOPin");
[20:41:19.924]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:41:19.924]                  <block atomic="false" info="">
[20:41:19.925]                    __var pin     = 0;
[20:41:19.925]                      // -> [pin <= 0x00000000]
[20:41:19.925]                    __var port    = 0;
[20:41:19.925]                      // -> [port <= 0x00000000]
[20:41:19.926]                    __var portAdr = 0;
[20:41:19.927]                      // -> [portAdr <= 0x00000000]
[20:41:19.927]                    __var pos     = 0;
[20:41:19.928]                      // -> [pos <= 0x00000000]
[20:41:19.928]                    __var SWO_Pin = 0x00010003;          // PB3
[20:41:19.929]                      // -> [SWO_Pin <= 0x00010003]
[20:41:19.929]                  </block>
[20:41:19.929]                  <block atomic="false" info="configure SWO">
[20:41:19.930]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:41:19.930]                      // -> [pin <= 0x00000003]
[20:41:19.931]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:41:19.931]                      // -> [port <= 0x00000001]
[20:41:19.931]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:41:19.932]                      // -> [portAdr <= 0x40020400]
[20:41:19.932]                    pos = pin * 2;
[20:41:19.933]                      // -> [pos <= 0x00000006]
[20:41:19.933]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:41:19.935]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:41:19.936]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:19.936]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:41:19.938]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:41:19.939]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:19.939]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:41:19.940]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:41:19.942]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:19.942]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:41:19.944]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:41:19.945]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:19.945]                  </block>
[20:41:19.946]                  <control if="pin <  8" while="" timeout="0" info="">
[20:41:19.946]                    // if-block "pin <  8"
[20:41:19.947]                      // =>  TRUE
[20:41:19.947]                    <block atomic="false" info="">
[20:41:19.947]                      pos = ((pin    ) & 7) * 4;
[20:41:19.948]                        // -> [pos <= 0x0000000C]
[20:41:19.948]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:41:19.949]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:41:19.951]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:19.951]                    </block>
[20:41:19.952]                    // end if-block "pin <  8"
[20:41:19.952]                  </control>
[20:41:19.952]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:41:19.952]                    // if-block "pin >= 8"
[20:41:19.953]                      // =>  FALSE
[20:41:19.953]                    // skip if-block "pin >= 8"
[20:41:19.953]                  </control>
[20:41:19.953]                </sequence>
[20:41:19.954]            </block>
[20:41:19.954]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:41:19.954]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:41:19.956]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:41:19.956]            </block>
[20:41:19.956]          </sequence>
[20:41:19.957]      </block>
[20:41:19.957]      // end if-block "traceSWO"
[20:41:19.958]    </control>
[20:41:19.958]    <control if="traceTPIU" while="" timeout="0" info="">
[20:41:19.958]      // if-block "traceTPIU"
[20:41:19.959]        // =>  FALSE
[20:41:19.959]      // skip if-block "traceTPIU"
[20:41:19.959]    </control>
[20:41:19.960]  </sequence>
[20:41:19.960]  
[20:42:08.405]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[20:42:08.405]  
[20:42:08.453]  <debugvars>
[20:42:08.454]    // Pre-defined
[20:42:08.454]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:42:08.454]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:42:08.455]    __dp=0x00000000
[20:42:08.456]    __ap=0x00000000
[20:42:08.456]    __traceout=0x00000001      (SWO Trace)
[20:42:08.457]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:42:08.457]    __FlashAddr=0x00000000
[20:42:08.457]    __FlashLen=0x00000000
[20:42:08.458]    __FlashArg=0x00000000
[20:42:08.458]    __FlashOp=0x00000000
[20:42:08.459]    __Result=0x00000000
[20:42:08.459]    
[20:42:08.459]    // User-defined
[20:42:08.460]    DbgMCU_CR=0x00000007
[20:42:08.460]    DbgMCU_APB1_Fz=0x00000000
[20:42:08.460]    DbgMCU_APB2_Fz=0x00000000
[20:42:08.461]    TraceClk_Pin=0x00040002
[20:42:08.461]    TraceD0_Pin=0x00040003
[20:42:08.461]    TraceD1_Pin=0x00040004
[20:42:08.462]    TraceD2_Pin=0x00040005
[20:42:08.462]    TraceD3_Pin=0x00040006
[20:42:08.462]  </debugvars>
[20:42:08.463]  
[20:42:08.463]  <sequence name="TraceStop" Pname="" disable="false" info="">
[20:42:08.464]    <block atomic="false" info="">
[20:42:08.464]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[20:42:08.465]        // -> [traceSWO <= 0x00000001]
[20:42:08.465]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[20:42:08.466]        // -> [traceTPIU <= 0x00000000]
[20:42:08.466]    </block>
[20:42:08.467]    <control if="traceSWO" while="" timeout="0" info="">
[20:42:08.467]      // if-block "traceSWO"
[20:42:08.468]        // =>  TRUE
[20:42:08.468]      <block atomic="false" info="">
[20:42:08.469]        Sequence("DisableTraceSWO");
[20:42:08.470]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[20:42:08.470]            <block atomic="false" info="">
[20:42:08.471]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:42:08.471]                // -> [dbgmcu_val <= 0x00000000]
[20:42:08.471]            </block>
[20:42:08.472]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[20:42:08.472]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[20:42:08.475]  
[20:42:08.475]  !!! E310 : Debug access failed - cannot read address 0xE0042004 (accsize '4', AP '0x00000000')
[20:42:08.475]  
[20:42:08.475]                // -> [Read32(0xE0042004) => 0x000A0012]   (__dp=0x00000000, __ap=0x00000000)
[20:42:08.476]            </block>
[20:42:08.476]          </sequence>
[20:42:08.476]      </block>
[20:42:08.477]      // end if-block "traceSWO"
[20:42:08.477]    </control>
[20:42:08.477]  </sequence>
[20:42:08.478]  
[20:59:31.933]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:59:31.933]  
[20:59:31.934]  <debugvars>
[20:59:31.934]    // Pre-defined
[20:59:31.935]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:59:31.935]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[20:59:31.935]    __dp=0x00000000
[20:59:31.936]    __ap=0x00000000
[20:59:31.936]    __traceout=0x00000001      (SWO Trace)
[20:59:31.936]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:59:31.937]    __FlashAddr=0x00000000
[20:59:31.937]    __FlashLen=0x00000000
[20:59:31.938]    __FlashArg=0x00000000
[20:59:31.938]    __FlashOp=0x00000000
[20:59:31.938]    __Result=0x00000000
[20:59:31.938]    
[20:59:31.938]    // User-defined
[20:59:31.939]    DbgMCU_CR=0x00000007
[20:59:31.939]    DbgMCU_APB1_Fz=0x00000000
[20:59:31.940]    DbgMCU_APB2_Fz=0x00000000
[20:59:31.940]    TraceClk_Pin=0x00040002
[20:59:31.941]    TraceD0_Pin=0x00040003
[20:59:31.941]    TraceD1_Pin=0x00040004
[20:59:31.942]    TraceD2_Pin=0x00040005
[20:59:31.942]    TraceD3_Pin=0x00040006
[20:59:31.943]  </debugvars>
[20:59:31.943]  
[20:59:31.943]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:59:31.944]    <block atomic="false" info="">
[20:59:31.944]      Sequence("CheckID");
[20:59:31.945]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:59:31.945]          <block atomic="false" info="">
[20:59:31.946]            __var pidr1 = 0;
[20:59:31.946]              // -> [pidr1 <= 0x00000000]
[20:59:31.947]            __var pidr2 = 0;
[20:59:31.947]              // -> [pidr2 <= 0x00000000]
[20:59:31.947]            __var jep106id = 0;
[20:59:31.948]              // -> [jep106id <= 0x00000000]
[20:59:31.948]            __var ROMTableBase = 0;
[20:59:31.948]              // -> [ROMTableBase <= 0x00000000]
[20:59:31.949]            __ap = 0;      // AHB-AP
[20:59:31.949]              // -> [__ap <= 0x00000000]
[20:59:31.950]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:59:31.951]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[20:59:31.951]              // -> [ROMTableBase <= 0xE00FF000]
[20:59:31.951]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:59:31.953]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:59:31.954]              // -> [pidr1 <= 0x00000004]
[20:59:31.954]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:59:31.956]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[20:59:31.956]              // -> [pidr2 <= 0x0000000A]
[20:59:31.956]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:59:31.957]              // -> [jep106id <= 0x00000020]
[20:59:31.957]          </block>
[20:59:31.958]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:59:31.958]            // if-block "jep106id != 0x20"
[20:59:31.958]              // =>  FALSE
[20:59:31.959]            // skip if-block "jep106id != 0x20"
[20:59:31.959]          </control>
[20:59:31.959]        </sequence>
[20:59:31.960]    </block>
[20:59:31.961]  </sequence>
[20:59:31.961]  
[20:59:31.962]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:59:31.962]  
[20:59:31.962]  <debugvars>
[20:59:31.963]    // Pre-defined
[20:59:31.963]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:59:31.963]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[20:59:31.964]    __dp=0x00000000
[20:59:31.964]    __ap=0x00000000
[20:59:31.964]    __traceout=0x00000001      (SWO Trace)
[20:59:31.965]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:59:31.965]    __FlashAddr=0x00000000
[20:59:31.966]    __FlashLen=0x00000000
[20:59:31.966]    __FlashArg=0x00000000
[20:59:31.966]    __FlashOp=0x00000000
[20:59:31.967]    __Result=0x00000000
[20:59:31.967]    
[20:59:31.967]    // User-defined
[20:59:31.968]    DbgMCU_CR=0x00000007
[20:59:31.968]    DbgMCU_APB1_Fz=0x00000000
[20:59:31.968]    DbgMCU_APB2_Fz=0x00000000
[20:59:31.969]    TraceClk_Pin=0x00040002
[20:59:31.969]    TraceD0_Pin=0x00040003
[20:59:31.969]    TraceD1_Pin=0x00040004
[20:59:31.970]    TraceD2_Pin=0x00040005
[20:59:31.970]    TraceD3_Pin=0x00040006
[20:59:31.970]  </debugvars>
[20:59:31.971]  
[20:59:31.971]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:59:31.972]    <block atomic="false" info="">
[20:59:31.972]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:59:31.973]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:31.974]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:59:31.976]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:31.976]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:59:31.978]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:31.978]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:59:31.979]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:31.980]    </block>
[20:59:31.980]  </sequence>
[20:59:31.981]  
[20:59:35.946]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[20:59:35.946]  
[20:59:35.946]  <debugvars>
[20:59:35.947]    // Pre-defined
[20:59:35.947]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:59:35.948]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:59:35.948]    __dp=0x00000000
[20:59:35.948]    __ap=0x00000000
[20:59:35.948]    __traceout=0x00000001      (SWO Trace)
[20:59:35.949]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:59:35.949]    __FlashAddr=0x00000000
[20:59:35.949]    __FlashLen=0x00000000
[20:59:35.949]    __FlashArg=0x00000000
[20:59:35.950]    __FlashOp=0x00000000
[20:59:35.950]    __Result=0x00000000
[20:59:35.951]    
[20:59:35.951]    // User-defined
[20:59:35.951]    DbgMCU_CR=0x00000007
[20:59:35.952]    DbgMCU_APB1_Fz=0x00000000
[20:59:35.952]    DbgMCU_APB2_Fz=0x00000000
[20:59:35.952]    TraceClk_Pin=0x00040002
[20:59:35.953]    TraceD0_Pin=0x00040003
[20:59:35.953]    TraceD1_Pin=0x00040004
[20:59:35.953]    TraceD2_Pin=0x00040005
[20:59:35.953]    TraceD3_Pin=0x00040006
[20:59:35.954]  </debugvars>
[20:59:35.954]  
[20:59:35.954]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[20:59:35.955]    <block atomic="false" info="">
[20:59:35.955]      Sequence("CheckID");
[20:59:35.955]        <sequence name="CheckID" Pname="" disable="false" info="">
[20:59:35.956]          <block atomic="false" info="">
[20:59:35.956]            __var pidr1 = 0;
[20:59:35.956]              // -> [pidr1 <= 0x00000000]
[20:59:35.956]            __var pidr2 = 0;
[20:59:35.957]              // -> [pidr2 <= 0x00000000]
[20:59:35.957]            __var jep106id = 0;
[20:59:35.957]              // -> [jep106id <= 0x00000000]
[20:59:35.958]            __var ROMTableBase = 0;
[20:59:35.958]              // -> [ROMTableBase <= 0x00000000]
[20:59:35.958]            __ap = 0;      // AHB-AP
[20:59:35.959]              // -> [__ap <= 0x00000000]
[20:59:35.959]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[20:59:35.960]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[20:59:35.960]              // -> [ROMTableBase <= 0xE00FF000]
[20:59:35.961]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[20:59:35.962]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[20:59:35.963]              // -> [pidr1 <= 0x00000004]
[20:59:35.963]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[20:59:35.964]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[20:59:35.965]              // -> [pidr2 <= 0x0000000A]
[20:59:35.966]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[20:59:35.967]              // -> [jep106id <= 0x00000020]
[20:59:35.967]          </block>
[20:59:35.968]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[20:59:35.968]            // if-block "jep106id != 0x20"
[20:59:35.968]              // =>  FALSE
[20:59:35.969]            // skip if-block "jep106id != 0x20"
[20:59:35.969]          </control>
[20:59:35.969]        </sequence>
[20:59:35.969]    </block>
[20:59:35.970]  </sequence>
[20:59:35.970]  
[20:59:35.970]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[20:59:35.970]  
[20:59:35.971]  <debugvars>
[20:59:35.971]    // Pre-defined
[20:59:35.971]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:59:35.972]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:59:35.972]    __dp=0x00000000
[20:59:35.972]    __ap=0x00000000
[20:59:35.973]    __traceout=0x00000001      (SWO Trace)
[20:59:35.973]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:59:35.973]    __FlashAddr=0x00000000
[20:59:35.973]    __FlashLen=0x00000000
[20:59:35.974]    __FlashArg=0x00000000
[20:59:35.974]    __FlashOp=0x00000000
[20:59:35.974]    __Result=0x00000000
[20:59:35.975]    
[20:59:35.975]    // User-defined
[20:59:35.975]    DbgMCU_CR=0x00000007
[20:59:35.975]    DbgMCU_APB1_Fz=0x00000000
[20:59:35.975]    DbgMCU_APB2_Fz=0x00000000
[20:59:35.976]    TraceClk_Pin=0x00040002
[20:59:35.976]    TraceD0_Pin=0x00040003
[20:59:35.976]    TraceD1_Pin=0x00040004
[20:59:35.977]    TraceD2_Pin=0x00040005
[20:59:35.977]    TraceD3_Pin=0x00040006
[20:59:35.978]  </debugvars>
[20:59:35.978]  
[20:59:35.978]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[20:59:35.979]    <block atomic="false" info="">
[20:59:35.979]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[20:59:35.981]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:35.981]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[20:59:35.983]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:35.983]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[20:59:35.984]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:35.985]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[20:59:35.986]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:35.986]    </block>
[20:59:35.986]  </sequence>
[20:59:35.987]  
[20:59:36.037]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[20:59:36.037]  
[20:59:36.038]  <debugvars>
[20:59:36.038]    // Pre-defined
[20:59:36.039]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:59:36.039]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:59:36.040]    __dp=0x00000000
[20:59:36.040]    __ap=0x00000000
[20:59:36.040]    __traceout=0x00000001      (SWO Trace)
[20:59:36.040]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:59:36.041]    __FlashAddr=0x00000000
[20:59:36.041]    __FlashLen=0x00000000
[20:59:36.041]    __FlashArg=0x00000000
[20:59:36.042]    __FlashOp=0x00000000
[20:59:36.042]    __Result=0x00000000
[20:59:36.043]    
[20:59:36.043]    // User-defined
[20:59:36.043]    DbgMCU_CR=0x00000007
[20:59:36.043]    DbgMCU_APB1_Fz=0x00000000
[20:59:36.043]    DbgMCU_APB2_Fz=0x00000000
[20:59:36.044]    TraceClk_Pin=0x00040002
[20:59:36.044]    TraceD0_Pin=0x00040003
[20:59:36.044]    TraceD1_Pin=0x00040004
[20:59:36.045]    TraceD2_Pin=0x00040005
[20:59:36.045]    TraceD3_Pin=0x00040006
[20:59:36.045]  </debugvars>
[20:59:36.045]  
[20:59:36.046]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:59:36.046]    <block atomic="false" info="">
[20:59:36.046]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:59:36.047]        // -> [traceSWO <= 0x00000001]
[20:59:36.047]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:59:36.047]        // -> [traceTPIU <= 0x00000000]
[20:59:36.048]    </block>
[20:59:36.048]    <control if="traceSWO" while="" timeout="0" info="">
[20:59:36.048]      // if-block "traceSWO"
[20:59:36.048]        // =>  TRUE
[20:59:36.049]      <block atomic="false" info="">
[20:59:36.049]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:59:36.049]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:59:36.050]            <block atomic="false" info="">
[20:59:36.050]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:59:36.050]                // -> [dbgmcu_val <= 0x00000000]
[20:59:36.051]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:59:36.051]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:59:36.052]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:59:36.053]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.053]                // -> [dbgmcu_val <= 0x00000007]
[20:59:36.054]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:59:36.054]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:59:36.054]              Sequence("ConfigureTraceSWOPin");
[20:59:36.055]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:59:36.055]                  <block atomic="false" info="">
[20:59:36.056]                    __var pin     = 0;
[20:59:36.056]                      // -> [pin <= 0x00000000]
[20:59:36.056]                    __var port    = 0;
[20:59:36.057]                      // -> [port <= 0x00000000]
[20:59:36.057]                    __var portAdr = 0;
[20:59:36.058]                      // -> [portAdr <= 0x00000000]
[20:59:36.058]                    __var pos     = 0;
[20:59:36.058]                      // -> [pos <= 0x00000000]
[20:59:36.058]                    __var SWO_Pin = 0x00010003;          // PB3
[20:59:36.059]                      // -> [SWO_Pin <= 0x00010003]
[20:59:36.059]                  </block>
[20:59:36.060]                  <block atomic="false" info="configure SWO">
[20:59:36.060]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:59:36.060]                      // -> [pin <= 0x00000003]
[20:59:36.061]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:59:36.061]                      // -> [port <= 0x00000001]
[20:59:36.061]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:59:36.062]                      // -> [portAdr <= 0x40020400]
[20:59:36.062]                    pos = pin * 2;
[20:59:36.062]                      // -> [pos <= 0x00000006]
[20:59:36.062]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:59:36.064]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.066]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.066]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:59:36.068]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.069]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.070]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:59:36.071]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.073]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.073]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:59:36.075]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.076]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.076]                  </block>
[20:59:36.077]                  <control if="pin <  8" while="" timeout="0" info="">
[20:59:36.077]                    // if-block "pin <  8"
[20:59:36.077]                      // =>  TRUE
[20:59:36.078]                    <block atomic="false" info="">
[20:59:36.078]                      pos = ((pin    ) & 7) * 4;
[20:59:36.078]                        // -> [pos <= 0x0000000C]
[20:59:36.079]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:59:36.080]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.081]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.082]                    </block>
[20:59:36.082]                    // end if-block "pin <  8"
[20:59:36.082]                  </control>
[20:59:36.083]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:59:36.083]                    // if-block "pin >= 8"
[20:59:36.083]                      // =>  FALSE
[20:59:36.084]                    // skip if-block "pin >= 8"
[20:59:36.084]                  </control>
[20:59:36.085]                </sequence>
[20:59:36.085]            </block>
[20:59:36.085]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:59:36.085]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:59:36.087]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.087]            </block>
[20:59:36.088]          </sequence>
[20:59:36.088]      </block>
[20:59:36.089]      // end if-block "traceSWO"
[20:59:36.089]    </control>
[20:59:36.089]    <control if="traceTPIU" while="" timeout="0" info="">
[20:59:36.090]      // if-block "traceTPIU"
[20:59:36.090]        // =>  FALSE
[20:59:36.090]      // skip if-block "traceTPIU"
[20:59:36.091]    </control>
[20:59:36.091]  </sequence>
[20:59:36.091]  
[20:59:36.111]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:59:36.111]  
[20:59:36.111]  <debugvars>
[20:59:36.112]    // Pre-defined
[20:59:36.112]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:59:36.112]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:59:36.113]    __dp=0x00000000
[20:59:36.113]    __ap=0x00000000
[20:59:36.113]    __traceout=0x00000001      (SWO Trace)
[20:59:36.113]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:59:36.114]    __FlashAddr=0x00000000
[20:59:36.114]    __FlashLen=0x00000000
[20:59:36.115]    __FlashArg=0x00000000
[20:59:36.115]    __FlashOp=0x00000000
[20:59:36.115]    __Result=0x00000000
[20:59:36.116]    
[20:59:36.116]    // User-defined
[20:59:36.116]    DbgMCU_CR=0x00000007
[20:59:36.116]    DbgMCU_APB1_Fz=0x00000000
[20:59:36.116]    DbgMCU_APB2_Fz=0x00000000
[20:59:36.117]    TraceClk_Pin=0x00040002
[20:59:36.117]    TraceD0_Pin=0x00040003
[20:59:36.118]    TraceD1_Pin=0x00040004
[20:59:36.118]    TraceD2_Pin=0x00040005
[20:59:36.118]    TraceD3_Pin=0x00040006
[20:59:36.119]  </debugvars>
[20:59:36.119]  
[20:59:36.120]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:59:36.120]    <block atomic="false" info="">
[20:59:36.121]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:59:36.121]        // -> [traceSWO <= 0x00000001]
[20:59:36.121]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:59:36.122]        // -> [traceTPIU <= 0x00000000]
[20:59:36.122]    </block>
[20:59:36.123]    <control if="traceSWO" while="" timeout="0" info="">
[20:59:36.123]      // if-block "traceSWO"
[20:59:36.123]        // =>  TRUE
[20:59:36.124]      <block atomic="false" info="">
[20:59:36.124]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:59:36.124]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:59:36.125]            <block atomic="false" info="">
[20:59:36.125]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:59:36.125]                // -> [dbgmcu_val <= 0x00000000]
[20:59:36.126]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:59:36.126]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:59:36.126]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:59:36.128]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.129]                // -> [dbgmcu_val <= 0x00000007]
[20:59:36.129]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:59:36.130]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:59:36.130]              Sequence("ConfigureTraceSWOPin");
[20:59:36.131]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:59:36.131]                  <block atomic="false" info="">
[20:59:36.131]                    __var pin     = 0;
[20:59:36.132]                      // -> [pin <= 0x00000000]
[20:59:36.132]                    __var port    = 0;
[20:59:36.133]                      // -> [port <= 0x00000000]
[20:59:36.133]                    __var portAdr = 0;
[20:59:36.133]                      // -> [portAdr <= 0x00000000]
[20:59:36.134]                    __var pos     = 0;
[20:59:36.134]                      // -> [pos <= 0x00000000]
[20:59:36.134]                    __var SWO_Pin = 0x00010003;          // PB3
[20:59:36.135]                      // -> [SWO_Pin <= 0x00010003]
[20:59:36.135]                  </block>
[20:59:36.136]                  <block atomic="false" info="configure SWO">
[20:59:36.136]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:59:36.136]                      // -> [pin <= 0x00000003]
[20:59:36.137]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:59:36.137]                      // -> [port <= 0x00000001]
[20:59:36.137]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:59:36.138]                      // -> [portAdr <= 0x40020400]
[20:59:36.138]                    pos = pin * 2;
[20:59:36.138]                      // -> [pos <= 0x00000006]
[20:59:36.138]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:59:36.140]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.141]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.142]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:59:36.143]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.144]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.145]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:59:36.146]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.147]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.148]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:59:36.149]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.150]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.151]                  </block>
[20:59:36.151]                  <control if="pin <  8" while="" timeout="0" info="">
[20:59:36.151]                    // if-block "pin <  8"
[20:59:36.152]                      // =>  TRUE
[20:59:36.152]                    <block atomic="false" info="">
[20:59:36.152]                      pos = ((pin    ) & 7) * 4;
[20:59:36.152]                        // -> [pos <= 0x0000000C]
[20:59:36.152]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:59:36.154]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.155]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.156]                    </block>
[20:59:36.156]                    // end if-block "pin <  8"
[20:59:36.156]                  </control>
[20:59:36.157]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:59:36.157]                    // if-block "pin >= 8"
[20:59:36.157]                      // =>  FALSE
[20:59:36.157]                    // skip if-block "pin >= 8"
[20:59:36.157]                  </control>
[20:59:36.158]                </sequence>
[20:59:36.158]            </block>
[20:59:36.158]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:59:36.159]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:59:36.160]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.161]            </block>
[20:59:36.162]          </sequence>
[20:59:36.162]      </block>
[20:59:36.162]      // end if-block "traceSWO"
[20:59:36.162]    </control>
[20:59:36.162]    <control if="traceTPIU" while="" timeout="0" info="">
[20:59:36.162]      // if-block "traceTPIU"
[20:59:36.162]        // =>  FALSE
[20:59:36.163]      // skip if-block "traceTPIU"
[20:59:36.163]    </control>
[20:59:36.163]  </sequence>
[20:59:36.165]  
[20:59:36.587]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[20:59:36.587]  
[20:59:36.636]  <debugvars>
[20:59:36.636]    // Pre-defined
[20:59:36.637]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[20:59:36.637]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[20:59:36.637]    __dp=0x00000000
[20:59:36.638]    __ap=0x00000000
[20:59:36.638]    __traceout=0x00000001      (SWO Trace)
[20:59:36.638]    __errorcontrol=0x00000000  (Skip Errors="False")
[20:59:36.639]    __FlashAddr=0x00000000
[20:59:36.639]    __FlashLen=0x00000000
[20:59:36.639]    __FlashArg=0x00000000
[20:59:36.640]    __FlashOp=0x00000000
[20:59:36.640]    __Result=0x00000000
[20:59:36.640]    
[20:59:36.640]    // User-defined
[20:59:36.641]    DbgMCU_CR=0x00000007
[20:59:36.641]    DbgMCU_APB1_Fz=0x00000000
[20:59:36.641]    DbgMCU_APB2_Fz=0x00000000
[20:59:36.642]    TraceClk_Pin=0x00040002
[20:59:36.642]    TraceD0_Pin=0x00040003
[20:59:36.642]    TraceD1_Pin=0x00040004
[20:59:36.643]    TraceD2_Pin=0x00040005
[20:59:36.643]    TraceD3_Pin=0x00040006
[20:59:36.644]  </debugvars>
[20:59:36.644]  
[20:59:36.644]  <sequence name="TraceStart" Pname="" disable="false" info="">
[20:59:36.645]    <block atomic="false" info="">
[20:59:36.645]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[20:59:36.646]        // -> [traceSWO <= 0x00000001]
[20:59:36.646]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[20:59:36.647]        // -> [traceTPIU <= 0x00000000]
[20:59:36.647]    </block>
[20:59:36.647]    <control if="traceSWO" while="" timeout="0" info="">
[20:59:36.647]      // if-block "traceSWO"
[20:59:36.648]        // =>  TRUE
[20:59:36.648]      <block atomic="false" info="">
[20:59:36.649]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[20:59:36.649]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[20:59:36.649]            <block atomic="false" info="">
[20:59:36.650]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[20:59:36.650]                // -> [dbgmcu_val <= 0x00000000]
[20:59:36.651]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[20:59:36.651]                // -> [dbgmcu_trace_val <= 0x00000000]
[20:59:36.652]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[20:59:36.653]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.654]                // -> [dbgmcu_val <= 0x00000007]
[20:59:36.654]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[20:59:36.654]                // -> [dbgmcu_trace_val <= 0x00000020]
[20:59:36.655]              Sequence("ConfigureTraceSWOPin");
[20:59:36.655]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[20:59:36.655]                  <block atomic="false" info="">
[20:59:36.656]                    __var pin     = 0;
[20:59:36.656]                      // -> [pin <= 0x00000000]
[20:59:36.657]                    __var port    = 0;
[20:59:36.657]                      // -> [port <= 0x00000000]
[20:59:36.657]                    __var portAdr = 0;
[20:59:36.658]                      // -> [portAdr <= 0x00000000]
[20:59:36.658]                    __var pos     = 0;
[20:59:36.658]                      // -> [pos <= 0x00000000]
[20:59:36.658]                    __var SWO_Pin = 0x00010003;          // PB3
[20:59:36.659]                      // -> [SWO_Pin <= 0x00010003]
[20:59:36.659]                  </block>
[20:59:36.659]                  <block atomic="false" info="configure SWO">
[20:59:36.660]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[20:59:36.660]                      // -> [pin <= 0x00000003]
[20:59:36.661]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[20:59:36.661]                      // -> [port <= 0x00000001]
[20:59:36.661]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[20:59:36.662]                      // -> [portAdr <= 0x40020400]
[20:59:36.662]                    pos = pin * 2;
[20:59:36.662]                      // -> [pos <= 0x00000006]
[20:59:36.663]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[20:59:36.664]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.666]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.666]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[20:59:36.669]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.671]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.671]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[20:59:36.673]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.675]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.675]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[20:59:36.676]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.678]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.678]                  </block>
[20:59:36.679]                  <control if="pin <  8" while="" timeout="0" info="">
[20:59:36.679]                    // if-block "pin <  8"
[20:59:36.679]                      // =>  TRUE
[20:59:36.680]                    <block atomic="false" info="">
[20:59:36.680]                      pos = ((pin    ) & 7) * 4;
[20:59:36.681]                        // -> [pos <= 0x0000000C]
[20:59:36.681]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[20:59:36.682]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.684]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.684]                    </block>
[20:59:36.685]                    // end if-block "pin <  8"
[20:59:36.685]                  </control>
[20:59:36.686]                  <control if="pin >= 8" while="" timeout="0" info="">
[20:59:36.686]                    // if-block "pin >= 8"
[20:59:36.686]                      // =>  FALSE
[20:59:36.687]                    // skip if-block "pin >= 8"
[20:59:36.687]                  </control>
[20:59:36.688]                </sequence>
[20:59:36.688]            </block>
[20:59:36.688]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[20:59:36.689]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[20:59:36.690]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[20:59:36.691]            </block>
[20:59:36.691]          </sequence>
[20:59:36.692]      </block>
[20:59:36.692]      // end if-block "traceSWO"
[20:59:36.692]    </control>
[20:59:36.693]    <control if="traceTPIU" while="" timeout="0" info="">
[20:59:36.693]      // if-block "traceTPIU"
[20:59:36.693]        // =>  FALSE
[20:59:36.694]      // skip if-block "traceTPIU"
[20:59:36.694]    </control>
[20:59:36.694]  </sequence>
[20:59:36.695]  
[21:00:47.024]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[21:00:47.024]  
[21:00:47.071]  <debugvars>
[21:00:47.071]    // Pre-defined
[21:00:47.072]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:00:47.072]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:00:47.072]    __dp=0x00000000
[21:00:47.073]    __ap=0x00000000
[21:00:47.073]    __traceout=0x00000001      (SWO Trace)
[21:00:47.073]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:00:47.074]    __FlashAddr=0x00000000
[21:00:47.074]    __FlashLen=0x00000000
[21:00:47.075]    __FlashArg=0x00000000
[21:00:47.075]    __FlashOp=0x00000000
[21:00:47.075]    __Result=0x00000000
[21:00:47.076]    
[21:00:47.076]    // User-defined
[21:00:47.076]    DbgMCU_CR=0x00000007
[21:00:47.077]    DbgMCU_APB1_Fz=0x00000000
[21:00:47.077]    DbgMCU_APB2_Fz=0x00000000
[21:00:47.077]    TraceClk_Pin=0x00040002
[21:00:47.078]    TraceD0_Pin=0x00040003
[21:00:47.078]    TraceD1_Pin=0x00040004
[21:00:47.078]    TraceD2_Pin=0x00040005
[21:00:47.079]    TraceD3_Pin=0x00040006
[21:00:47.079]  </debugvars>
[21:00:47.080]  
[21:00:47.080]  <sequence name="TraceStop" Pname="" disable="false" info="">
[21:00:47.081]    <block atomic="false" info="">
[21:00:47.081]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[21:00:47.081]        // -> [traceSWO <= 0x00000001]
[21:00:47.082]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[21:00:47.082]        // -> [traceTPIU <= 0x00000000]
[21:00:47.083]    </block>
[21:00:47.083]    <control if="traceSWO" while="" timeout="0" info="">
[21:00:47.084]      // if-block "traceSWO"
[21:00:47.084]        // =>  TRUE
[21:00:47.085]      <block atomic="false" info="">
[21:00:47.085]        Sequence("DisableTraceSWO");
[21:00:47.086]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[21:00:47.086]            <block atomic="false" info="">
[21:00:47.087]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:00:47.087]                // -> [dbgmcu_val <= 0x00000000]
[21:00:47.087]            </block>
[21:00:47.087]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[21:00:47.088]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[21:00:47.089]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:00:47.090]                // -> [dbgmcu_val <= 0x00000007]
[21:00:47.090]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[21:00:47.092]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:00:47.092]            </block>
[21:00:47.092]          </sequence>
[21:00:47.093]      </block>
[21:00:47.093]      // end if-block "traceSWO"
[21:00:47.094]    </control>
[21:00:47.095]    <control if="traceTPIU" while="" timeout="0" info="">
[21:00:47.095]      // if-block "traceTPIU"
[21:00:47.096]        // =>  FALSE
[21:00:47.096]      // skip if-block "traceTPIU"
[21:00:47.097]    </control>
[21:00:47.097]  </sequence>
[21:00:47.098]  
[18:16:52.128]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[18:16:52.128]  
[18:16:52.180]  <debugvars>
[18:16:52.180]    // Pre-defined
[18:16:52.180]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:16:52.180]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[18:16:52.180]    __dp=0x00000000
[18:16:52.180]    __ap=0x00000000
[18:16:52.180]    __traceout=0x00000001      (SWO Trace)
[18:16:52.180]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:16:52.180]    __FlashAddr=0x00000000
[18:16:52.180]    __FlashLen=0x00000000
[18:16:52.180]    __FlashArg=0x00000000
[18:16:52.180]    __FlashOp=0x00000000
[18:16:52.180]    __Result=0x00000000
[18:16:52.180]    
[18:16:52.180]    // User-defined
[18:16:52.180]    DbgMCU_CR=0x00000007
[18:16:52.180]    DbgMCU_APB1_Fz=0x00000000
[18:16:52.180]    DbgMCU_APB2_Fz=0x00000000
[18:16:52.180]    TraceClk_Pin=0x00040002
[18:16:52.180]    TraceD0_Pin=0x00040003
[18:16:52.180]    TraceD1_Pin=0x00040004
[18:16:52.180]    TraceD2_Pin=0x00040005
[18:16:52.180]    TraceD3_Pin=0x00040006
[18:16:52.180]  </debugvars>
[18:16:52.180]  
[18:16:52.180]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[18:16:52.180]    <block atomic="false" info="">
[18:16:52.180]      Sequence("CheckID");
[18:16:52.180]        <sequence name="CheckID" Pname="" disable="false" info="">
[18:16:52.180]          <block atomic="false" info="">
[18:16:52.180]            __var pidr1 = 0;
[18:16:52.180]              // -> [pidr1 <= 0x00000000]
[18:16:52.180]            __var pidr2 = 0;
[18:16:52.180]              // -> [pidr2 <= 0x00000000]
[18:16:52.180]            __var jep106id = 0;
[18:16:52.180]              // -> [jep106id <= 0x00000000]
[18:16:52.180]            __var ROMTableBase = 0;
[18:16:52.180]              // -> [ROMTableBase <= 0x00000000]
[18:16:52.180]            __ap = 0;      // AHB-AP
[18:16:52.180]              // -> [__ap <= 0x00000000]
[18:16:52.180]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[18:16:52.180]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.180]              // -> [ROMTableBase <= 0xE00FF000]
[18:16:52.180]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[18:16:52.180]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.180]              // -> [pidr1 <= 0x00000004]
[18:16:52.180]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[18:16:52.180]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.180]              // -> [pidr2 <= 0x0000000A]
[18:16:52.180]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[18:16:52.180]              // -> [jep106id <= 0x00000020]
[18:16:52.180]          </block>
[18:16:52.180]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[18:16:52.180]            // if-block "jep106id != 0x20"
[18:16:52.180]              // =>  FALSE
[18:16:52.180]            // skip if-block "jep106id != 0x20"
[18:16:52.180]          </control>
[18:16:52.180]        </sequence>
[18:16:52.180]    </block>
[18:16:52.180]  </sequence>
[18:16:52.180]  
[18:16:52.180]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[18:16:52.180]  
[18:16:52.180]  <debugvars>
[18:16:52.180]    // Pre-defined
[18:16:52.180]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:16:52.180]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[18:16:52.180]    __dp=0x00000000
[18:16:52.180]    __ap=0x00000000
[18:16:52.180]    __traceout=0x00000001      (SWO Trace)
[18:16:52.180]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:16:52.180]    __FlashAddr=0x00000000
[18:16:52.180]    __FlashLen=0x00000000
[18:16:52.180]    __FlashArg=0x00000000
[18:16:52.180]    __FlashOp=0x00000000
[18:16:52.180]    __Result=0x00000000
[18:16:52.180]    
[18:16:52.180]    // User-defined
[18:16:52.180]    DbgMCU_CR=0x00000007
[18:16:52.180]    DbgMCU_APB1_Fz=0x00000000
[18:16:52.180]    DbgMCU_APB2_Fz=0x00000000
[18:16:52.180]    TraceClk_Pin=0x00040002
[18:16:52.180]    TraceD0_Pin=0x00040003
[18:16:52.180]    TraceD1_Pin=0x00040004
[18:16:52.180]    TraceD2_Pin=0x00040005
[18:16:52.180]    TraceD3_Pin=0x00040006
[18:16:52.180]  </debugvars>
[18:16:52.180]  
[18:16:52.180]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[18:16:52.180]    <block atomic="false" info="">
[18:16:52.180]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[18:16:52.180]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.180]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[18:16:52.180]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.180]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[18:16:52.180]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.180]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[18:16:52.180]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.180]    </block>
[18:16:52.180]  </sequence>
[18:16:52.180]  
[18:16:52.211]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[18:16:52.211]  
[18:16:52.211]  <debugvars>
[18:16:52.211]    // Pre-defined
[18:16:52.211]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:16:52.211]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[18:16:52.211]    __dp=0x00000000
[18:16:52.211]    __ap=0x00000000
[18:16:52.211]    __traceout=0x00000001      (SWO Trace)
[18:16:52.211]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:16:52.211]    __FlashAddr=0x00000000
[18:16:52.211]    __FlashLen=0x00000000
[18:16:52.211]    __FlashArg=0x00000000
[18:16:52.211]    __FlashOp=0x00000000
[18:16:52.211]    __Result=0x00000000
[18:16:52.211]    
[18:16:52.211]    // User-defined
[18:16:52.211]    DbgMCU_CR=0x00000007
[18:16:52.211]    DbgMCU_APB1_Fz=0x00000000
[18:16:52.211]    DbgMCU_APB2_Fz=0x00000000
[18:16:52.211]    TraceClk_Pin=0x00040002
[18:16:52.211]    TraceD0_Pin=0x00040003
[18:16:52.211]    TraceD1_Pin=0x00040004
[18:16:52.211]    TraceD2_Pin=0x00040005
[18:16:52.211]    TraceD3_Pin=0x00040006
[18:16:52.211]  </debugvars>
[18:16:52.211]  
[18:16:52.211]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:16:52.211]    <block atomic="false" info="">
[18:16:52.211]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:16:52.211]        // -> [traceSWO <= 0x00000001]
[18:16:52.211]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:16:52.211]        // -> [traceTPIU <= 0x00000000]
[18:16:52.211]    </block>
[18:16:52.211]    <control if="traceSWO" while="" timeout="0" info="">
[18:16:52.211]      // if-block "traceSWO"
[18:16:52.211]        // =>  TRUE
[18:16:52.211]      <block atomic="false" info="">
[18:16:52.211]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:16:52.211]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:16:52.211]            <block atomic="false" info="">
[18:16:52.211]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:16:52.211]                // -> [dbgmcu_val <= 0x00000000]
[18:16:52.211]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:16:52.211]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:16:52.211]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:16:52.211]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.211]                // -> [dbgmcu_val <= 0x00000007]
[18:16:52.211]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:16:52.211]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:16:52.211]              Sequence("ConfigureTraceSWOPin");
[18:16:52.211]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:16:52.211]                  <block atomic="false" info="">
[18:16:52.211]                    __var pin     = 0;
[18:16:52.211]                      // -> [pin <= 0x00000000]
[18:16:52.211]                    __var port    = 0;
[18:16:52.211]                      // -> [port <= 0x00000000]
[18:16:52.211]                    __var portAdr = 0;
[18:16:52.211]                      // -> [portAdr <= 0x00000000]
[18:16:52.211]                    __var pos     = 0;
[18:16:52.211]                      // -> [pos <= 0x00000000]
[18:16:52.211]                    __var SWO_Pin = 0x00010003;          // PB3
[18:16:52.211]                      // -> [SWO_Pin <= 0x00010003]
[18:16:52.211]                  </block>
[18:16:52.211]                  <block atomic="false" info="configure SWO">
[18:16:52.211]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:16:52.211]                      // -> [pin <= 0x00000003]
[18:16:52.211]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:16:52.211]                      // -> [port <= 0x00000001]
[18:16:52.211]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:16:52.211]                      // -> [portAdr <= 0x40020400]
[18:16:52.211]                    pos = pin * 2;
[18:16:52.211]                      // -> [pos <= 0x00000006]
[18:16:52.211]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:16:52.211]                      // -> [Read32(0x40023830) => 0x00000005]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.211]                      // -> [Write32(0x40023830, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.211]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:16:52.211]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.211]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.211]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:16:52.211]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.211]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.211]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:16:52.211]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.211]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.211]                  </block>
[18:16:52.211]                  <control if="pin <  8" while="" timeout="0" info="">
[18:16:52.211]                    // if-block "pin <  8"
[18:16:52.211]                      // =>  TRUE
[18:16:52.211]                    <block atomic="false" info="">
[18:16:52.211]                      pos = ((pin    ) & 7) * 4;
[18:16:52.211]                        // -> [pos <= 0x0000000C]
[18:16:52.211]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:16:52.211]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.211]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.211]                    </block>
[18:16:52.211]                    // end if-block "pin <  8"
[18:16:52.211]                  </control>
[18:16:52.211]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:16:52.211]                    // if-block "pin >= 8"
[18:16:52.211]                      // =>  FALSE
[18:16:52.211]                    // skip if-block "pin >= 8"
[18:16:52.211]                  </control>
[18:16:52.211]                </sequence>
[18:16:52.211]            </block>
[18:16:52.211]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:16:52.211]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:16:52.211]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.211]            </block>
[18:16:52.211]          </sequence>
[18:16:52.211]      </block>
[18:16:52.211]      // end if-block "traceSWO"
[18:16:52.211]    </control>
[18:16:52.211]    <control if="traceTPIU" while="" timeout="0" info="">
[18:16:52.211]      // if-block "traceTPIU"
[18:16:52.211]        // =>  FALSE
[18:16:52.211]      // skip if-block "traceTPIU"
[18:16:52.211]    </control>
[18:16:52.211]  </sequence>
[18:16:52.211]  
[18:16:52.227]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:16:52.227]  
[18:16:52.227]  <debugvars>
[18:16:52.227]    // Pre-defined
[18:16:52.227]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:16:52.227]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[18:16:52.227]    __dp=0x00000000
[18:16:52.227]    __ap=0x00000000
[18:16:52.227]    __traceout=0x00000001      (SWO Trace)
[18:16:52.227]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:16:52.227]    __FlashAddr=0x00000000
[18:16:52.227]    __FlashLen=0x00000000
[18:16:52.227]    __FlashArg=0x00000000
[18:16:52.227]    __FlashOp=0x00000000
[18:16:52.227]    __Result=0x00000000
[18:16:52.227]    
[18:16:52.227]    // User-defined
[18:16:52.227]    DbgMCU_CR=0x00000007
[18:16:52.227]    DbgMCU_APB1_Fz=0x00000000
[18:16:52.227]    DbgMCU_APB2_Fz=0x00000000
[18:16:52.227]    TraceClk_Pin=0x00040002
[18:16:52.227]    TraceD0_Pin=0x00040003
[18:16:52.227]    TraceD1_Pin=0x00040004
[18:16:52.227]    TraceD2_Pin=0x00040005
[18:16:52.227]    TraceD3_Pin=0x00040006
[18:16:52.227]  </debugvars>
[18:16:52.227]  
[18:16:52.227]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:16:52.227]    <block atomic="false" info="">
[18:16:52.227]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:16:52.227]        // -> [traceSWO <= 0x00000001]
[18:16:52.227]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:16:52.227]        // -> [traceTPIU <= 0x00000000]
[18:16:52.227]    </block>
[18:16:52.227]    <control if="traceSWO" while="" timeout="0" info="">
[18:16:52.227]      // if-block "traceSWO"
[18:16:52.227]        // =>  TRUE
[18:16:52.227]      <block atomic="false" info="">
[18:16:52.227]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:16:52.227]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:16:52.227]            <block atomic="false" info="">
[18:16:52.227]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:16:52.227]                // -> [dbgmcu_val <= 0x00000000]
[18:16:52.227]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:16:52.227]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:16:52.227]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:16:52.227]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.227]                // -> [dbgmcu_val <= 0x00000007]
[18:16:52.227]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:16:52.227]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:16:52.227]              Sequence("ConfigureTraceSWOPin");
[18:16:52.227]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:16:52.227]                  <block atomic="false" info="">
[18:16:52.227]                    __var pin     = 0;
[18:16:52.227]                      // -> [pin <= 0x00000000]
[18:16:52.227]                    __var port    = 0;
[18:16:52.227]                      // -> [port <= 0x00000000]
[18:16:52.227]                    __var portAdr = 0;
[18:16:52.227]                      // -> [portAdr <= 0x00000000]
[18:16:52.227]                    __var pos     = 0;
[18:16:52.227]                      // -> [pos <= 0x00000000]
[18:16:52.227]                    __var SWO_Pin = 0x00010003;          // PB3
[18:16:52.227]                      // -> [SWO_Pin <= 0x00010003]
[18:16:52.227]                  </block>
[18:16:52.227]                  <block atomic="false" info="configure SWO">
[18:16:52.227]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:16:52.227]                      // -> [pin <= 0x00000003]
[18:16:52.227]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:16:52.227]                      // -> [port <= 0x00000001]
[18:16:52.227]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:16:52.227]                      // -> [portAdr <= 0x40020400]
[18:16:52.227]                    pos = pin * 2;
[18:16:52.227]                      // -> [pos <= 0x00000006]
[18:16:52.227]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:16:52.227]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.227]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.227]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:16:52.227]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.243]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.243]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:16:52.243]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.243]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.243]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:16:52.243]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.243]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.243]                  </block>
[18:16:52.243]                  <control if="pin <  8" while="" timeout="0" info="">
[18:16:52.243]                    // if-block "pin <  8"
[18:16:52.243]                      // =>  TRUE
[18:16:52.243]                    <block atomic="false" info="">
[18:16:52.243]                      pos = ((pin    ) & 7) * 4;
[18:16:52.243]                        // -> [pos <= 0x0000000C]
[18:16:52.243]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:16:52.243]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.243]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.243]                    </block>
[18:16:52.243]                    // end if-block "pin <  8"
[18:16:52.243]                  </control>
[18:16:52.243]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:16:52.243]                    // if-block "pin >= 8"
[18:16:52.243]                      // =>  FALSE
[18:16:52.243]                    // skip if-block "pin >= 8"
[18:16:52.243]                  </control>
[18:16:52.243]                </sequence>
[18:16:52.243]            </block>
[18:16:52.243]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:16:52.243]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:16:52.243]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.243]            </block>
[18:16:52.243]          </sequence>
[18:16:52.243]      </block>
[18:16:52.243]      // end if-block "traceSWO"
[18:16:52.243]    </control>
[18:16:52.243]    <control if="traceTPIU" while="" timeout="0" info="">
[18:16:52.243]      // if-block "traceTPIU"
[18:16:52.243]        // =>  FALSE
[18:16:52.243]      // skip if-block "traceTPIU"
[18:16:52.243]    </control>
[18:16:52.243]  </sequence>
[18:16:52.243]  
[18:16:52.423]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:16:52.423]  
[18:16:52.473]  <debugvars>
[18:16:52.473]    // Pre-defined
[18:16:52.473]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:16:52.473]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[18:16:52.473]    __dp=0x00000000
[18:16:52.473]    __ap=0x00000000
[18:16:52.473]    __traceout=0x00000001      (SWO Trace)
[18:16:52.473]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:16:52.473]    __FlashAddr=0x00000000
[18:16:52.473]    __FlashLen=0x00000000
[18:16:52.473]    __FlashArg=0x00000000
[18:16:52.473]    __FlashOp=0x00000000
[18:16:52.473]    __Result=0x00000000
[18:16:52.473]    
[18:16:52.473]    // User-defined
[18:16:52.473]    DbgMCU_CR=0x00000007
[18:16:52.473]    DbgMCU_APB1_Fz=0x00000000
[18:16:52.473]    DbgMCU_APB2_Fz=0x00000000
[18:16:52.473]    TraceClk_Pin=0x00040002
[18:16:52.473]    TraceD0_Pin=0x00040003
[18:16:52.473]    TraceD1_Pin=0x00040004
[18:16:52.473]    TraceD2_Pin=0x00040005
[18:16:52.473]    TraceD3_Pin=0x00040006
[18:16:52.473]  </debugvars>
[18:16:52.473]  
[18:16:52.473]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:16:52.473]    <block atomic="false" info="">
[18:16:52.473]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:16:52.473]        // -> [traceSWO <= 0x00000001]
[18:16:52.473]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:16:52.473]        // -> [traceTPIU <= 0x00000000]
[18:16:52.473]    </block>
[18:16:52.473]    <control if="traceSWO" while="" timeout="0" info="">
[18:16:52.473]      // if-block "traceSWO"
[18:16:52.473]        // =>  TRUE
[18:16:52.473]      <block atomic="false" info="">
[18:16:52.473]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:16:52.473]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:16:52.473]            <block atomic="false" info="">
[18:16:52.473]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:16:52.473]                // -> [dbgmcu_val <= 0x00000000]
[18:16:52.473]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:16:52.473]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:16:52.473]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:16:52.473]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.473]                // -> [dbgmcu_val <= 0x00000007]
[18:16:52.473]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:16:52.473]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:16:52.473]              Sequence("ConfigureTraceSWOPin");
[18:16:52.473]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:16:52.473]                  <block atomic="false" info="">
[18:16:52.473]                    __var pin     = 0;
[18:16:52.473]                      // -> [pin <= 0x00000000]
[18:16:52.473]                    __var port    = 0;
[18:16:52.473]                      // -> [port <= 0x00000000]
[18:16:52.473]                    __var portAdr = 0;
[18:16:52.473]                      // -> [portAdr <= 0x00000000]
[18:16:52.473]                    __var pos     = 0;
[18:16:52.473]                      // -> [pos <= 0x00000000]
[18:16:52.473]                    __var SWO_Pin = 0x00010003;          // PB3
[18:16:52.473]                      // -> [SWO_Pin <= 0x00010003]
[18:16:52.473]                  </block>
[18:16:52.473]                  <block atomic="false" info="configure SWO">
[18:16:52.473]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:16:52.473]                      // -> [pin <= 0x00000003]
[18:16:52.473]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:16:52.473]                      // -> [port <= 0x00000001]
[18:16:52.473]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:16:52.473]                      // -> [portAdr <= 0x40020400]
[18:16:52.473]                    pos = pin * 2;
[18:16:52.473]                      // -> [pos <= 0x00000006]
[18:16:52.473]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:16:52.473]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.473]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.473]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:16:52.473]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.473]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.473]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:16:52.473]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.473]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.473]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:16:52.473]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.473]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.473]                  </block>
[18:16:52.473]                  <control if="pin <  8" while="" timeout="0" info="">
[18:16:52.473]                    // if-block "pin <  8"
[18:16:52.473]                      // =>  TRUE
[18:16:52.473]                    <block atomic="false" info="">
[18:16:52.473]                      pos = ((pin    ) & 7) * 4;
[18:16:52.473]                        // -> [pos <= 0x0000000C]
[18:16:52.473]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:16:52.473]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.473]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.473]                    </block>
[18:16:52.473]                    // end if-block "pin <  8"
[18:16:52.473]                  </control>
[18:16:52.473]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:16:52.473]                    // if-block "pin >= 8"
[18:16:52.473]                      // =>  FALSE
[18:16:52.473]                    // skip if-block "pin >= 8"
[18:16:52.473]                  </control>
[18:16:52.473]                </sequence>
[18:16:52.473]            </block>
[18:16:52.473]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:16:52.473]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:16:52.473]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:16:52.473]            </block>
[18:16:52.473]          </sequence>
[18:16:52.473]      </block>
[18:16:52.473]      // end if-block "traceSWO"
[18:16:52.473]    </control>
[18:16:52.473]    <control if="traceTPIU" while="" timeout="0" info="">
[18:16:52.473]      // if-block "traceTPIU"
[18:16:52.473]        // =>  FALSE
[18:16:52.473]      // skip if-block "traceTPIU"
[18:16:52.473]    </control>
[18:16:52.473]  </sequence>
[18:16:52.473]  
[18:18:10.505]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[18:18:10.505]  
[18:18:10.552]  <debugvars>
[18:18:10.553]    // Pre-defined
[18:18:10.553]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:18:10.553]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[18:18:10.554]    __dp=0x00000000
[18:18:10.554]    __ap=0x00000000
[18:18:10.554]    __traceout=0x00000001      (SWO Trace)
[18:18:10.555]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:18:10.556]    __FlashAddr=0x00000000
[18:18:10.556]    __FlashLen=0x00000000
[18:18:10.556]    __FlashArg=0x00000000
[18:18:10.556]    __FlashOp=0x00000000
[18:18:10.557]    __Result=0x00000000
[18:18:10.557]    
[18:18:10.557]    // User-defined
[18:18:10.557]    DbgMCU_CR=0x00000007
[18:18:10.557]    DbgMCU_APB1_Fz=0x00000000
[18:18:10.558]    DbgMCU_APB2_Fz=0x00000000
[18:18:10.558]    TraceClk_Pin=0x00040002
[18:18:10.558]    TraceD0_Pin=0x00040003
[18:18:10.558]    TraceD1_Pin=0x00040004
[18:18:10.558]    TraceD2_Pin=0x00040005
[18:18:10.559]    TraceD3_Pin=0x00040006
[18:18:10.559]  </debugvars>
[18:18:10.559]  
[18:18:10.560]  <sequence name="TraceStop" Pname="" disable="false" info="">
[18:18:10.560]    <block atomic="false" info="">
[18:18:10.561]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[18:18:10.561]        // -> [traceSWO <= 0x00000001]
[18:18:10.561]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[18:18:10.562]        // -> [traceTPIU <= 0x00000000]
[18:18:10.562]    </block>
[18:18:10.562]    <control if="traceSWO" while="" timeout="0" info="">
[18:18:10.562]      // if-block "traceSWO"
[18:18:10.563]        // =>  TRUE
[18:18:10.563]      <block atomic="false" info="">
[18:18:10.563]        Sequence("DisableTraceSWO");
[18:18:10.563]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[18:18:10.564]            <block atomic="false" info="">
[18:18:10.564]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:18:10.564]                // -> [dbgmcu_val <= 0x00000000]
[18:18:10.564]            </block>
[18:18:10.564]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[18:18:10.565]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[18:18:10.567]  
[18:18:10.567]  !!! E310 : Debug access failed - cannot read address 0xE0042004 (accsize '4', AP '0x00000000')
[18:18:10.567]  
[18:18:10.568]                // -> [Read32(0xE0042004) => 0x000A0012]   (__dp=0x00000000, __ap=0x00000000)
[18:18:10.568]            </block>
[18:18:10.568]          </sequence>
[18:18:10.569]      </block>
[18:18:10.569]      // end if-block "traceSWO"
[18:18:10.570]    </control>
[18:18:10.570]  </sequence>
[18:18:10.570]  
[18:19:56.473]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[18:19:56.473]  
[18:19:56.520]  <debugvars>
[18:19:56.521]    // Pre-defined
[18:19:56.521]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:19:56.521]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[18:19:56.522]    __dp=0x00000000
[18:19:56.522]    __ap=0x00000000
[18:19:56.522]    __traceout=0x00000001      (SWO Trace)
[18:19:56.522]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:19:56.523]    __FlashAddr=0x00000000
[18:19:56.523]    __FlashLen=0x00000000
[18:19:56.523]    __FlashArg=0x00000000
[18:19:56.524]    __FlashOp=0x00000000
[18:19:56.524]    __Result=0x00000000
[18:19:56.524]    
[18:19:56.524]    // User-defined
[18:19:56.524]    DbgMCU_CR=0x00000007
[18:19:56.524]    DbgMCU_APB1_Fz=0x00000000
[18:19:56.524]    DbgMCU_APB2_Fz=0x00000000
[18:19:56.526]    TraceClk_Pin=0x00040002
[18:19:56.526]    TraceD0_Pin=0x00040003
[18:19:56.526]    TraceD1_Pin=0x00040004
[18:19:56.526]    TraceD2_Pin=0x00040005
[18:19:56.527]    TraceD3_Pin=0x00040006
[18:19:56.527]  </debugvars>
[18:19:56.527]  
[18:19:56.527]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[18:19:56.528]    <block atomic="false" info="">
[18:19:56.528]      Sequence("CheckID");
[18:19:56.528]        <sequence name="CheckID" Pname="" disable="false" info="">
[18:19:56.528]          <block atomic="false" info="">
[18:19:56.528]            __var pidr1 = 0;
[18:19:56.529]              // -> [pidr1 <= 0x00000000]
[18:19:56.529]            __var pidr2 = 0;
[18:19:56.530]              // -> [pidr2 <= 0x00000000]
[18:19:56.530]            __var jep106id = 0;
[18:19:56.530]              // -> [jep106id <= 0x00000000]
[18:19:56.531]            __var ROMTableBase = 0;
[18:19:56.531]              // -> [ROMTableBase <= 0x00000000]
[18:19:56.531]            __ap = 0;      // AHB-AP
[18:19:56.532]              // -> [__ap <= 0x00000000]
[18:19:56.532]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[18:19:56.533]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.534]              // -> [ROMTableBase <= 0xE00FF000]
[18:19:56.534]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[18:19:56.534]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.536]              // -> [pidr1 <= 0x00000004]
[18:19:56.536]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[18:19:56.537]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.538]              // -> [pidr2 <= 0x0000000A]
[18:19:56.538]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[18:19:56.538]              // -> [jep106id <= 0x00000020]
[18:19:56.538]          </block>
[18:19:56.538]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[18:19:56.539]            // if-block "jep106id != 0x20"
[18:19:56.539]              // =>  FALSE
[18:19:56.539]            // skip if-block "jep106id != 0x20"
[18:19:56.539]          </control>
[18:19:56.540]        </sequence>
[18:19:56.540]    </block>
[18:19:56.541]  </sequence>
[18:19:56.541]  
[18:19:56.541]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[18:19:56.541]  
[18:19:56.542]  <debugvars>
[18:19:56.542]    // Pre-defined
[18:19:56.542]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:19:56.542]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[18:19:56.542]    __dp=0x00000000
[18:19:56.543]    __ap=0x00000000
[18:19:56.543]    __traceout=0x00000001      (SWO Trace)
[18:19:56.543]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:19:56.544]    __FlashAddr=0x00000000
[18:19:56.544]    __FlashLen=0x00000000
[18:19:56.544]    __FlashArg=0x00000000
[18:19:56.544]    __FlashOp=0x00000000
[18:19:56.545]    __Result=0x00000000
[18:19:56.545]    
[18:19:56.545]    // User-defined
[18:19:56.545]    DbgMCU_CR=0x00000007
[18:19:56.545]    DbgMCU_APB1_Fz=0x00000000
[18:19:56.545]    DbgMCU_APB2_Fz=0x00000000
[18:19:56.546]    TraceClk_Pin=0x00040002
[18:19:56.547]    TraceD0_Pin=0x00040003
[18:19:56.547]    TraceD1_Pin=0x00040004
[18:19:56.547]    TraceD2_Pin=0x00040005
[18:19:56.547]    TraceD3_Pin=0x00040006
[18:19:56.547]  </debugvars>
[18:19:56.548]  
[18:19:56.548]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[18:19:56.548]    <block atomic="false" info="">
[18:19:56.548]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[18:19:56.550]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.551]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[18:19:56.552]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.552]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[18:19:56.553]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.555]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[18:19:56.556]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.556]    </block>
[18:19:56.556]  </sequence>
[18:19:56.557]  
[18:19:56.609]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[18:19:56.609]  
[18:19:56.609]  <debugvars>
[18:19:56.609]    // Pre-defined
[18:19:56.610]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:19:56.610]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[18:19:56.610]    __dp=0x00000000
[18:19:56.610]    __ap=0x00000000
[18:19:56.611]    __traceout=0x00000001      (SWO Trace)
[18:19:56.611]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:19:56.611]    __FlashAddr=0x00000000
[18:19:56.611]    __FlashLen=0x00000000
[18:19:56.611]    __FlashArg=0x00000000
[18:19:56.612]    __FlashOp=0x00000000
[18:19:56.612]    __Result=0x00000000
[18:19:56.612]    
[18:19:56.612]    // User-defined
[18:19:56.612]    DbgMCU_CR=0x00000007
[18:19:56.612]    DbgMCU_APB1_Fz=0x00000000
[18:19:56.613]    DbgMCU_APB2_Fz=0x00000000
[18:19:56.614]    TraceClk_Pin=0x00040002
[18:19:56.614]    TraceD0_Pin=0x00040003
[18:19:56.614]    TraceD1_Pin=0x00040004
[18:19:56.614]    TraceD2_Pin=0x00040005
[18:19:56.614]    TraceD3_Pin=0x00040006
[18:19:56.615]  </debugvars>
[18:19:56.615]  
[18:19:56.615]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:19:56.615]    <block atomic="false" info="">
[18:19:56.615]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:19:56.616]        // -> [traceSWO <= 0x00000001]
[18:19:56.616]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:19:56.616]        // -> [traceTPIU <= 0x00000000]
[18:19:56.616]    </block>
[18:19:56.617]    <control if="traceSWO" while="" timeout="0" info="">
[18:19:56.617]      // if-block "traceSWO"
[18:19:56.617]        // =>  TRUE
[18:19:56.617]      <block atomic="false" info="">
[18:19:56.617]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:19:56.618]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:19:56.618]            <block atomic="false" info="">
[18:19:56.618]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:19:56.618]                // -> [dbgmcu_val <= 0x00000000]
[18:19:56.618]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:19:56.619]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:19:56.619]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:19:56.621]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.621]                // -> [dbgmcu_val <= 0x00000007]
[18:19:56.621]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:19:56.621]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:19:56.622]              Sequence("ConfigureTraceSWOPin");
[18:19:56.622]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:19:56.622]                  <block atomic="false" info="">
[18:19:56.622]                    __var pin     = 0;
[18:19:56.623]                      // -> [pin <= 0x00000000]
[18:19:56.623]                    __var port    = 0;
[18:19:56.623]                      // -> [port <= 0x00000000]
[18:19:56.623]                    __var portAdr = 0;
[18:19:56.624]                      // -> [portAdr <= 0x00000000]
[18:19:56.624]                    __var pos     = 0;
[18:19:56.624]                      // -> [pos <= 0x00000000]
[18:19:56.625]                    __var SWO_Pin = 0x00010003;          // PB3
[18:19:56.625]                      // -> [SWO_Pin <= 0x00010003]
[18:19:56.625]                  </block>
[18:19:56.625]                  <block atomic="false" info="configure SWO">
[18:19:56.626]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:19:56.626]                      // -> [pin <= 0x00000003]
[18:19:56.626]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:19:56.626]                      // -> [port <= 0x00000001]
[18:19:56.626]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:19:56.627]                      // -> [portAdr <= 0x40020400]
[18:19:56.627]                    pos = pin * 2;
[18:19:56.627]                      // -> [pos <= 0x00000006]
[18:19:56.627]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:19:56.629]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.630]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.631]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:19:56.632]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.634]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.634]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:19:56.635]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.636]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.636]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:19:56.637]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.639]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.640]                  </block>
[18:19:56.640]                  <control if="pin <  8" while="" timeout="0" info="">
[18:19:56.641]                    // if-block "pin <  8"
[18:19:56.641]                      // =>  TRUE
[18:19:56.641]                    <block atomic="false" info="">
[18:19:56.641]                      pos = ((pin    ) & 7) * 4;
[18:19:56.641]                        // -> [pos <= 0x0000000C]
[18:19:56.641]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:19:56.642]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.644]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.645]                    </block>
[18:19:56.645]                    // end if-block "pin <  8"
[18:19:56.645]                  </control>
[18:19:56.645]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:19:56.646]                    // if-block "pin >= 8"
[18:19:56.646]                      // =>  FALSE
[18:19:56.646]                    // skip if-block "pin >= 8"
[18:19:56.646]                  </control>
[18:19:56.646]                </sequence>
[18:19:56.647]            </block>
[18:19:56.647]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:19:56.647]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:19:56.648]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.648]            </block>
[18:19:56.648]          </sequence>
[18:19:56.649]      </block>
[18:19:56.649]      // end if-block "traceSWO"
[18:19:56.649]    </control>
[18:19:56.649]    <control if="traceTPIU" while="" timeout="0" info="">
[18:19:56.649]      // if-block "traceTPIU"
[18:19:56.650]        // =>  FALSE
[18:19:56.651]      // skip if-block "traceTPIU"
[18:19:56.651]    </control>
[18:19:56.651]  </sequence>
[18:19:56.651]  
[18:19:56.670]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:19:56.670]  
[18:19:56.670]  <debugvars>
[18:19:56.670]    // Pre-defined
[18:19:56.671]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:19:56.671]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[18:19:56.671]    __dp=0x00000000
[18:19:56.672]    __ap=0x00000000
[18:19:56.672]    __traceout=0x00000001      (SWO Trace)
[18:19:56.672]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:19:56.672]    __FlashAddr=0x00000000
[18:19:56.673]    __FlashLen=0x00000000
[18:19:56.673]    __FlashArg=0x00000000
[18:19:56.673]    __FlashOp=0x00000000
[18:19:56.673]    __Result=0x00000000
[18:19:56.673]    
[18:19:56.673]    // User-defined
[18:19:56.673]    DbgMCU_CR=0x00000007
[18:19:56.673]    DbgMCU_APB1_Fz=0x00000000
[18:19:56.673]    DbgMCU_APB2_Fz=0x00000000
[18:19:56.675]    TraceClk_Pin=0x00040002
[18:19:56.675]    TraceD0_Pin=0x00040003
[18:19:56.675]    TraceD1_Pin=0x00040004
[18:19:56.675]    TraceD2_Pin=0x00040005
[18:19:56.675]    TraceD3_Pin=0x00040006
[18:19:56.676]  </debugvars>
[18:19:56.676]  
[18:19:56.676]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:19:56.676]    <block atomic="false" info="">
[18:19:56.676]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:19:56.677]        // -> [traceSWO <= 0x00000001]
[18:19:56.677]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:19:56.677]        // -> [traceTPIU <= 0x00000000]
[18:19:56.677]    </block>
[18:19:56.677]    <control if="traceSWO" while="" timeout="0" info="">
[18:19:56.677]      // if-block "traceSWO"
[18:19:56.678]        // =>  TRUE
[18:19:56.678]      <block atomic="false" info="">
[18:19:56.678]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:19:56.678]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:19:56.679]            <block atomic="false" info="">
[18:19:56.679]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:19:56.679]                // -> [dbgmcu_val <= 0x00000000]
[18:19:56.679]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:19:56.679]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:19:56.680]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:19:56.680]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.682]                // -> [dbgmcu_val <= 0x00000007]
[18:19:56.682]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:19:56.682]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:19:56.682]              Sequence("ConfigureTraceSWOPin");
[18:19:56.683]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:19:56.683]                  <block atomic="false" info="">
[18:19:56.683]                    __var pin     = 0;
[18:19:56.683]                      // -> [pin <= 0x00000000]
[18:19:56.683]                    __var port    = 0;
[18:19:56.684]                      // -> [port <= 0x00000000]
[18:19:56.684]                    __var portAdr = 0;
[18:19:56.684]                      // -> [portAdr <= 0x00000000]
[18:19:56.684]                    __var pos     = 0;
[18:19:56.685]                      // -> [pos <= 0x00000000]
[18:19:56.685]                    __var SWO_Pin = 0x00010003;          // PB3
[18:19:56.685]                      // -> [SWO_Pin <= 0x00010003]
[18:19:56.685]                  </block>
[18:19:56.686]                  <block atomic="false" info="configure SWO">
[18:19:56.686]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:19:56.686]                      // -> [pin <= 0x00000003]
[18:19:56.687]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:19:56.687]                      // -> [port <= 0x00000001]
[18:19:56.688]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:19:56.688]                      // -> [portAdr <= 0x40020400]
[18:19:56.688]                    pos = pin * 2;
[18:19:56.689]                      // -> [pos <= 0x00000006]
[18:19:56.689]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:19:56.690]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.691]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.693]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:19:56.693]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.694]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.695]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:19:56.697]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.698]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.698]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:19:56.699]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.701]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.702]                  </block>
[18:19:56.702]                  <control if="pin <  8" while="" timeout="0" info="">
[18:19:56.702]                    // if-block "pin <  8"
[18:19:56.702]                      // =>  TRUE
[18:19:56.703]                    <block atomic="false" info="">
[18:19:56.703]                      pos = ((pin    ) & 7) * 4;
[18:19:56.703]                        // -> [pos <= 0x0000000C]
[18:19:56.704]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:19:56.705]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.707]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.707]                    </block>
[18:19:56.707]                    // end if-block "pin <  8"
[18:19:56.707]                  </control>
[18:19:56.707]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:19:56.707]                    // if-block "pin >= 8"
[18:19:56.708]                      // =>  FALSE
[18:19:56.708]                    // skip if-block "pin >= 8"
[18:19:56.708]                  </control>
[18:19:56.708]                </sequence>
[18:19:56.708]            </block>
[18:19:56.710]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:19:56.710]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:19:56.711]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:56.711]            </block>
[18:19:56.711]          </sequence>
[18:19:56.712]      </block>
[18:19:56.712]      // end if-block "traceSWO"
[18:19:56.712]    </control>
[18:19:56.712]    <control if="traceTPIU" while="" timeout="0" info="">
[18:19:56.712]      // if-block "traceTPIU"
[18:19:56.713]        // =>  FALSE
[18:19:56.713]      // skip if-block "traceTPIU"
[18:19:56.713]    </control>
[18:19:56.713]  </sequence>
[18:19:56.713]  
[18:19:57.032]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[18:19:57.032]  
[18:19:57.080]  <debugvars>
[18:19:57.080]    // Pre-defined
[18:19:57.081]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:19:57.081]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[18:19:57.081]    __dp=0x00000000
[18:19:57.081]    __ap=0x00000000
[18:19:57.082]    __traceout=0x00000001      (SWO Trace)
[18:19:57.082]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:19:57.082]    __FlashAddr=0x00000000
[18:19:57.082]    __FlashLen=0x00000000
[18:19:57.083]    __FlashArg=0x00000000
[18:19:57.083]    __FlashOp=0x00000000
[18:19:57.083]    __Result=0x00000000
[18:19:57.083]    
[18:19:57.083]    // User-defined
[18:19:57.083]    DbgMCU_CR=0x00000007
[18:19:57.084]    DbgMCU_APB1_Fz=0x00000000
[18:19:57.084]    DbgMCU_APB2_Fz=0x00000000
[18:19:57.084]    TraceClk_Pin=0x00040002
[18:19:57.084]    TraceD0_Pin=0x00040003
[18:19:57.084]    TraceD1_Pin=0x00040004
[18:19:57.085]    TraceD2_Pin=0x00040005
[18:19:57.085]    TraceD3_Pin=0x00040006
[18:19:57.085]  </debugvars>
[18:19:57.085]  
[18:19:57.086]  <sequence name="TraceStart" Pname="" disable="false" info="">
[18:19:57.086]    <block atomic="false" info="">
[18:19:57.086]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[18:19:57.086]        // -> [traceSWO <= 0x00000001]
[18:19:57.086]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[18:19:57.087]        // -> [traceTPIU <= 0x00000000]
[18:19:57.087]    </block>
[18:19:57.088]    <control if="traceSWO" while="" timeout="0" info="">
[18:19:57.088]      // if-block "traceSWO"
[18:19:57.088]        // =>  TRUE
[18:19:57.089]      <block atomic="false" info="">
[18:19:57.089]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[18:19:57.090]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[18:19:57.090]            <block atomic="false" info="">
[18:19:57.091]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:19:57.091]                // -> [dbgmcu_val <= 0x00000000]
[18:19:57.091]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[18:19:57.091]                // -> [dbgmcu_trace_val <= 0x00000000]
[18:19:57.092]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[18:19:57.093]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:19:57.093]                // -> [dbgmcu_val <= 0x00000007]
[18:19:57.093]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[18:19:57.094]                // -> [dbgmcu_trace_val <= 0x00000020]
[18:19:57.094]              Sequence("ConfigureTraceSWOPin");
[18:19:57.095]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[18:19:57.095]                  <block atomic="false" info="">
[18:19:57.095]                    __var pin     = 0;
[18:19:57.095]                      // -> [pin <= 0x00000000]
[18:19:57.096]                    __var port    = 0;
[18:19:57.096]                      // -> [port <= 0x00000000]
[18:19:57.096]                    __var portAdr = 0;
[18:19:57.096]                      // -> [portAdr <= 0x00000000]
[18:19:57.097]                    __var pos     = 0;
[18:19:57.097]                      // -> [pos <= 0x00000000]
[18:19:57.097]                    __var SWO_Pin = 0x00010003;          // PB3
[18:19:57.097]                      // -> [SWO_Pin <= 0x00010003]
[18:19:57.097]                  </block>
[18:19:57.098]                  <block atomic="false" info="configure SWO">
[18:19:57.098]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[18:19:57.098]                      // -> [pin <= 0x00000003]
[18:19:57.098]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[18:19:57.099]                      // -> [port <= 0x00000001]
[18:19:57.099]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[18:19:57.099]                      // -> [portAdr <= 0x40020400]
[18:19:57.099]                    pos = pin * 2;
[18:19:57.100]                      // -> [pos <= 0x00000006]
[18:19:57.100]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[18:19:57.102]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:19:57.103]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:57.103]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[18:19:57.105]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[18:19:57.106]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:57.107]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[18:19:57.108]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[18:19:57.109]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:57.109]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[18:19:57.110]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[18:19:57.111]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:57.112]                  </block>
[18:19:57.113]                  <control if="pin <  8" while="" timeout="0" info="">
[18:19:57.113]                    // if-block "pin <  8"
[18:19:57.113]                      // =>  TRUE
[18:19:57.113]                    <block atomic="false" info="">
[18:19:57.114]                      pos = ((pin    ) & 7) * 4;
[18:19:57.114]                        // -> [pos <= 0x0000000C]
[18:19:57.114]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[18:19:57.115]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[18:19:57.116]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:57.117]                    </block>
[18:19:57.117]                    // end if-block "pin <  8"
[18:19:57.117]                  </control>
[18:19:57.117]                  <control if="pin >= 8" while="" timeout="0" info="">
[18:19:57.118]                    // if-block "pin >= 8"
[18:19:57.118]                      // =>  FALSE
[18:19:57.119]                    // skip if-block "pin >= 8"
[18:19:57.120]                  </control>
[18:19:57.120]                </sequence>
[18:19:57.120]            </block>
[18:19:57.120]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[18:19:57.121]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[18:19:57.122]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[18:19:57.122]            </block>
[18:19:57.122]          </sequence>
[18:19:57.123]      </block>
[18:19:57.123]      // end if-block "traceSWO"
[18:19:57.123]    </control>
[18:19:57.124]    <control if="traceTPIU" while="" timeout="0" info="">
[18:19:57.124]      // if-block "traceTPIU"
[18:19:57.124]        // =>  FALSE
[18:19:57.124]      // skip if-block "traceTPIU"
[18:19:57.125]    </control>
[18:19:57.125]  </sequence>
[18:19:57.125]  
[18:21:02.018]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[18:21:02.018]  
[18:21:02.065]  <debugvars>
[18:21:02.065]    // Pre-defined
[18:21:02.066]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[18:21:02.066]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[18:21:02.066]    __dp=0x00000000
[18:21:02.067]    __ap=0x00000000
[18:21:02.067]    __traceout=0x00000001      (SWO Trace)
[18:21:02.067]    __errorcontrol=0x00000000  (Skip Errors="False")
[18:21:02.067]    __FlashAddr=0x00000000
[18:21:02.068]    __FlashLen=0x00000000
[18:21:02.068]    __FlashArg=0x00000000
[18:21:02.069]    __FlashOp=0x00000000
[18:21:02.069]    __Result=0x00000000
[18:21:02.069]    
[18:21:02.069]    // User-defined
[18:21:02.069]    DbgMCU_CR=0x00000007
[18:21:02.069]    DbgMCU_APB1_Fz=0x00000000
[18:21:02.070]    DbgMCU_APB2_Fz=0x00000000
[18:21:02.070]    TraceClk_Pin=0x00040002
[18:21:02.071]    TraceD0_Pin=0x00040003
[18:21:02.071]    TraceD1_Pin=0x00040004
[18:21:02.071]    TraceD2_Pin=0x00040005
[18:21:02.071]    TraceD3_Pin=0x00040006
[18:21:02.071]  </debugvars>
[18:21:02.071]  
[18:21:02.072]  <sequence name="TraceStop" Pname="" disable="false" info="">
[18:21:02.073]    <block atomic="false" info="">
[18:21:02.073]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[18:21:02.074]        // -> [traceSWO <= 0x00000001]
[18:21:02.074]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[18:21:02.074]        // -> [traceTPIU <= 0x00000000]
[18:21:02.075]    </block>
[18:21:02.075]    <control if="traceSWO" while="" timeout="0" info="">
[18:21:02.075]      // if-block "traceSWO"
[18:21:02.075]        // =>  TRUE
[18:21:02.075]      <block atomic="false" info="">
[18:21:02.076]        Sequence("DisableTraceSWO");
[18:21:02.076]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[18:21:02.076]            <block atomic="false" info="">
[18:21:02.077]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[18:21:02.078]                // -> [dbgmcu_val <= 0x00000000]
[18:21:02.078]            </block>
[18:21:02.078]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[18:21:02.078]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[18:21:02.079]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[18:21:02.080]                // -> [dbgmcu_val <= 0x00000007]
[18:21:02.080]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[18:21:02.082]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[18:21:02.082]            </block>
[18:21:02.082]          </sequence>
[18:21:02.083]      </block>
[18:21:02.083]      // end if-block "traceSWO"
[18:21:02.083]    </control>
[18:21:02.083]    <control if="traceTPIU" while="" timeout="0" info="">
[18:21:02.084]      // if-block "traceTPIU"
[18:21:02.084]        // =>  FALSE
[18:21:02.084]      // skip if-block "traceTPIU"
[18:21:02.084]    </control>
[18:21:02.084]  </sequence>
[18:21:02.085]  
[21:09:14.367]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[21:09:14.367]  
[21:09:14.368]  <debugvars>
[21:09:14.368]    // Pre-defined
[21:09:14.369]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:09:14.369]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:09:14.369]    __dp=0x00000000
[21:09:14.370]    __ap=0x00000000
[21:09:14.370]    __traceout=0x00000001      (SWO Trace)
[21:09:14.370]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:09:14.370]    __FlashAddr=0x00000000
[21:09:14.371]    __FlashLen=0x00000000
[21:09:14.371]    __FlashArg=0x00000000
[21:09:14.371]    __FlashOp=0x00000000
[21:09:14.371]    __Result=0x00000000
[21:09:14.372]    
[21:09:14.372]    // User-defined
[21:09:14.372]    DbgMCU_CR=0x00000007
[21:09:14.372]    DbgMCU_APB1_Fz=0x00000000
[21:09:14.374]    DbgMCU_APB2_Fz=0x00000000
[21:09:14.374]    TraceClk_Pin=0x00040002
[21:09:14.374]    TraceD0_Pin=0x00040003
[21:09:14.374]    TraceD1_Pin=0x00040004
[21:09:14.375]    TraceD2_Pin=0x00040005
[21:09:14.375]    TraceD3_Pin=0x00040006
[21:09:14.375]  </debugvars>
[21:09:14.376]  
[21:09:14.376]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[21:09:14.376]    <block atomic="false" info="">
[21:09:14.376]      Sequence("CheckID");
[21:09:14.377]        <sequence name="CheckID" Pname="" disable="false" info="">
[21:09:14.377]          <block atomic="false" info="">
[21:09:14.377]            __var pidr1 = 0;
[21:09:14.378]              // -> [pidr1 <= 0x00000000]
[21:09:14.378]            __var pidr2 = 0;
[21:09:14.378]              // -> [pidr2 <= 0x00000000]
[21:09:14.380]            __var jep106id = 0;
[21:09:14.380]              // -> [jep106id <= 0x00000000]
[21:09:14.381]            __var ROMTableBase = 0;
[21:09:14.381]              // -> [ROMTableBase <= 0x00000000]
[21:09:14.381]            __ap = 0;      // AHB-AP
[21:09:14.381]              // -> [__ap <= 0x00000000]
[21:09:14.382]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[21:09:14.382]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.383]              // -> [ROMTableBase <= 0xE00FF000]
[21:09:14.383]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[21:09:14.385]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.386]              // -> [pidr1 <= 0x00000004]
[21:09:14.387]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[21:09:14.388]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.389]              // -> [pidr2 <= 0x0000000A]
[21:09:14.389]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[21:09:14.389]              // -> [jep106id <= 0x00000020]
[21:09:14.389]          </block>
[21:09:14.390]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[21:09:14.390]            // if-block "jep106id != 0x20"
[21:09:14.390]              // =>  FALSE
[21:09:14.390]            // skip if-block "jep106id != 0x20"
[21:09:14.391]          </control>
[21:09:14.391]        </sequence>
[21:09:14.391]    </block>
[21:09:14.391]  </sequence>
[21:09:14.391]  
[21:09:14.392]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[21:09:14.392]  
[21:09:14.392]  <debugvars>
[21:09:14.392]    // Pre-defined
[21:09:14.393]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:09:14.393]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:09:14.393]    __dp=0x00000000
[21:09:14.394]    __ap=0x00000000
[21:09:14.394]    __traceout=0x00000001      (SWO Trace)
[21:09:14.394]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:09:14.395]    __FlashAddr=0x00000000
[21:09:14.395]    __FlashLen=0x00000000
[21:09:14.396]    __FlashArg=0x00000000
[21:09:14.396]    __FlashOp=0x00000000
[21:09:14.397]    __Result=0x00000000
[21:09:14.397]    
[21:09:14.397]    // User-defined
[21:09:14.398]    DbgMCU_CR=0x00000007
[21:09:14.399]    DbgMCU_APB1_Fz=0x00000000
[21:09:14.399]    DbgMCU_APB2_Fz=0x00000000
[21:09:14.399]    TraceClk_Pin=0x00040002
[21:09:14.400]    TraceD0_Pin=0x00040003
[21:09:14.400]    TraceD1_Pin=0x00040004
[21:09:14.400]    TraceD2_Pin=0x00040005
[21:09:14.400]    TraceD3_Pin=0x00040006
[21:09:14.400]  </debugvars>
[21:09:14.400]  
[21:09:14.400]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[21:09:14.401]    <block atomic="false" info="">
[21:09:14.402]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[21:09:14.403]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.403]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[21:09:14.405]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.405]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[21:09:14.407]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.407]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[21:09:14.409]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.410]    </block>
[21:09:14.410]  </sequence>
[21:09:14.411]  
[21:09:14.468]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[21:09:14.468]  
[21:09:14.468]  <debugvars>
[21:09:14.468]    // Pre-defined
[21:09:14.469]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:09:14.469]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:09:14.470]    __dp=0x00000000
[21:09:14.470]    __ap=0x00000000
[21:09:14.471]    __traceout=0x00000001      (SWO Trace)
[21:09:14.471]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:09:14.471]    __FlashAddr=0x00000000
[21:09:14.472]    __FlashLen=0x00000000
[21:09:14.472]    __FlashArg=0x00000000
[21:09:14.472]    __FlashOp=0x00000000
[21:09:14.473]    __Result=0x00000000
[21:09:14.473]    
[21:09:14.473]    // User-defined
[21:09:14.474]    DbgMCU_CR=0x00000007
[21:09:14.474]    DbgMCU_APB1_Fz=0x00000000
[21:09:14.474]    DbgMCU_APB2_Fz=0x00000000
[21:09:14.475]    TraceClk_Pin=0x00040002
[21:09:14.475]    TraceD0_Pin=0x00040003
[21:09:14.476]    TraceD1_Pin=0x00040004
[21:09:14.476]    TraceD2_Pin=0x00040005
[21:09:14.477]    TraceD3_Pin=0x00040006
[21:09:14.477]  </debugvars>
[21:09:14.477]  
[21:09:14.478]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:09:14.478]    <block atomic="false" info="">
[21:09:14.478]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:09:14.479]        // -> [traceSWO <= 0x00000001]
[21:09:14.479]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:09:14.480]        // -> [traceTPIU <= 0x00000000]
[21:09:14.481]    </block>
[21:09:14.481]    <control if="traceSWO" while="" timeout="0" info="">
[21:09:14.481]      // if-block "traceSWO"
[21:09:14.482]        // =>  TRUE
[21:09:14.482]      <block atomic="false" info="">
[21:09:14.482]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:09:14.482]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:09:14.483]            <block atomic="false" info="">
[21:09:14.483]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:09:14.483]                // -> [dbgmcu_val <= 0x00000000]
[21:09:14.484]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:09:14.484]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:09:14.484]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:09:14.485]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.487]                // -> [dbgmcu_val <= 0x00000007]
[21:09:14.487]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:09:14.487]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:09:14.487]              Sequence("ConfigureTraceSWOPin");
[21:09:14.488]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:09:14.488]                  <block atomic="false" info="">
[21:09:14.489]                    __var pin     = 0;
[21:09:14.490]                      // -> [pin <= 0x00000000]
[21:09:14.490]                    __var port    = 0;
[21:09:14.490]                      // -> [port <= 0x00000000]
[21:09:14.490]                    __var portAdr = 0;
[21:09:14.491]                      // -> [portAdr <= 0x00000000]
[21:09:14.491]                    __var pos     = 0;
[21:09:14.491]                      // -> [pos <= 0x00000000]
[21:09:14.492]                    __var SWO_Pin = 0x00010003;          // PB3
[21:09:14.492]                      // -> [SWO_Pin <= 0x00010003]
[21:09:14.492]                  </block>
[21:09:14.493]                  <block atomic="false" info="configure SWO">
[21:09:14.494]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:09:14.494]                      // -> [pin <= 0x00000003]
[21:09:14.494]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:09:14.495]                      // -> [port <= 0x00000001]
[21:09:14.495]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:09:14.495]                      // -> [portAdr <= 0x40020400]
[21:09:14.496]                    pos = pin * 2;
[21:09:14.496]                      // -> [pos <= 0x00000006]
[21:09:14.497]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:09:14.499]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.500]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.501]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:09:14.502]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.504]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.504]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:09:14.506]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.508]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.508]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:09:14.510]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.512]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.512]                  </block>
[21:09:14.512]                  <control if="pin <  8" while="" timeout="0" info="">
[21:09:14.512]                    // if-block "pin <  8"
[21:09:14.513]                      // =>  TRUE
[21:09:14.513]                    <block atomic="false" info="">
[21:09:14.514]                      pos = ((pin    ) & 7) * 4;
[21:09:14.514]                        // -> [pos <= 0x0000000C]
[21:09:14.515]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:09:14.516]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.518]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.518]                    </block>
[21:09:14.518]                    // end if-block "pin <  8"
[21:09:14.519]                  </control>
[21:09:14.519]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:09:14.519]                    // if-block "pin >= 8"
[21:09:14.519]                      // =>  FALSE
[21:09:14.520]                    // skip if-block "pin >= 8"
[21:09:14.520]                  </control>
[21:09:14.521]                </sequence>
[21:09:14.521]            </block>
[21:09:14.521]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:09:14.522]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:09:14.524]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.524]            </block>
[21:09:14.524]          </sequence>
[21:09:14.524]      </block>
[21:09:14.525]      // end if-block "traceSWO"
[21:09:14.525]    </control>
[21:09:14.525]    <control if="traceTPIU" while="" timeout="0" info="">
[21:09:14.525]      // if-block "traceTPIU"
[21:09:14.526]        // =>  FALSE
[21:09:14.526]      // skip if-block "traceTPIU"
[21:09:14.526]    </control>
[21:09:14.526]  </sequence>
[21:09:14.527]  
[21:09:14.547]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:09:14.547]  
[21:09:14.547]  <debugvars>
[21:09:14.548]    // Pre-defined
[21:09:14.548]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:09:14.549]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:09:14.549]    __dp=0x00000000
[21:09:14.549]    __ap=0x00000000
[21:09:14.550]    __traceout=0x00000001      (SWO Trace)
[21:09:14.550]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:09:14.551]    __FlashAddr=0x00000000
[21:09:14.551]    __FlashLen=0x00000000
[21:09:14.551]    __FlashArg=0x00000000
[21:09:14.552]    __FlashOp=0x00000000
[21:09:14.552]    __Result=0x00000000
[21:09:14.553]    
[21:09:14.553]    // User-defined
[21:09:14.553]    DbgMCU_CR=0x00000007
[21:09:14.553]    DbgMCU_APB1_Fz=0x00000000
[21:09:14.554]    DbgMCU_APB2_Fz=0x00000000
[21:09:14.555]    TraceClk_Pin=0x00040002
[21:09:14.555]    TraceD0_Pin=0x00040003
[21:09:14.555]    TraceD1_Pin=0x00040004
[21:09:14.556]    TraceD2_Pin=0x00040005
[21:09:14.556]    TraceD3_Pin=0x00040006
[21:09:14.556]  </debugvars>
[21:09:14.557]  
[21:09:14.557]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:09:14.558]    <block atomic="false" info="">
[21:09:14.558]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:09:14.558]        // -> [traceSWO <= 0x00000001]
[21:09:14.559]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:09:14.559]        // -> [traceTPIU <= 0x00000000]
[21:09:14.560]    </block>
[21:09:14.560]    <control if="traceSWO" while="" timeout="0" info="">
[21:09:14.560]      // if-block "traceSWO"
[21:09:14.560]        // =>  TRUE
[21:09:14.561]      <block atomic="false" info="">
[21:09:14.561]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:09:14.561]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:09:14.562]            <block atomic="false" info="">
[21:09:14.562]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:09:14.562]                // -> [dbgmcu_val <= 0x00000000]
[21:09:14.563]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:09:14.563]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:09:14.564]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:09:14.565]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.566]                // -> [dbgmcu_val <= 0x00000007]
[21:09:14.566]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:09:14.567]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:09:14.567]              Sequence("ConfigureTraceSWOPin");
[21:09:14.567]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:09:14.568]                  <block atomic="false" info="">
[21:09:14.568]                    __var pin     = 0;
[21:09:14.568]                      // -> [pin <= 0x00000000]
[21:09:14.569]                    __var port    = 0;
[21:09:14.569]                      // -> [port <= 0x00000000]
[21:09:14.569]                    __var portAdr = 0;
[21:09:14.570]                      // -> [portAdr <= 0x00000000]
[21:09:14.571]                    __var pos     = 0;
[21:09:14.571]                      // -> [pos <= 0x00000000]
[21:09:14.572]                    __var SWO_Pin = 0x00010003;          // PB3
[21:09:14.572]                      // -> [SWO_Pin <= 0x00010003]
[21:09:14.573]                  </block>
[21:09:14.573]                  <block atomic="false" info="configure SWO">
[21:09:14.574]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:09:14.574]                      // -> [pin <= 0x00000003]
[21:09:14.574]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:09:14.575]                      // -> [port <= 0x00000001]
[21:09:14.575]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:09:14.576]                      // -> [portAdr <= 0x40020400]
[21:09:14.576]                    pos = pin * 2;
[21:09:14.577]                      // -> [pos <= 0x00000006]
[21:09:14.577]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:09:14.579]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.581]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.581]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:09:14.583]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.584]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.585]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:09:14.586]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.588]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.588]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:09:14.590]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.591]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.592]                  </block>
[21:09:14.592]                  <control if="pin <  8" while="" timeout="0" info="">
[21:09:14.592]                    // if-block "pin <  8"
[21:09:14.592]                      // =>  TRUE
[21:09:14.593]                    <block atomic="false" info="">
[21:09:14.593]                      pos = ((pin    ) & 7) * 4;
[21:09:14.593]                        // -> [pos <= 0x0000000C]
[21:09:14.594]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:09:14.595]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.597]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.597]                    </block>
[21:09:14.598]                    // end if-block "pin <  8"
[21:09:14.598]                  </control>
[21:09:14.599]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:09:14.599]                    // if-block "pin >= 8"
[21:09:14.599]                      // =>  FALSE
[21:09:14.600]                    // skip if-block "pin >= 8"
[21:09:14.600]                  </control>
[21:09:14.601]                </sequence>
[21:09:14.601]            </block>
[21:09:14.601]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:09:14.602]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:09:14.603]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:14.604]            </block>
[21:09:14.604]          </sequence>
[21:09:14.605]      </block>
[21:09:14.605]      // end if-block "traceSWO"
[21:09:14.605]    </control>
[21:09:14.606]    <control if="traceTPIU" while="" timeout="0" info="">
[21:09:14.606]      // if-block "traceTPIU"
[21:09:14.606]        // =>  FALSE
[21:09:14.606]      // skip if-block "traceTPIU"
[21:09:14.607]    </control>
[21:09:14.607]  </sequence>
[21:09:14.607]  
[21:09:15.118]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[21:09:15.118]  
[21:09:15.118]  <debugvars>
[21:09:15.119]    // Pre-defined
[21:09:15.119]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:09:15.119]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:09:15.119]    __dp=0x00000000
[21:09:15.119]    __ap=0x00000000
[21:09:15.119]    __traceout=0x00000001      (SWO Trace)
[21:09:15.119]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:09:15.119]    __FlashAddr=0x00000000
[21:09:15.119]    __FlashLen=0x00000000
[21:09:15.119]    __FlashArg=0x00000000
[21:09:15.119]    __FlashOp=0x00000000
[21:09:15.120]    __Result=0x00000000
[21:09:15.120]    
[21:09:15.120]    // User-defined
[21:09:15.120]    DbgMCU_CR=0x00000007
[21:09:15.120]    DbgMCU_APB1_Fz=0x00000000
[21:09:15.120]    DbgMCU_APB2_Fz=0x00000000
[21:09:15.120]    TraceClk_Pin=0x00040002
[21:09:15.120]    TraceD0_Pin=0x00040003
[21:09:15.120]    TraceD1_Pin=0x00040004
[21:09:15.121]    TraceD2_Pin=0x00040005
[21:09:15.121]    TraceD3_Pin=0x00040006
[21:09:15.121]  </debugvars>
[21:09:15.121]  
[21:09:15.121]  <sequence name="TraceStart" Pname="" disable="false" info="">
[21:09:15.121]    <block atomic="false" info="">
[21:09:15.121]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[21:09:15.121]        // -> [traceSWO <= 0x00000001]
[21:09:15.121]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[21:09:15.122]        // -> [traceTPIU <= 0x00000000]
[21:09:15.122]    </block>
[21:09:15.122]    <control if="traceSWO" while="" timeout="0" info="">
[21:09:15.122]      // if-block "traceSWO"
[21:09:15.122]        // =>  TRUE
[21:09:15.122]      <block atomic="false" info="">
[21:09:15.122]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[21:09:15.122]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[21:09:15.122]            <block atomic="false" info="">
[21:09:15.122]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:09:15.122]                // -> [dbgmcu_val <= 0x00000000]
[21:09:15.123]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[21:09:15.123]                // -> [dbgmcu_trace_val <= 0x00000000]
[21:09:15.123]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[21:09:15.123]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:09:15.124]                // -> [dbgmcu_val <= 0x00000007]
[21:09:15.124]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[21:09:15.124]                // -> [dbgmcu_trace_val <= 0x00000020]
[21:09:15.124]              Sequence("ConfigureTraceSWOPin");
[21:09:15.124]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[21:09:15.124]                  <block atomic="false" info="">
[21:09:15.124]                    __var pin     = 0;
[21:09:15.125]                      // -> [pin <= 0x00000000]
[21:09:15.125]                    __var port    = 0;
[21:09:15.125]                      // -> [port <= 0x00000000]
[21:09:15.125]                    __var portAdr = 0;
[21:09:15.125]                      // -> [portAdr <= 0x00000000]
[21:09:15.125]                    __var pos     = 0;
[21:09:15.125]                      // -> [pos <= 0x00000000]
[21:09:15.125]                    __var SWO_Pin = 0x00010003;          // PB3
[21:09:15.125]                      // -> [SWO_Pin <= 0x00010003]
[21:09:15.126]                  </block>
[21:09:15.126]                  <block atomic="false" info="configure SWO">
[21:09:15.126]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[21:09:15.126]                      // -> [pin <= 0x00000003]
[21:09:15.126]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[21:09:15.126]                      // -> [port <= 0x00000001]
[21:09:15.127]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[21:09:15.127]                      // -> [portAdr <= 0x40020400]
[21:09:15.127]                    pos = pin * 2;
[21:09:15.127]                      // -> [pos <= 0x00000006]
[21:09:15.127]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[21:09:15.128]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:09:15.129]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:15.129]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[21:09:15.130]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[21:09:15.131]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:15.131]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[21:09:15.131]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[21:09:15.132]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:15.132]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[21:09:15.132]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[21:09:15.133]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:15.133]                  </block>
[21:09:15.133]                  <control if="pin <  8" while="" timeout="0" info="">
[21:09:15.133]                    // if-block "pin <  8"
[21:09:15.133]                      // =>  TRUE
[21:09:15.133]                    <block atomic="false" info="">
[21:09:15.134]                      pos = ((pin    ) & 7) * 4;
[21:09:15.134]                        // -> [pos <= 0x0000000C]
[21:09:15.134]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[21:09:15.134]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[21:09:15.135]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:15.135]                    </block>
[21:09:15.135]                    // end if-block "pin <  8"
[21:09:15.135]                  </control>
[21:09:15.135]                  <control if="pin >= 8" while="" timeout="0" info="">
[21:09:15.135]                    // if-block "pin >= 8"
[21:09:15.135]                      // =>  FALSE
[21:09:15.135]                    // skip if-block "pin >= 8"
[21:09:15.136]                  </control>
[21:09:15.136]                </sequence>
[21:09:15.136]            </block>
[21:09:15.136]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[21:09:15.136]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[21:09:15.137]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[21:09:15.137]            </block>
[21:09:15.137]          </sequence>
[21:09:15.137]      </block>
[21:09:15.137]      // end if-block "traceSWO"
[21:09:15.137]    </control>
[21:09:15.137]    <control if="traceTPIU" while="" timeout="0" info="">
[21:09:15.137]      // if-block "traceTPIU"
[21:09:15.137]        // =>  FALSE
[21:09:15.138]      // skip if-block "traceTPIU"
[21:09:15.138]    </control>
[21:09:15.138]  </sequence>
[21:09:15.138]  
[21:40:31.682]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[21:40:31.682]  
[21:40:31.683]  <debugvars>
[21:40:31.683]    // Pre-defined
[21:40:31.683]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[21:40:31.683]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[21:40:31.684]    __dp=0x00000000
[21:40:31.684]    __ap=0x00000000
[21:40:31.684]    __traceout=0x00000001      (SWO Trace)
[21:40:31.685]    __errorcontrol=0x00000000  (Skip Errors="False")
[21:40:31.685]    __FlashAddr=0x00000000
[21:40:31.685]    __FlashLen=0x00000000
[21:40:31.685]    __FlashArg=0x00000000
[21:40:31.685]    __FlashOp=0x00000000
[21:40:31.685]    __Result=0x00000000
[21:40:31.685]    
[21:40:31.685]    // User-defined
[21:40:31.685]    DbgMCU_CR=0x00000007
[21:40:31.685]    DbgMCU_APB1_Fz=0x00000000
[21:40:31.685]    DbgMCU_APB2_Fz=0x00000000
[21:40:31.686]    TraceClk_Pin=0x00040002
[21:40:31.686]    TraceD0_Pin=0x00040003
[21:40:31.686]    TraceD1_Pin=0x00040004
[21:40:31.686]    TraceD2_Pin=0x00040005
[21:40:31.686]    TraceD3_Pin=0x00040006
[21:40:31.686]  </debugvars>
[21:40:31.686]  
[21:40:31.687]  <sequence name="TraceStop" Pname="" disable="false" info="">
[21:40:31.687]    <block atomic="false" info="">
[21:40:31.687]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[21:40:31.687]        // -> [traceSWO <= 0x00000001]
[21:40:31.688]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[21:40:31.688]        // -> [traceTPIU <= 0x00000000]
[21:40:31.688]    </block>
[21:40:31.688]    <control if="traceSWO" while="" timeout="0" info="">
[21:40:31.689]      // if-block "traceSWO"
[21:40:31.689]        // =>  TRUE
[21:40:31.689]      <block atomic="false" info="">
[21:40:31.689]        Sequence("DisableTraceSWO");
[21:40:31.689]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[21:40:31.690]            <block atomic="false" info="">
[21:40:31.690]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[21:40:31.690]                // -> [dbgmcu_val <= 0x00000000]
[21:40:31.691]            </block>
[21:40:31.691]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[21:40:31.691]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[21:40:31.692]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[21:40:31.692]                // -> [dbgmcu_val <= 0x00000007]
[21:40:31.692]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[21:40:31.693]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[21:40:31.693]            </block>
[21:40:31.693]          </sequence>
[21:40:31.693]      </block>
[21:40:31.693]      // end if-block "traceSWO"
[21:40:31.693]    </control>
[21:40:31.693]    <control if="traceTPIU" while="" timeout="0" info="">
[21:40:31.694]      // if-block "traceTPIU"
[21:40:31.694]        // =>  FALSE
[21:40:31.694]      // skip if-block "traceTPIU"
[21:40:31.694]    </control>
[21:40:31.694]  </sequence>
[21:40:31.694]  
