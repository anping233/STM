/*
 *  CMSIS Pack Debug Access Sequence Log
 *  File        : D:\study\STM32\practice\gpio\prj\f411_proj_Sequences_0006.log
 *  Created     : 22:24:10 (06/06/2023)
 *  Device      : STM32F411CEUx
 *  PDSC File   : C:/Users/anping/AppData/Local/Arm/Packs/Keil/STM32F4xx_DFP/2.17.0/Keil.STM32F4xx_DFP.pdsc
 *  Config File : D:\study\STM32\practice\gpio\prj\DebugConfig\Target_1_STM32F411CEUx.dbgconf
 *
 */

[22:24:10.850]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:24:10.850]  
[22:24:10.851]  <debugvars>
[22:24:10.851]    // Pre-defined
[22:24:10.852]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:24:10.852]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[22:24:10.852]    __dp=0x00000000
[22:24:10.853]    __ap=0x00000000
[22:24:10.854]    __traceout=0x00000001      (SWO Trace)
[22:24:10.854]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:24:10.854]    __FlashAddr=0x00000000
[22:24:10.854]    __FlashLen=0x00000000
[22:24:10.854]    __FlashArg=0x00000000
[22:24:10.854]    __FlashOp=0x00000000
[22:24:10.854]    __Result=0x00000000
[22:24:10.854]    
[22:24:10.854]    // User-defined
[22:24:10.854]    DbgMCU_CR=0x00000007
[22:24:10.854]    DbgMCU_APB1_Fz=0x00000000
[22:24:10.855]    DbgMCU_APB2_Fz=0x00000000
[22:24:10.855]    TraceClk_Pin=0x00040002
[22:24:10.855]    TraceD0_Pin=0x00040003
[22:24:10.856]    TraceD1_Pin=0x00040004
[22:24:10.856]    TraceD2_Pin=0x00040005
[22:24:10.856]    TraceD3_Pin=0x00040006
[22:24:10.856]  </debugvars>
[22:24:10.856]  
[22:24:10.856]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:24:10.856]    <block atomic="false" info="">
[22:24:10.856]      Sequence("CheckID");
[22:24:10.856]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:24:10.856]          <block atomic="false" info="">
[22:24:10.857]            __var pidr1 = 0;
[22:24:10.857]              // -> [pidr1 <= 0x00000000]
[22:24:10.857]            __var pidr2 = 0;
[22:24:10.858]              // -> [pidr2 <= 0x00000000]
[22:24:10.858]            __var jep106id = 0;
[22:24:10.858]              // -> [jep106id <= 0x00000000]
[22:24:10.858]            __var ROMTableBase = 0;
[22:24:10.858]              // -> [ROMTableBase <= 0x00000000]
[22:24:10.858]            __ap = 0;      // AHB-AP
[22:24:10.858]              // -> [__ap <= 0x00000000]
[22:24:10.859]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:24:10.859]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[22:24:10.859]              // -> [ROMTableBase <= 0xE00FF000]
[22:24:10.860]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:24:10.861]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:24:10.861]              // -> [pidr1 <= 0x00000004]
[22:24:10.861]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:24:10.862]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[22:24:10.862]              // -> [pidr2 <= 0x0000000A]
[22:24:10.863]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:24:10.863]              // -> [jep106id <= 0x00000020]
[22:24:10.863]          </block>
[22:24:10.863]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:24:10.863]            // if-block "jep106id != 0x20"
[22:24:10.863]              // =>  FALSE
[22:24:10.864]            // skip if-block "jep106id != 0x20"
[22:24:10.865]          </control>
[22:24:10.865]        </sequence>
[22:24:10.865]    </block>
[22:24:10.865]  </sequence>
[22:24:10.865]  
[22:24:10.865]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:24:10.865]  
[22:24:10.865]  <debugvars>
[22:24:10.865]    // Pre-defined
[22:24:10.866]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:24:10.866]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[22:24:10.866]    __dp=0x00000000
[22:24:10.866]    __ap=0x00000000
[22:24:10.866]    __traceout=0x00000001      (SWO Trace)
[22:24:10.868]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:24:10.868]    __FlashAddr=0x00000000
[22:24:10.868]    __FlashLen=0x00000000
[22:24:10.868]    __FlashArg=0x00000000
[22:24:10.868]    __FlashOp=0x00000000
[22:24:10.868]    __Result=0x00000000
[22:24:10.868]    
[22:24:10.868]    // User-defined
[22:24:10.868]    DbgMCU_CR=0x00000007
[22:24:10.868]    DbgMCU_APB1_Fz=0x00000000
[22:24:10.869]    DbgMCU_APB2_Fz=0x00000000
[22:24:10.869]    TraceClk_Pin=0x00040002
[22:24:10.869]    TraceD0_Pin=0x00040003
[22:24:10.869]    TraceD1_Pin=0x00040004
[22:24:10.869]    TraceD2_Pin=0x00040005
[22:24:10.870]    TraceD3_Pin=0x00040006
[22:24:10.870]  </debugvars>
[22:24:10.870]  
[22:24:10.870]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:24:10.871]    <block atomic="false" info="">
[22:24:10.871]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:24:10.871]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:10.872]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:24:10.873]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:10.873]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:24:10.874]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:10.874]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:24:10.875]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:10.876]    </block>
[22:24:10.876]  </sequence>
[22:24:10.876]  
[22:24:12.303]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:24:12.303]  
[22:24:12.351]  <debugvars>
[22:24:12.351]    // Pre-defined
[22:24:12.351]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:24:12.351]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:24:12.352]    __dp=0x00000000
[22:24:12.352]    __ap=0x00000000
[22:24:12.352]    __traceout=0x00000001      (SWO Trace)
[22:24:12.352]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:24:12.352]    __FlashAddr=0x00000000
[22:24:12.353]    __FlashLen=0x00000000
[22:24:12.353]    __FlashArg=0x00000000
[22:24:12.353]    __FlashOp=0x00000000
[22:24:12.353]    __Result=0x00000000
[22:24:12.354]    
[22:24:12.354]    // User-defined
[22:24:12.354]    DbgMCU_CR=0x00000007
[22:24:12.354]    DbgMCU_APB1_Fz=0x00000000
[22:24:12.354]    DbgMCU_APB2_Fz=0x00000000
[22:24:12.354]    TraceClk_Pin=0x00040002
[22:24:12.355]    TraceD0_Pin=0x00040003
[22:24:12.355]    TraceD1_Pin=0x00040004
[22:24:12.355]    TraceD2_Pin=0x00040005
[22:24:12.355]    TraceD3_Pin=0x00040006
[22:24:12.355]  </debugvars>
[22:24:12.356]  
[22:24:12.356]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:24:12.356]    <block atomic="false" info="">
[22:24:12.356]      Sequence("CheckID");
[22:24:12.356]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:24:12.356]          <block atomic="false" info="">
[22:24:12.357]            __var pidr1 = 0;
[22:24:12.357]              // -> [pidr1 <= 0x00000000]
[22:24:12.357]            __var pidr2 = 0;
[22:24:12.357]              // -> [pidr2 <= 0x00000000]
[22:24:12.357]            __var jep106id = 0;
[22:24:12.357]              // -> [jep106id <= 0x00000000]
[22:24:12.358]            __var ROMTableBase = 0;
[22:24:12.358]              // -> [ROMTableBase <= 0x00000000]
[22:24:12.358]            __ap = 0;      // AHB-AP
[22:24:12.358]              // -> [__ap <= 0x00000000]
[22:24:12.359]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:24:12.359]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.360]              // -> [ROMTableBase <= 0xE00FF000]
[22:24:12.360]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:24:12.361]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.361]              // -> [pidr1 <= 0x00000004]
[22:24:12.362]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:24:12.363]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.363]              // -> [pidr2 <= 0x0000000A]
[22:24:12.363]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:24:12.364]              // -> [jep106id <= 0x00000020]
[22:24:12.364]          </block>
[22:24:12.364]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:24:12.364]            // if-block "jep106id != 0x20"
[22:24:12.364]              // =>  FALSE
[22:24:12.365]            // skip if-block "jep106id != 0x20"
[22:24:12.365]          </control>
[22:24:12.365]        </sequence>
[22:24:12.365]    </block>
[22:24:12.365]  </sequence>
[22:24:12.366]  
[22:24:12.366]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:24:12.366]  
[22:24:12.366]  <debugvars>
[22:24:12.366]    // Pre-defined
[22:24:12.367]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:24:12.367]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:24:12.367]    __dp=0x00000000
[22:24:12.367]    __ap=0x00000000
[22:24:12.368]    __traceout=0x00000001      (SWO Trace)
[22:24:12.368]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:24:12.368]    __FlashAddr=0x00000000
[22:24:12.368]    __FlashLen=0x00000000
[22:24:12.369]    __FlashArg=0x00000000
[22:24:12.369]    __FlashOp=0x00000000
[22:24:12.369]    __Result=0x00000000
[22:24:12.369]    
[22:24:12.369]    // User-defined
[22:24:12.369]    DbgMCU_CR=0x00000007
[22:24:12.369]    DbgMCU_APB1_Fz=0x00000000
[22:24:12.370]    DbgMCU_APB2_Fz=0x00000000
[22:24:12.370]    TraceClk_Pin=0x00040002
[22:24:12.370]    TraceD0_Pin=0x00040003
[22:24:12.370]    TraceD1_Pin=0x00040004
[22:24:12.370]    TraceD2_Pin=0x00040005
[22:24:12.371]    TraceD3_Pin=0x00040006
[22:24:12.371]  </debugvars>
[22:24:12.371]  
[22:24:12.371]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:24:12.371]    <block atomic="false" info="">
[22:24:12.372]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:24:12.373]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.373]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:24:12.374]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.374]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:24:12.375]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.376]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:24:12.376]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.376]    </block>
[22:24:12.377]  </sequence>
[22:24:12.377]  
[22:24:12.406]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[22:24:12.406]  
[22:24:12.407]  <debugvars>
[22:24:12.407]    // Pre-defined
[22:24:12.407]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:24:12.407]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:24:12.408]    __dp=0x00000000
[22:24:12.408]    __ap=0x00000000
[22:24:12.408]    __traceout=0x00000001      (SWO Trace)
[22:24:12.408]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:24:12.409]    __FlashAddr=0x00000000
[22:24:12.409]    __FlashLen=0x00000000
[22:24:12.409]    __FlashArg=0x00000000
[22:24:12.409]    __FlashOp=0x00000000
[22:24:12.410]    __Result=0x00000000
[22:24:12.410]    
[22:24:12.410]    // User-defined
[22:24:12.410]    DbgMCU_CR=0x00000007
[22:24:12.410]    DbgMCU_APB1_Fz=0x00000000
[22:24:12.411]    DbgMCU_APB2_Fz=0x00000000
[22:24:12.411]    TraceClk_Pin=0x00040002
[22:24:12.411]    TraceD0_Pin=0x00040003
[22:24:12.411]    TraceD1_Pin=0x00040004
[22:24:12.411]    TraceD2_Pin=0x00040005
[22:24:12.412]    TraceD3_Pin=0x00040006
[22:24:12.412]  </debugvars>
[22:24:12.412]  
[22:24:12.412]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:24:12.412]    <block atomic="false" info="">
[22:24:12.413]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:24:12.413]        // -> [traceSWO <= 0x00000001]
[22:24:12.413]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:24:12.413]        // -> [traceTPIU <= 0x00000000]
[22:24:12.413]    </block>
[22:24:12.414]    <control if="traceSWO" while="" timeout="0" info="">
[22:24:12.414]      // if-block "traceSWO"
[22:24:12.414]        // =>  TRUE
[22:24:12.414]      <block atomic="false" info="">
[22:24:12.414]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:24:12.415]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:24:12.415]            <block atomic="false" info="">
[22:24:12.415]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:24:12.415]                // -> [dbgmcu_val <= 0x00000000]
[22:24:12.415]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:24:12.416]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:24:12.416]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:24:12.417]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.417]                // -> [dbgmcu_val <= 0x00000007]
[22:24:12.417]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:24:12.417]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:24:12.418]              Sequence("ConfigureTraceSWOPin");
[22:24:12.418]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:24:12.418]                  <block atomic="false" info="">
[22:24:12.418]                    __var pin     = 0;
[22:24:12.418]                      // -> [pin <= 0x00000000]
[22:24:12.418]                    __var port    = 0;
[22:24:12.419]                      // -> [port <= 0x00000000]
[22:24:12.419]                    __var portAdr = 0;
[22:24:12.419]                      // -> [portAdr <= 0x00000000]
[22:24:12.419]                    __var pos     = 0;
[22:24:12.419]                      // -> [pos <= 0x00000000]
[22:24:12.420]                    __var SWO_Pin = 0x00010003;          // PB3
[22:24:12.420]                      // -> [SWO_Pin <= 0x00010003]
[22:24:12.420]                  </block>
[22:24:12.420]                  <block atomic="false" info="configure SWO">
[22:24:12.420]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:24:12.420]                      // -> [pin <= 0x00000003]
[22:24:12.421]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:24:12.421]                      // -> [port <= 0x00000001]
[22:24:12.421]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:24:12.421]                      // -> [portAdr <= 0x40020400]
[22:24:12.421]                    pos = pin * 2;
[22:24:12.422]                      // -> [pos <= 0x00000006]
[22:24:12.422]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:24:12.423]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.424]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.424]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:24:12.425]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.425]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.426]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:24:12.426]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.427]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.427]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:24:12.428]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.429]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.429]                  </block>
[22:24:12.429]                  <control if="pin <  8" while="" timeout="0" info="">
[22:24:12.429]                    // if-block "pin <  8"
[22:24:12.430]                      // =>  TRUE
[22:24:12.430]                    <block atomic="false" info="">
[22:24:12.430]                      pos = ((pin    ) & 7) * 4;
[22:24:12.430]                        // -> [pos <= 0x0000000C]
[22:24:12.430]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:24:12.431]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.432]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.432]                    </block>
[22:24:12.432]                    // end if-block "pin <  8"
[22:24:12.432]                  </control>
[22:24:12.433]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:24:12.433]                    // if-block "pin >= 8"
[22:24:12.433]                      // =>  FALSE
[22:24:12.433]                    // skip if-block "pin >= 8"
[22:24:12.433]                  </control>
[22:24:12.433]                </sequence>
[22:24:12.433]            </block>
[22:24:12.434]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:24:12.434]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:24:12.435]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.435]            </block>
[22:24:12.435]          </sequence>
[22:24:12.435]      </block>
[22:24:12.435]      // end if-block "traceSWO"
[22:24:12.435]    </control>
[22:24:12.436]    <control if="traceTPIU" while="" timeout="0" info="">
[22:24:12.436]      // if-block "traceTPIU"
[22:24:12.436]        // =>  FALSE
[22:24:12.436]      // skip if-block "traceTPIU"
[22:24:12.436]    </control>
[22:24:12.436]  </sequence>
[22:24:12.436]  
[22:24:12.448]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:24:12.448]  
[22:24:12.448]  <debugvars>
[22:24:12.448]    // Pre-defined
[22:24:12.448]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:24:12.449]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:24:12.449]    __dp=0x00000000
[22:24:12.449]    __ap=0x00000000
[22:24:12.449]    __traceout=0x00000001      (SWO Trace)
[22:24:12.450]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:24:12.450]    __FlashAddr=0x00000000
[22:24:12.450]    __FlashLen=0x00000000
[22:24:12.450]    __FlashArg=0x00000000
[22:24:12.450]    __FlashOp=0x00000000
[22:24:12.450]    __Result=0x00000000
[22:24:12.451]    
[22:24:12.451]    // User-defined
[22:24:12.451]    DbgMCU_CR=0x00000007
[22:24:12.451]    DbgMCU_APB1_Fz=0x00000000
[22:24:12.451]    DbgMCU_APB2_Fz=0x00000000
[22:24:12.451]    TraceClk_Pin=0x00040002
[22:24:12.451]    TraceD0_Pin=0x00040003
[22:24:12.451]    TraceD1_Pin=0x00040004
[22:24:12.452]    TraceD2_Pin=0x00040005
[22:24:12.452]    TraceD3_Pin=0x00040006
[22:24:12.452]  </debugvars>
[22:24:12.452]  
[22:24:12.452]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:24:12.452]    <block atomic="false" info="">
[22:24:12.452]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:24:12.453]        // -> [traceSWO <= 0x00000001]
[22:24:12.453]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:24:12.453]        // -> [traceTPIU <= 0x00000000]
[22:24:12.453]    </block>
[22:24:12.453]    <control if="traceSWO" while="" timeout="0" info="">
[22:24:12.453]      // if-block "traceSWO"
[22:24:12.454]        // =>  TRUE
[22:24:12.454]      <block atomic="false" info="">
[22:24:12.454]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:24:12.454]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:24:12.454]            <block atomic="false" info="">
[22:24:12.454]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:24:12.454]                // -> [dbgmcu_val <= 0x00000000]
[22:24:12.455]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:24:12.455]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:24:12.455]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:24:12.456]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.456]                // -> [dbgmcu_val <= 0x00000007]
[22:24:12.456]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:24:12.456]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:24:12.456]              Sequence("ConfigureTraceSWOPin");
[22:24:12.456]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:24:12.456]                  <block atomic="false" info="">
[22:24:12.457]                    __var pin     = 0;
[22:24:12.457]                      // -> [pin <= 0x00000000]
[22:24:12.457]                    __var port    = 0;
[22:24:12.457]                      // -> [port <= 0x00000000]
[22:24:12.457]                    __var portAdr = 0;
[22:24:12.457]                      // -> [portAdr <= 0x00000000]
[22:24:12.457]                    __var pos     = 0;
[22:24:12.458]                      // -> [pos <= 0x00000000]
[22:24:12.458]                    __var SWO_Pin = 0x00010003;          // PB3
[22:24:12.458]                      // -> [SWO_Pin <= 0x00010003]
[22:24:12.458]                  </block>
[22:24:12.458]                  <block atomic="false" info="configure SWO">
[22:24:12.458]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:24:12.459]                      // -> [pin <= 0x00000003]
[22:24:12.459]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:24:12.459]                      // -> [port <= 0x00000001]
[22:24:12.459]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:24:12.459]                      // -> [portAdr <= 0x40020400]
[22:24:12.459]                    pos = pin * 2;
[22:24:12.459]                      // -> [pos <= 0x00000006]
[22:24:12.459]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:24:12.460]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.461]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.461]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:24:12.462]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.463]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.463]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:24:12.464]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.465]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.465]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:24:12.466]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.467]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.467]                  </block>
[22:24:12.467]                  <control if="pin <  8" while="" timeout="0" info="">
[22:24:12.467]                    // if-block "pin <  8"
[22:24:12.467]                      // =>  TRUE
[22:24:12.467]                    <block atomic="false" info="">
[22:24:12.467]                      pos = ((pin    ) & 7) * 4;
[22:24:12.468]                        // -> [pos <= 0x0000000C]
[22:24:12.468]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:24:12.469]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.469]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.469]                    </block>
[22:24:12.470]                    // end if-block "pin <  8"
[22:24:12.470]                  </control>
[22:24:12.470]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:24:12.470]                    // if-block "pin >= 8"
[22:24:12.470]                      // =>  FALSE
[22:24:12.470]                    // skip if-block "pin >= 8"
[22:24:12.470]                  </control>
[22:24:12.471]                </sequence>
[22:24:12.471]            </block>
[22:24:12.471]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:24:12.471]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:24:12.472]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:12.472]            </block>
[22:24:12.472]          </sequence>
[22:24:12.472]      </block>
[22:24:12.472]      // end if-block "traceSWO"
[22:24:12.472]    </control>
[22:24:12.473]    <control if="traceTPIU" while="" timeout="0" info="">
[22:24:12.473]      // if-block "traceTPIU"
[22:24:12.473]        // =>  FALSE
[22:24:12.473]      // skip if-block "traceTPIU"
[22:24:12.473]    </control>
[22:24:12.473]  </sequence>
[22:24:12.474]  
[22:24:13.035]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:24:13.035]  
[22:24:13.082]  <debugvars>
[22:24:13.082]    // Pre-defined
[22:24:13.082]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:24:13.082]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:24:13.082]    __dp=0x00000000
[22:24:13.082]    __ap=0x00000000
[22:24:13.083]    __traceout=0x00000001      (SWO Trace)
[22:24:13.083]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:24:13.083]    __FlashAddr=0x00000000
[22:24:13.083]    __FlashLen=0x00000000
[22:24:13.083]    __FlashArg=0x00000000
[22:24:13.083]    __FlashOp=0x00000000
[22:24:13.084]    __Result=0x00000000
[22:24:13.084]    
[22:24:13.084]    // User-defined
[22:24:13.084]    DbgMCU_CR=0x00000007
[22:24:13.084]    DbgMCU_APB1_Fz=0x00000000
[22:24:13.084]    DbgMCU_APB2_Fz=0x00000000
[22:24:13.084]    TraceClk_Pin=0x00040002
[22:24:13.084]    TraceD0_Pin=0x00040003
[22:24:13.084]    TraceD1_Pin=0x00040004
[22:24:13.085]    TraceD2_Pin=0x00040005
[22:24:13.085]    TraceD3_Pin=0x00040006
[22:24:13.085]  </debugvars>
[22:24:13.085]  
[22:24:13.085]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:24:13.085]    <block atomic="false" info="">
[22:24:13.085]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:24:13.086]        // -> [traceSWO <= 0x00000001]
[22:24:13.086]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:24:13.086]        // -> [traceTPIU <= 0x00000000]
[22:24:13.086]    </block>
[22:24:13.086]    <control if="traceSWO" while="" timeout="0" info="">
[22:24:13.087]      // if-block "traceSWO"
[22:24:13.087]        // =>  TRUE
[22:24:13.087]      <block atomic="false" info="">
[22:24:13.087]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:24:13.087]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:24:13.087]            <block atomic="false" info="">
[22:24:13.087]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:24:13.088]                // -> [dbgmcu_val <= 0x00000000]
[22:24:13.088]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:24:13.088]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:24:13.088]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:24:13.089]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:24:13.089]                // -> [dbgmcu_val <= 0x00000007]
[22:24:13.089]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:24:13.089]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:24:13.090]              Sequence("ConfigureTraceSWOPin");
[22:24:13.090]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:24:13.090]                  <block atomic="false" info="">
[22:24:13.090]                    __var pin     = 0;
[22:24:13.090]                      // -> [pin <= 0x00000000]
[22:24:13.090]                    __var port    = 0;
[22:24:13.090]                      // -> [port <= 0x00000000]
[22:24:13.091]                    __var portAdr = 0;
[22:24:13.091]                      // -> [portAdr <= 0x00000000]
[22:24:13.091]                    __var pos     = 0;
[22:24:13.091]                      // -> [pos <= 0x00000000]
[22:24:13.091]                    __var SWO_Pin = 0x00010003;          // PB3
[22:24:13.091]                      // -> [SWO_Pin <= 0x00010003]
[22:24:13.091]                  </block>
[22:24:13.092]                  <block atomic="false" info="configure SWO">
[22:24:13.092]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:24:13.092]                      // -> [pin <= 0x00000003]
[22:24:13.092]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:24:13.092]                      // -> [port <= 0x00000001]
[22:24:13.093]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:24:13.093]                      // -> [portAdr <= 0x40020400]
[22:24:13.093]                    pos = pin * 2;
[22:24:13.093]                      // -> [pos <= 0x00000006]
[22:24:13.094]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:24:13.095]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:24:13.096]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:13.096]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:24:13.096]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:24:13.097]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:13.097]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:24:13.098]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:24:13.098]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:13.099]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:24:13.099]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:24:13.100]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:13.100]                  </block>
[22:24:13.100]                  <control if="pin <  8" while="" timeout="0" info="">
[22:24:13.100]                    // if-block "pin <  8"
[22:24:13.100]                      // =>  TRUE
[22:24:13.101]                    <block atomic="false" info="">
[22:24:13.101]                      pos = ((pin    ) & 7) * 4;
[22:24:13.101]                        // -> [pos <= 0x0000000C]
[22:24:13.101]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:24:13.102]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:24:13.102]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:13.103]                    </block>
[22:24:13.103]                    // end if-block "pin <  8"
[22:24:13.103]                  </control>
[22:24:13.103]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:24:13.103]                    // if-block "pin >= 8"
[22:24:13.103]                      // =>  FALSE
[22:24:13.103]                    // skip if-block "pin >= 8"
[22:24:13.104]                  </control>
[22:24:13.104]                </sequence>
[22:24:13.104]            </block>
[22:24:13.104]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:24:13.104]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:24:13.105]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:24:13.105]            </block>
[22:24:13.105]          </sequence>
[22:24:13.105]      </block>
[22:24:13.105]      // end if-block "traceSWO"
[22:24:13.105]    </control>
[22:24:13.105]    <control if="traceTPIU" while="" timeout="0" info="">
[22:24:13.106]      // if-block "traceTPIU"
[22:24:13.106]        // =>  FALSE
[22:24:13.106]      // skip if-block "traceTPIU"
[22:24:13.106]    </control>
[22:24:13.106]  </sequence>
[22:24:13.106]  
[22:30:23.850]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[22:30:23.850]  
[22:30:23.897]  <debugvars>
[22:30:23.897]    // Pre-defined
[22:30:23.898]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:30:23.898]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:30:23.898]    __dp=0x00000000
[22:30:23.899]    __ap=0x00000000
[22:30:23.899]    __traceout=0x00000001      (SWO Trace)
[22:30:23.899]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:30:23.900]    __FlashAddr=0x00000000
[22:30:23.900]    __FlashLen=0x00000000
[22:30:23.901]    __FlashArg=0x00000000
[22:30:23.901]    __FlashOp=0x00000000
[22:30:23.901]    __Result=0x00000000
[22:30:23.902]    
[22:30:23.902]    // User-defined
[22:30:23.902]    DbgMCU_CR=0x00000007
[22:30:23.902]    DbgMCU_APB1_Fz=0x00000000
[22:30:23.903]    DbgMCU_APB2_Fz=0x00000000
[22:30:23.903]    TraceClk_Pin=0x00040002
[22:30:23.903]    TraceD0_Pin=0x00040003
[22:30:23.904]    TraceD1_Pin=0x00040004
[22:30:23.904]    TraceD2_Pin=0x00040005
[22:30:23.904]    TraceD3_Pin=0x00040006
[22:30:23.905]  </debugvars>
[22:30:23.905]  
[22:30:23.905]  <sequence name="TraceStop" Pname="" disable="false" info="">
[22:30:23.906]    <block atomic="false" info="">
[22:30:23.906]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[22:30:23.907]        // -> [traceSWO <= 0x00000001]
[22:30:23.907]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[22:30:23.908]        // -> [traceTPIU <= 0x00000000]
[22:30:23.908]    </block>
[22:30:23.909]    <control if="traceSWO" while="" timeout="0" info="">
[22:30:23.909]      // if-block "traceSWO"
[22:30:23.910]        // =>  TRUE
[22:30:23.910]      <block atomic="false" info="">
[22:30:23.911]        Sequence("DisableTraceSWO");
[22:30:23.911]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[22:30:23.912]            <block atomic="false" info="">
[22:30:23.912]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:30:23.912]                // -> [dbgmcu_val <= 0x00000000]
[22:30:23.913]            </block>
[22:30:23.913]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[22:30:23.914]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[22:30:23.915]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:30:23.916]                // -> [dbgmcu_val <= 0x00000007]
[22:30:23.916]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[22:30:23.918]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:30:23.918]            </block>
[22:30:23.918]          </sequence>
[22:30:23.919]      </block>
[22:30:23.919]      // end if-block "traceSWO"
[22:30:23.919]    </control>
[22:30:23.919]    <control if="traceTPIU" while="" timeout="0" info="">
[22:30:23.920]      // if-block "traceTPIU"
[22:30:23.920]        // =>  FALSE
[22:30:23.921]      // skip if-block "traceTPIU"
[22:30:23.921]    </control>
[22:30:23.922]  </sequence>
[22:30:23.922]  
[22:31:11.205]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:31:11.205]  
[22:31:11.252]  <debugvars>
[22:31:11.253]    // Pre-defined
[22:31:11.253]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:31:11.254]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[22:31:11.255]    __dp=0x00000000
[22:31:11.255]    __ap=0x00000000
[22:31:11.255]    __traceout=0x00000001      (SWO Trace)
[22:31:11.255]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:31:11.255]    __FlashAddr=0x00000000
[22:31:11.256]    __FlashLen=0x00000000
[22:31:11.256]    __FlashArg=0x00000000
[22:31:11.256]    __FlashOp=0x00000000
[22:31:11.257]    __Result=0x00000000
[22:31:11.257]    
[22:31:11.257]    // User-defined
[22:31:11.258]    DbgMCU_CR=0x00000007
[22:31:11.258]    DbgMCU_APB1_Fz=0x00000000
[22:31:11.259]    DbgMCU_APB2_Fz=0x00000000
[22:31:11.260]    TraceClk_Pin=0x00040002
[22:31:11.260]    TraceD0_Pin=0x00040003
[22:31:11.261]    TraceD1_Pin=0x00040004
[22:31:11.261]    TraceD2_Pin=0x00040005
[22:31:11.261]    TraceD3_Pin=0x00040006
[22:31:11.261]  </debugvars>
[22:31:11.261]  
[22:31:11.262]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:31:11.262]    <block atomic="false" info="">
[22:31:11.263]      Sequence("CheckID");
[22:31:11.263]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:31:11.264]          <block atomic="false" info="">
[22:31:11.265]            __var pidr1 = 0;
[22:31:11.265]              // -> [pidr1 <= 0x00000000]
[22:31:11.265]            __var pidr2 = 0;
[22:31:11.267]              // -> [pidr2 <= 0x00000000]
[22:31:11.267]            __var jep106id = 0;
[22:31:11.268]              // -> [jep106id <= 0x00000000]
[22:31:11.268]            __var ROMTableBase = 0;
[22:31:11.268]              // -> [ROMTableBase <= 0x00000000]
[22:31:11.269]            __ap = 0;      // AHB-AP
[22:31:11.269]              // -> [__ap <= 0x00000000]
[22:31:11.269]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:31:11.270]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[22:31:11.270]              // -> [ROMTableBase <= 0xE00FF000]
[22:31:11.270]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:31:11.272]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:31:11.273]              // -> [pidr1 <= 0x00000004]
[22:31:11.273]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:31:11.275]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[22:31:11.275]              // -> [pidr2 <= 0x0000000A]
[22:31:11.275]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:31:11.276]              // -> [jep106id <= 0x00000020]
[22:31:11.276]          </block>
[22:31:11.276]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:31:11.277]            // if-block "jep106id != 0x20"
[22:31:11.277]              // =>  FALSE
[22:31:11.277]            // skip if-block "jep106id != 0x20"
[22:31:11.278]          </control>
[22:31:11.278]        </sequence>
[22:31:11.279]    </block>
[22:31:11.279]  </sequence>
[22:31:11.280]  
[22:31:11.281]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:31:11.281]  
[22:31:11.281]  <debugvars>
[22:31:11.281]    // Pre-defined
[22:31:11.282]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:31:11.282]    __connection=0x00000202    (Connection Type="Flash", Reset Type="System Reset")
[22:31:11.282]    __dp=0x00000000
[22:31:11.283]    __ap=0x00000000
[22:31:11.283]    __traceout=0x00000001      (SWO Trace)
[22:31:11.284]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:31:11.284]    __FlashAddr=0x00000000
[22:31:11.284]    __FlashLen=0x00000000
[22:31:11.286]    __FlashArg=0x00000000
[22:31:11.286]    __FlashOp=0x00000000
[22:31:11.286]    __Result=0x00000000
[22:31:11.286]    
[22:31:11.286]    // User-defined
[22:31:11.286]    DbgMCU_CR=0x00000007
[22:31:11.287]    DbgMCU_APB1_Fz=0x00000000
[22:31:11.287]    DbgMCU_APB2_Fz=0x00000000
[22:31:11.287]    TraceClk_Pin=0x00040002
[22:31:11.288]    TraceD0_Pin=0x00040003
[22:31:11.288]    TraceD1_Pin=0x00040004
[22:31:11.289]    TraceD2_Pin=0x00040005
[22:31:11.289]    TraceD3_Pin=0x00040006
[22:31:11.289]  </debugvars>
[22:31:11.290]  
[22:31:11.290]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:31:11.291]    <block atomic="false" info="">
[22:31:11.291]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:31:11.293]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:11.293]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:31:11.295]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:11.297]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:31:11.297]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:11.298]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:31:11.300]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:11.300]    </block>
[22:31:11.300]  </sequence>
[22:31:11.301]  
[22:31:13.396]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:31:13.396]  
[22:31:13.443]  <debugvars>
[22:31:13.444]    // Pre-defined
[22:31:13.444]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:31:13.444]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:31:13.445]    __dp=0x00000000
[22:31:13.445]    __ap=0x00000000
[22:31:13.445]    __traceout=0x00000001      (SWO Trace)
[22:31:13.446]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:31:13.446]    __FlashAddr=0x00000000
[22:31:13.446]    __FlashLen=0x00000000
[22:31:13.447]    __FlashArg=0x00000000
[22:31:13.447]    __FlashOp=0x00000000
[22:31:13.448]    __Result=0x00000000
[22:31:13.448]    
[22:31:13.448]    // User-defined
[22:31:13.449]    DbgMCU_CR=0x00000007
[22:31:13.449]    DbgMCU_APB1_Fz=0x00000000
[22:31:13.450]    DbgMCU_APB2_Fz=0x00000000
[22:31:13.450]    TraceClk_Pin=0x00040002
[22:31:13.451]    TraceD0_Pin=0x00040003
[22:31:13.451]    TraceD1_Pin=0x00040004
[22:31:13.451]    TraceD2_Pin=0x00040005
[22:31:13.452]    TraceD3_Pin=0x00040006
[22:31:13.452]  </debugvars>
[22:31:13.453]  
[22:31:13.453]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:31:13.453]    <block atomic="false" info="">
[22:31:13.454]      Sequence("CheckID");
[22:31:13.454]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:31:13.455]          <block atomic="false" info="">
[22:31:13.455]            __var pidr1 = 0;
[22:31:13.456]              // -> [pidr1 <= 0x00000000]
[22:31:13.456]            __var pidr2 = 0;
[22:31:13.456]              // -> [pidr2 <= 0x00000000]
[22:31:13.457]            __var jep106id = 0;
[22:31:13.457]              // -> [jep106id <= 0x00000000]
[22:31:13.458]            __var ROMTableBase = 0;
[22:31:13.458]              // -> [ROMTableBase <= 0x00000000]
[22:31:13.458]            __ap = 0;      // AHB-AP
[22:31:13.459]              // -> [__ap <= 0x00000000]
[22:31:13.459]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:31:13.460]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.460]              // -> [ROMTableBase <= 0xE00FF000]
[22:31:13.461]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:31:13.463]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.463]              // -> [pidr1 <= 0x00000004]
[22:31:13.463]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:31:13.465]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.466]              // -> [pidr2 <= 0x0000000A]
[22:31:13.466]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:31:13.467]              // -> [jep106id <= 0x00000020]
[22:31:13.467]          </block>
[22:31:13.468]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:31:13.468]            // if-block "jep106id != 0x20"
[22:31:13.468]              // =>  FALSE
[22:31:13.469]            // skip if-block "jep106id != 0x20"
[22:31:13.469]          </control>
[22:31:13.469]        </sequence>
[22:31:13.470]    </block>
[22:31:13.470]  </sequence>
[22:31:13.471]  
[22:31:13.471]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:31:13.471]  
[22:31:13.472]  <debugvars>
[22:31:13.472]    // Pre-defined
[22:31:13.472]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:31:13.473]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:31:13.473]    __dp=0x00000000
[22:31:13.473]    __ap=0x00000000
[22:31:13.474]    __traceout=0x00000001      (SWO Trace)
[22:31:13.474]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:31:13.474]    __FlashAddr=0x00000000
[22:31:13.475]    __FlashLen=0x00000000
[22:31:13.475]    __FlashArg=0x00000000
[22:31:13.475]    __FlashOp=0x00000000
[22:31:13.476]    __Result=0x00000000
[22:31:13.476]    
[22:31:13.476]    // User-defined
[22:31:13.477]    DbgMCU_CR=0x00000007
[22:31:13.477]    DbgMCU_APB1_Fz=0x00000000
[22:31:13.477]    DbgMCU_APB2_Fz=0x00000000
[22:31:13.478]    TraceClk_Pin=0x00040002
[22:31:13.478]    TraceD0_Pin=0x00040003
[22:31:13.478]    TraceD1_Pin=0x00040004
[22:31:13.479]    TraceD2_Pin=0x00040005
[22:31:13.479]    TraceD3_Pin=0x00040006
[22:31:13.480]  </debugvars>
[22:31:13.480]  
[22:31:13.481]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:31:13.481]    <block atomic="false" info="">
[22:31:13.481]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:31:13.483]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.484]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:31:13.485]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.486]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:31:13.487]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.488]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:31:13.489]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.490]    </block>
[22:31:13.490]  </sequence>
[22:31:13.490]  
[22:31:13.547]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[22:31:13.547]  
[22:31:13.548]  <debugvars>
[22:31:13.548]    // Pre-defined
[22:31:13.548]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:31:13.549]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:31:13.549]    __dp=0x00000000
[22:31:13.550]    __ap=0x00000000
[22:31:13.550]    __traceout=0x00000001      (SWO Trace)
[22:31:13.550]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:31:13.551]    __FlashAddr=0x00000000
[22:31:13.551]    __FlashLen=0x00000000
[22:31:13.551]    __FlashArg=0x00000000
[22:31:13.552]    __FlashOp=0x00000000
[22:31:13.552]    __Result=0x00000000
[22:31:13.552]    
[22:31:13.552]    // User-defined
[22:31:13.553]    DbgMCU_CR=0x00000007
[22:31:13.553]    DbgMCU_APB1_Fz=0x00000000
[22:31:13.554]    DbgMCU_APB2_Fz=0x00000000
[22:31:13.554]    TraceClk_Pin=0x00040002
[22:31:13.554]    TraceD0_Pin=0x00040003
[22:31:13.555]    TraceD1_Pin=0x00040004
[22:31:13.555]    TraceD2_Pin=0x00040005
[22:31:13.556]    TraceD3_Pin=0x00040006
[22:31:13.556]  </debugvars>
[22:31:13.556]  
[22:31:13.557]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:31:13.557]    <block atomic="false" info="">
[22:31:13.557]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:31:13.558]        // -> [traceSWO <= 0x00000001]
[22:31:13.558]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:31:13.559]        // -> [traceTPIU <= 0x00000000]
[22:31:13.559]    </block>
[22:31:13.559]    <control if="traceSWO" while="" timeout="0" info="">
[22:31:13.559]      // if-block "traceSWO"
[22:31:13.560]        // =>  TRUE
[22:31:13.560]      <block atomic="false" info="">
[22:31:13.560]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:31:13.561]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:31:13.561]            <block atomic="false" info="">
[22:31:13.561]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:31:13.562]                // -> [dbgmcu_val <= 0x00000000]
[22:31:13.562]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:31:13.563]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:31:13.563]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:31:13.565]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.565]                // -> [dbgmcu_val <= 0x00000007]
[22:31:13.566]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:31:13.566]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:31:13.567]              Sequence("ConfigureTraceSWOPin");
[22:31:13.567]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:31:13.567]                  <block atomic="false" info="">
[22:31:13.568]                    __var pin     = 0;
[22:31:13.568]                      // -> [pin <= 0x00000000]
[22:31:13.568]                    __var port    = 0;
[22:31:13.569]                      // -> [port <= 0x00000000]
[22:31:13.569]                    __var portAdr = 0;
[22:31:13.569]                      // -> [portAdr <= 0x00000000]
[22:31:13.570]                    __var pos     = 0;
[22:31:13.570]                      // -> [pos <= 0x00000000]
[22:31:13.571]                    __var SWO_Pin = 0x00010003;          // PB3
[22:31:13.571]                      // -> [SWO_Pin <= 0x00010003]
[22:31:13.571]                  </block>
[22:31:13.572]                  <block atomic="false" info="configure SWO">
[22:31:13.572]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:31:13.573]                      // -> [pin <= 0x00000003]
[22:31:13.573]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:31:13.574]                      // -> [port <= 0x00000001]
[22:31:13.574]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:31:13.574]                      // -> [portAdr <= 0x40020400]
[22:31:13.575]                    pos = pin * 2;
[22:31:13.575]                      // -> [pos <= 0x00000006]
[22:31:13.576]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:31:13.577]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.579]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.579]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:31:13.581]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.583]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.583]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:31:13.585]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.586]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.587]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:31:13.588]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.590]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.590]                  </block>
[22:31:13.591]                  <control if="pin <  8" while="" timeout="0" info="">
[22:31:13.591]                    // if-block "pin <  8"
[22:31:13.592]                      // =>  TRUE
[22:31:13.592]                    <block atomic="false" info="">
[22:31:13.592]                      pos = ((pin    ) & 7) * 4;
[22:31:13.593]                        // -> [pos <= 0x0000000C]
[22:31:13.593]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:31:13.594]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.596]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.597]                    </block>
[22:31:13.597]                    // end if-block "pin <  8"
[22:31:13.598]                  </control>
[22:31:13.598]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:31:13.598]                    // if-block "pin >= 8"
[22:31:13.599]                      // =>  FALSE
[22:31:13.599]                    // skip if-block "pin >= 8"
[22:31:13.599]                  </control>
[22:31:13.600]                </sequence>
[22:31:13.600]            </block>
[22:31:13.601]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:31:13.601]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:31:13.603]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.603]            </block>
[22:31:13.604]          </sequence>
[22:31:13.604]      </block>
[22:31:13.605]      // end if-block "traceSWO"
[22:31:13.605]    </control>
[22:31:13.605]    <control if="traceTPIU" while="" timeout="0" info="">
[22:31:13.606]      // if-block "traceTPIU"
[22:31:13.606]        // =>  FALSE
[22:31:13.607]      // skip if-block "traceTPIU"
[22:31:13.607]    </control>
[22:31:13.607]  </sequence>
[22:31:13.607]  
[22:31:13.627]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:31:13.627]  
[22:31:13.628]  <debugvars>
[22:31:13.629]    // Pre-defined
[22:31:13.629]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:31:13.629]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:31:13.629]    __dp=0x00000000
[22:31:13.629]    __ap=0x00000000
[22:31:13.630]    __traceout=0x00000001      (SWO Trace)
[22:31:13.630]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:31:13.631]    __FlashAddr=0x00000000
[22:31:13.631]    __FlashLen=0x00000000
[22:31:13.631]    __FlashArg=0x00000000
[22:31:13.632]    __FlashOp=0x00000000
[22:31:13.632]    __Result=0x00000000
[22:31:13.632]    
[22:31:13.632]    // User-defined
[22:31:13.633]    DbgMCU_CR=0x00000007
[22:31:13.633]    DbgMCU_APB1_Fz=0x00000000
[22:31:13.634]    DbgMCU_APB2_Fz=0x00000000
[22:31:13.634]    TraceClk_Pin=0x00040002
[22:31:13.634]    TraceD0_Pin=0x00040003
[22:31:13.635]    TraceD1_Pin=0x00040004
[22:31:13.635]    TraceD2_Pin=0x00040005
[22:31:13.636]    TraceD3_Pin=0x00040006
[22:31:13.636]  </debugvars>
[22:31:13.636]  
[22:31:13.636]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:31:13.637]    <block atomic="false" info="">
[22:31:13.637]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:31:13.637]        // -> [traceSWO <= 0x00000001]
[22:31:13.639]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:31:13.639]        // -> [traceTPIU <= 0x00000000]
[22:31:13.639]    </block>
[22:31:13.640]    <control if="traceSWO" while="" timeout="0" info="">
[22:31:13.640]      // if-block "traceSWO"
[22:31:13.640]        // =>  TRUE
[22:31:13.641]      <block atomic="false" info="">
[22:31:13.641]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:31:13.641]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:31:13.641]            <block atomic="false" info="">
[22:31:13.641]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:31:13.642]                // -> [dbgmcu_val <= 0x00000000]
[22:31:13.642]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:31:13.642]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:31:13.643]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:31:13.645]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.645]                // -> [dbgmcu_val <= 0x00000007]
[22:31:13.645]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:31:13.646]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:31:13.646]              Sequence("ConfigureTraceSWOPin");
[22:31:13.647]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:31:13.647]                  <block atomic="false" info="">
[22:31:13.647]                    __var pin     = 0;
[22:31:13.648]                      // -> [pin <= 0x00000000]
[22:31:13.648]                    __var port    = 0;
[22:31:13.648]                      // -> [port <= 0x00000000]
[22:31:13.649]                    __var portAdr = 0;
[22:31:13.650]                      // -> [portAdr <= 0x00000000]
[22:31:13.650]                    __var pos     = 0;
[22:31:13.651]                      // -> [pos <= 0x00000000]
[22:31:13.651]                    __var SWO_Pin = 0x00010003;          // PB3
[22:31:13.652]                      // -> [SWO_Pin <= 0x00010003]
[22:31:13.652]                  </block>
[22:31:13.652]                  <block atomic="false" info="configure SWO">
[22:31:13.652]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:31:13.653]                      // -> [pin <= 0x00000003]
[22:31:13.653]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:31:13.654]                      // -> [port <= 0x00000001]
[22:31:13.654]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:31:13.654]                      // -> [portAdr <= 0x40020400]
[22:31:13.655]                    pos = pin * 2;
[22:31:13.655]                      // -> [pos <= 0x00000006]
[22:31:13.655]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:31:13.657]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.658]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.659]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:31:13.661]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.662]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.662]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:31:13.664]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.666]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.666]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:31:13.668]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.670]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.670]                  </block>
[22:31:13.671]                  <control if="pin <  8" while="" timeout="0" info="">
[22:31:13.671]                    // if-block "pin <  8"
[22:31:13.671]                      // =>  TRUE
[22:31:13.672]                    <block atomic="false" info="">
[22:31:13.672]                      pos = ((pin    ) & 7) * 4;
[22:31:13.673]                        // -> [pos <= 0x0000000C]
[22:31:13.673]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:31:13.674]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.675]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.676]                    </block>
[22:31:13.676]                    // end if-block "pin <  8"
[22:31:13.676]                  </control>
[22:31:13.677]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:31:13.677]                    // if-block "pin >= 8"
[22:31:13.679]                      // =>  FALSE
[22:31:13.679]                    // skip if-block "pin >= 8"
[22:31:13.679]                  </control>
[22:31:13.679]                </sequence>
[22:31:13.680]            </block>
[22:31:13.680]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:31:13.681]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:31:13.682]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:13.683]            </block>
[22:31:13.683]          </sequence>
[22:31:13.683]      </block>
[22:31:13.684]      // end if-block "traceSWO"
[22:31:13.684]    </control>
[22:31:13.685]    <control if="traceTPIU" while="" timeout="0" info="">
[22:31:13.685]      // if-block "traceTPIU"
[22:31:13.685]        // =>  FALSE
[22:31:13.686]      // skip if-block "traceTPIU"
[22:31:13.686]    </control>
[22:31:13.686]  </sequence>
[22:31:13.687]  
[22:31:15.224]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:31:15.224]  
[22:31:15.271]  <debugvars>
[22:31:15.271]    // Pre-defined
[22:31:15.271]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:31:15.272]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:31:15.272]    __dp=0x00000000
[22:31:15.272]    __ap=0x00000000
[22:31:15.272]    __traceout=0x00000001      (SWO Trace)
[22:31:15.273]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:31:15.273]    __FlashAddr=0x00000000
[22:31:15.274]    __FlashLen=0x00000000
[22:31:15.274]    __FlashArg=0x00000000
[22:31:15.274]    __FlashOp=0x00000000
[22:31:15.274]    __Result=0x00000000
[22:31:15.274]    
[22:31:15.274]    // User-defined
[22:31:15.274]    DbgMCU_CR=0x00000007
[22:31:15.275]    DbgMCU_APB1_Fz=0x00000000
[22:31:15.275]    DbgMCU_APB2_Fz=0x00000000
[22:31:15.275]    TraceClk_Pin=0x00040002
[22:31:15.275]    TraceD0_Pin=0x00040003
[22:31:15.276]    TraceD1_Pin=0x00040004
[22:31:15.277]    TraceD2_Pin=0x00040005
[22:31:15.277]    TraceD3_Pin=0x00040006
[22:31:15.277]  </debugvars>
[22:31:15.277]  
[22:31:15.277]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:31:15.277]    <block atomic="false" info="">
[22:31:15.277]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:31:15.277]        // -> [traceSWO <= 0x00000001]
[22:31:15.277]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:31:15.277]        // -> [traceTPIU <= 0x00000000]
[22:31:15.277]    </block>
[22:31:15.278]    <control if="traceSWO" while="" timeout="0" info="">
[22:31:15.278]      // if-block "traceSWO"
[22:31:15.278]        // =>  TRUE
[22:31:15.278]      <block atomic="false" info="">
[22:31:15.279]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:31:15.279]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:31:15.280]            <block atomic="false" info="">
[22:31:15.280]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:31:15.280]                // -> [dbgmcu_val <= 0x00000000]
[22:31:15.280]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:31:15.281]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:31:15.281]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:31:15.282]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:31:15.282]                // -> [dbgmcu_val <= 0x00000007]
[22:31:15.282]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:31:15.282]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:31:15.282]              Sequence("ConfigureTraceSWOPin");
[22:31:15.283]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:31:15.284]                  <block atomic="false" info="">
[22:31:15.284]                    __var pin     = 0;
[22:31:15.284]                      // -> [pin <= 0x00000000]
[22:31:15.284]                    __var port    = 0;
[22:31:15.284]                      // -> [port <= 0x00000000]
[22:31:15.284]                    __var portAdr = 0;
[22:31:15.285]                      // -> [portAdr <= 0x00000000]
[22:31:15.285]                    __var pos     = 0;
[22:31:15.285]                      // -> [pos <= 0x00000000]
[22:31:15.285]                    __var SWO_Pin = 0x00010003;          // PB3
[22:31:15.285]                      // -> [SWO_Pin <= 0x00010003]
[22:31:15.286]                  </block>
[22:31:15.286]                  <block atomic="false" info="configure SWO">
[22:31:15.286]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:31:15.286]                      // -> [pin <= 0x00000003]
[22:31:15.286]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:31:15.287]                      // -> [port <= 0x00000001]
[22:31:15.287]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:31:15.288]                      // -> [portAdr <= 0x40020400]
[22:31:15.289]                    pos = pin * 2;
[22:31:15.289]                      // -> [pos <= 0x00000006]
[22:31:15.289]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:31:15.290]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:31:15.291]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:15.292]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:31:15.293]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:31:15.294]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:15.295]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:31:15.296]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:31:15.297]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:15.297]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:31:15.299]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:31:15.300]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:15.300]                  </block>
[22:31:15.300]                  <control if="pin <  8" while="" timeout="0" info="">
[22:31:15.301]                    // if-block "pin <  8"
[22:31:15.301]                      // =>  TRUE
[22:31:15.301]                    <block atomic="false" info="">
[22:31:15.301]                      pos = ((pin    ) & 7) * 4;
[22:31:15.301]                        // -> [pos <= 0x0000000C]
[22:31:15.302]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:31:15.303]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:31:15.304]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:15.305]                    </block>
[22:31:15.305]                    // end if-block "pin <  8"
[22:31:15.305]                  </control>
[22:31:15.306]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:31:15.306]                    // if-block "pin >= 8"
[22:31:15.306]                      // =>  FALSE
[22:31:15.307]                    // skip if-block "pin >= 8"
[22:31:15.307]                  </control>
[22:31:15.307]                </sequence>
[22:31:15.308]            </block>
[22:31:15.308]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:31:15.308]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:31:15.310]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:15.310]            </block>
[22:31:15.310]          </sequence>
[22:31:15.310]      </block>
[22:31:15.311]      // end if-block "traceSWO"
[22:31:15.311]    </control>
[22:31:15.311]    <control if="traceTPIU" while="" timeout="0" info="">
[22:31:15.311]      // if-block "traceTPIU"
[22:31:15.312]        // =>  FALSE
[22:31:15.312]      // skip if-block "traceTPIU"
[22:31:15.312]    </control>
[22:31:15.313]  </sequence>
[22:31:15.313]  
[22:31:42.370]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:31:42.370]  
[22:31:42.418]  <debugvars>
[22:31:42.419]    // Pre-defined
[22:31:42.419]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:31:42.420]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:31:42.420]    __dp=0x00000000
[22:31:42.420]    __ap=0x00000000
[22:31:42.420]    __traceout=0x00000001      (SWO Trace)
[22:31:42.421]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:31:42.421]    __FlashAddr=0x00000000
[22:31:42.422]    __FlashLen=0x00000000
[22:31:42.423]    __FlashArg=0x00000000
[22:31:42.423]    __FlashOp=0x00000000
[22:31:42.423]    __Result=0x00000000
[22:31:42.424]    
[22:31:42.424]    // User-defined
[22:31:42.425]    DbgMCU_CR=0x00000007
[22:31:42.425]    DbgMCU_APB1_Fz=0x00000000
[22:31:42.426]    DbgMCU_APB2_Fz=0x00000000
[22:31:42.426]    TraceClk_Pin=0x00040002
[22:31:42.427]    TraceD0_Pin=0x00040003
[22:31:42.427]    TraceD1_Pin=0x00040004
[22:31:42.428]    TraceD2_Pin=0x00040005
[22:31:42.428]    TraceD3_Pin=0x00040006
[22:31:42.429]  </debugvars>
[22:31:42.429]  
[22:31:42.430]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:31:42.430]    <block atomic="false" info="">
[22:31:42.430]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:31:42.431]        // -> [traceSWO <= 0x00000001]
[22:31:42.431]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:31:42.432]        // -> [traceTPIU <= 0x00000000]
[22:31:42.432]    </block>
[22:31:42.433]    <control if="traceSWO" while="" timeout="0" info="">
[22:31:42.433]      // if-block "traceSWO"
[22:31:42.434]        // =>  TRUE
[22:31:42.435]      <block atomic="false" info="">
[22:31:42.435]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:31:42.435]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:31:42.435]            <block atomic="false" info="">
[22:31:42.436]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:31:42.436]                // -> [dbgmcu_val <= 0x00000000]
[22:31:42.436]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:31:42.436]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:31:42.436]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:31:42.438]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:31:42.438]                // -> [dbgmcu_val <= 0x00000007]
[22:31:42.439]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:31:42.439]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:31:42.440]              Sequence("ConfigureTraceSWOPin");
[22:31:42.440]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:31:42.441]                  <block atomic="false" info="">
[22:31:42.441]                    __var pin     = 0;
[22:31:42.442]                      // -> [pin <= 0x00000000]
[22:31:42.442]                    __var port    = 0;
[22:31:42.442]                      // -> [port <= 0x00000000]
[22:31:42.443]                    __var portAdr = 0;
[22:31:42.443]                      // -> [portAdr <= 0x00000000]
[22:31:42.444]                    __var pos     = 0;
[22:31:42.444]                      // -> [pos <= 0x00000000]
[22:31:42.444]                    __var SWO_Pin = 0x00010003;          // PB3
[22:31:42.445]                      // -> [SWO_Pin <= 0x00010003]
[22:31:42.445]                  </block>
[22:31:42.445]                  <block atomic="false" info="configure SWO">
[22:31:42.446]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:31:42.446]                      // -> [pin <= 0x00000003]
[22:31:42.447]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:31:42.447]                      // -> [port <= 0x00000001]
[22:31:42.447]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:31:42.448]                      // -> [portAdr <= 0x40020400]
[22:31:42.448]                    pos = pin * 2;
[22:31:42.448]                      // -> [pos <= 0x00000006]
[22:31:42.449]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:31:42.451]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:31:42.452]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:42.453]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:31:42.454]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:31:42.456]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:42.456]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:31:42.458]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:31:42.460]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:42.460]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:31:42.462]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:31:42.463]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:42.463]                  </block>
[22:31:42.464]                  <control if="pin <  8" while="" timeout="0" info="">
[22:31:42.465]                    // if-block "pin <  8"
[22:31:42.465]                      // =>  TRUE
[22:31:42.465]                    <block atomic="false" info="">
[22:31:42.466]                      pos = ((pin    ) & 7) * 4;
[22:31:42.466]                        // -> [pos <= 0x0000000C]
[22:31:42.467]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:31:42.468]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:31:42.470]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:42.470]                    </block>
[22:31:42.471]                    // end if-block "pin <  8"
[22:31:42.471]                  </control>
[22:31:42.472]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:31:42.472]                    // if-block "pin >= 8"
[22:31:42.472]                      // =>  FALSE
[22:31:42.473]                    // skip if-block "pin >= 8"
[22:31:42.473]                  </control>
[22:31:42.474]                </sequence>
[22:31:42.475]            </block>
[22:31:42.475]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:31:42.475]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:31:42.477]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:31:42.477]            </block>
[22:31:42.478]          </sequence>
[22:31:42.478]      </block>
[22:31:42.479]      // end if-block "traceSWO"
[22:31:42.479]    </control>
[22:31:42.480]    <control if="traceTPIU" while="" timeout="0" info="">
[22:31:42.480]      // if-block "traceTPIU"
[22:31:42.481]        // =>  FALSE
[22:31:42.481]      // skip if-block "traceTPIU"
[22:31:42.482]    </control>
[22:31:42.482]  </sequence>
[22:31:42.482]  
[22:33:28.063]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:33:28.063]  
[22:33:28.110]  <debugvars>
[22:33:28.111]    // Pre-defined
[22:33:28.111]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:33:28.112]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:33:28.112]    __dp=0x00000000
[22:33:28.112]    __ap=0x00000000
[22:33:28.113]    __traceout=0x00000001      (SWO Trace)
[22:33:28.113]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:33:28.113]    __FlashAddr=0x00000000
[22:33:28.114]    __FlashLen=0x00000000
[22:33:28.114]    __FlashArg=0x00000000
[22:33:28.114]    __FlashOp=0x00000000
[22:33:28.115]    __Result=0x00000000
[22:33:28.115]    
[22:33:28.115]    // User-defined
[22:33:28.116]    DbgMCU_CR=0x00000007
[22:33:28.116]    DbgMCU_APB1_Fz=0x00000000
[22:33:28.116]    DbgMCU_APB2_Fz=0x00000000
[22:33:28.116]    TraceClk_Pin=0x00040002
[22:33:28.117]    TraceD0_Pin=0x00040003
[22:33:28.117]    TraceD1_Pin=0x00040004
[22:33:28.118]    TraceD2_Pin=0x00040005
[22:33:28.118]    TraceD3_Pin=0x00040006
[22:33:28.118]  </debugvars>
[22:33:28.119]  
[22:33:28.119]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:33:28.120]    <block atomic="false" info="">
[22:33:28.120]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:33:28.120]        // -> [traceSWO <= 0x00000001]
[22:33:28.121]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:33:28.121]        // -> [traceTPIU <= 0x00000000]
[22:33:28.122]    </block>
[22:33:28.122]    <control if="traceSWO" while="" timeout="0" info="">
[22:33:28.123]      // if-block "traceSWO"
[22:33:28.123]        // =>  TRUE
[22:33:28.123]      <block atomic="false" info="">
[22:33:28.124]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:33:28.125]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:33:28.125]            <block atomic="false" info="">
[22:33:28.125]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:33:28.125]                // -> [dbgmcu_val <= 0x00000000]
[22:33:28.126]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:33:28.126]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:33:28.127]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:33:28.128]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:33:28.129]                // -> [dbgmcu_val <= 0x00000007]
[22:33:28.129]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:33:28.129]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:33:28.130]              Sequence("ConfigureTraceSWOPin");
[22:33:28.130]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:33:28.131]                  <block atomic="false" info="">
[22:33:28.131]                    __var pin     = 0;
[22:33:28.132]                      // -> [pin <= 0x00000000]
[22:33:28.132]                    __var port    = 0;
[22:33:28.133]                      // -> [port <= 0x00000000]
[22:33:28.133]                    __var portAdr = 0;
[22:33:28.133]                      // -> [portAdr <= 0x00000000]
[22:33:28.134]                    __var pos     = 0;
[22:33:28.134]                      // -> [pos <= 0x00000000]
[22:33:28.135]                    __var SWO_Pin = 0x00010003;          // PB3
[22:33:28.135]                      // -> [SWO_Pin <= 0x00010003]
[22:33:28.135]                  </block>
[22:33:28.136]                  <block atomic="false" info="configure SWO">
[22:33:28.136]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:33:28.136]                      // -> [pin <= 0x00000003]
[22:33:28.137]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:33:28.137]                      // -> [port <= 0x00000001]
[22:33:28.138]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:33:28.138]                      // -> [portAdr <= 0x40020400]
[22:33:28.138]                    pos = pin * 2;
[22:33:28.139]                      // -> [pos <= 0x00000006]
[22:33:28.139]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:33:28.140]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:33:28.142]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:33:28.143]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:33:28.144]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:33:28.145]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:33:28.146]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:33:28.147]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:33:28.149]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:33:28.149]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:33:28.151]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:33:28.152]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:33:28.153]                  </block>
[22:33:28.153]                  <control if="pin <  8" while="" timeout="0" info="">
[22:33:28.153]                    // if-block "pin <  8"
[22:33:28.154]                      // =>  TRUE
[22:33:28.154]                    <block atomic="false" info="">
[22:33:28.154]                      pos = ((pin    ) & 7) * 4;
[22:33:28.154]                        // -> [pos <= 0x0000000C]
[22:33:28.155]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:33:28.156]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:33:28.158]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:33:28.158]                    </block>
[22:33:28.159]                    // end if-block "pin <  8"
[22:33:28.159]                  </control>
[22:33:28.159]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:33:28.160]                    // if-block "pin >= 8"
[22:33:28.160]                      // =>  FALSE
[22:33:28.161]                    // skip if-block "pin >= 8"
[22:33:28.161]                  </control>
[22:33:28.161]                </sequence>
[22:33:28.162]            </block>
[22:33:28.162]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:33:28.162]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:33:28.164]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:33:28.165]            </block>
[22:33:28.165]          </sequence>
[22:33:28.165]      </block>
[22:33:28.166]      // end if-block "traceSWO"
[22:33:28.166]    </control>
[22:33:28.167]    <control if="traceTPIU" while="" timeout="0" info="">
[22:33:28.168]      // if-block "traceTPIU"
[22:33:28.168]        // =>  FALSE
[22:33:28.168]      // skip if-block "traceTPIU"
[22:33:28.169]    </control>
[22:33:28.169]  </sequence>
[22:33:28.170]  
[22:46:13.325]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:46:13.325]  
[22:46:13.372]  <debugvars>
[22:46:13.372]    // Pre-defined
[22:46:13.373]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:46:13.373]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:46:13.374]    __dp=0x00000000
[22:46:13.374]    __ap=0x00000000
[22:46:13.374]    __traceout=0x00000001      (SWO Trace)
[22:46:13.375]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:46:13.376]    __FlashAddr=0x00000000
[22:46:13.376]    __FlashLen=0x00000000
[22:46:13.376]    __FlashArg=0x00000000
[22:46:13.377]    __FlashOp=0x00000000
[22:46:13.377]    __Result=0x00000000
[22:46:13.378]    
[22:46:13.378]    // User-defined
[22:46:13.379]    DbgMCU_CR=0x00000007
[22:46:13.379]    DbgMCU_APB1_Fz=0x00000000
[22:46:13.379]    DbgMCU_APB2_Fz=0x00000000
[22:46:13.379]    TraceClk_Pin=0x00040002
[22:46:13.380]    TraceD0_Pin=0x00040003
[22:46:13.380]    TraceD1_Pin=0x00040004
[22:46:13.381]    TraceD2_Pin=0x00040005
[22:46:13.381]    TraceD3_Pin=0x00040006
[22:46:13.381]  </debugvars>
[22:46:13.381]  
[22:46:13.382]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:46:13.382]    <block atomic="false" info="">
[22:46:13.382]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:46:13.384]        // -> [traceSWO <= 0x00000001]
[22:46:13.384]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:46:13.384]        // -> [traceTPIU <= 0x00000000]
[22:46:13.384]    </block>
[22:46:13.384]    <control if="traceSWO" while="" timeout="0" info="">
[22:46:13.384]      // if-block "traceSWO"
[22:46:13.385]        // =>  TRUE
[22:46:13.385]      <block atomic="false" info="">
[22:46:13.386]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:46:13.386]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:46:13.386]            <block atomic="false" info="">
[22:46:13.387]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:46:13.387]                // -> [dbgmcu_val <= 0x00000000]
[22:46:13.388]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:46:13.388]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:46:13.389]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:46:13.390]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:46:13.391]                // -> [dbgmcu_val <= 0x00000007]
[22:46:13.391]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:46:13.392]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:46:13.392]              Sequence("ConfigureTraceSWOPin");
[22:46:13.392]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:46:13.393]                  <block atomic="false" info="">
[22:46:13.393]                    __var pin     = 0;
[22:46:13.394]                      // -> [pin <= 0x00000000]
[22:46:13.394]                    __var port    = 0;
[22:46:13.394]                      // -> [port <= 0x00000000]
[22:46:13.395]                    __var portAdr = 0;
[22:46:13.395]                      // -> [portAdr <= 0x00000000]
[22:46:13.396]                    __var pos     = 0;
[22:46:13.396]                      // -> [pos <= 0x00000000]
[22:46:13.396]                    __var SWO_Pin = 0x00010003;          // PB3
[22:46:13.398]                      // -> [SWO_Pin <= 0x00010003]
[22:46:13.398]                  </block>
[22:46:13.398]                  <block atomic="false" info="configure SWO">
[22:46:13.398]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:46:13.399]                      // -> [pin <= 0x00000003]
[22:46:13.399]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:46:13.400]                      // -> [port <= 0x00000001]
[22:46:13.400]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:46:13.400]                      // -> [portAdr <= 0x40020400]
[22:46:13.401]                    pos = pin * 2;
[22:46:13.401]                      // -> [pos <= 0x00000006]
[22:46:13.402]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:46:13.403]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:46:13.405]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:46:13.405]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:46:13.407]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:46:13.409]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:46:13.409]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:46:13.410]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:46:13.412]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:46:13.412]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:46:13.414]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:46:13.416]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:46:13.416]                  </block>
[22:46:13.416]                  <control if="pin <  8" while="" timeout="0" info="">
[22:46:13.416]                    // if-block "pin <  8"
[22:46:13.417]                      // =>  TRUE
[22:46:13.417]                    <block atomic="false" info="">
[22:46:13.418]                      pos = ((pin    ) & 7) * 4;
[22:46:13.418]                        // -> [pos <= 0x0000000C]
[22:46:13.418]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:46:13.420]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:46:13.421]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:46:13.422]                    </block>
[22:46:13.422]                    // end if-block "pin <  8"
[22:46:13.423]                  </control>
[22:46:13.423]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:46:13.424]                    // if-block "pin >= 8"
[22:46:13.424]                      // =>  FALSE
[22:46:13.424]                    // skip if-block "pin >= 8"
[22:46:13.425]                  </control>
[22:46:13.425]                </sequence>
[22:46:13.426]            </block>
[22:46:13.426]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:46:13.427]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:46:13.428]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:46:13.429]            </block>
[22:46:13.429]          </sequence>
[22:46:13.429]      </block>
[22:46:13.430]      // end if-block "traceSWO"
[22:46:13.430]    </control>
[22:46:13.431]    <control if="traceTPIU" while="" timeout="0" info="">
[22:46:13.431]      // if-block "traceTPIU"
[22:46:13.431]        // =>  FALSE
[22:46:13.431]      // skip if-block "traceTPIU"
[22:46:13.431]    </control>
[22:46:13.432]  </sequence>
[22:46:13.432]  
[22:47:20.258]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[22:47:20.258]  
[22:47:20.305]  <debugvars>
[22:47:20.306]    // Pre-defined
[22:47:20.306]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:47:20.306]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:47:20.307]    __dp=0x00000000
[22:47:20.307]    __ap=0x00000000
[22:47:20.308]    __traceout=0x00000001      (SWO Trace)
[22:47:20.308]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:47:20.308]    __FlashAddr=0x00000000
[22:47:20.308]    __FlashLen=0x00000000
[22:47:20.308]    __FlashArg=0x00000000
[22:47:20.309]    __FlashOp=0x00000000
[22:47:20.310]    __Result=0x00000000
[22:47:20.310]    
[22:47:20.310]    // User-defined
[22:47:20.310]    DbgMCU_CR=0x00000007
[22:47:20.311]    DbgMCU_APB1_Fz=0x00000000
[22:47:20.311]    DbgMCU_APB2_Fz=0x00000000
[22:47:20.311]    TraceClk_Pin=0x00040002
[22:47:20.312]    TraceD0_Pin=0x00040003
[22:47:20.312]    TraceD1_Pin=0x00040004
[22:47:20.313]    TraceD2_Pin=0x00040005
[22:47:20.313]    TraceD3_Pin=0x00040006
[22:47:20.314]  </debugvars>
[22:47:20.314]  
[22:47:20.314]  <sequence name="TraceStop" Pname="" disable="false" info="">
[22:47:20.315]    <block atomic="false" info="">
[22:47:20.315]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[22:47:20.316]        // -> [traceSWO <= 0x00000001]
[22:47:20.316]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[22:47:20.316]        // -> [traceTPIU <= 0x00000000]
[22:47:20.317]    </block>
[22:47:20.317]    <control if="traceSWO" while="" timeout="0" info="">
[22:47:20.318]      // if-block "traceSWO"
[22:47:20.318]        // =>  TRUE
[22:47:20.318]      <block atomic="false" info="">
[22:47:20.318]        Sequence("DisableTraceSWO");
[22:47:20.319]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[22:47:20.319]            <block atomic="false" info="">
[22:47:20.319]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:47:20.320]                // -> [dbgmcu_val <= 0x00000000]
[22:47:20.320]            </block>
[22:47:20.321]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[22:47:20.321]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[22:47:20.325]  
[22:47:20.325]  !!! E310 : Debug access failed - cannot read address 0xE0042004 (accsize '4', AP '0x00000000')
[22:47:20.325]  
[22:47:20.325]                // -> [Read32(0xE0042004) => 0x000A0012]   (__dp=0x00000000, __ap=0x00000000)
[22:47:20.326]            </block>
[22:47:20.326]          </sequence>
[22:47:20.327]      </block>
[22:47:20.328]      // end if-block "traceSWO"
[22:47:20.328]    </control>
[22:47:20.328]  </sequence>
[22:47:20.329]  
[22:58:28.403]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[22:58:28.403]  
[22:58:28.451]  <debugvars>
[22:58:28.451]    // Pre-defined
[22:58:28.451]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:58:28.452]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:58:28.452]    __dp=0x00000000
[22:58:28.452]    __ap=0x00000000
[22:58:28.453]    __traceout=0x00000001      (SWO Trace)
[22:58:28.453]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:58:28.453]    __FlashAddr=0x00000000
[22:58:28.453]    __FlashLen=0x00000000
[22:58:28.453]    __FlashArg=0x00000000
[22:58:28.453]    __FlashOp=0x00000000
[22:58:28.454]    __Result=0x00000000
[22:58:28.454]    
[22:58:28.454]    // User-defined
[22:58:28.454]    DbgMCU_CR=0x00000007
[22:58:28.455]    DbgMCU_APB1_Fz=0x00000000
[22:58:28.455]    DbgMCU_APB2_Fz=0x00000000
[22:58:28.455]    TraceClk_Pin=0x00040002
[22:58:28.455]    TraceD0_Pin=0x00040003
[22:58:28.455]    TraceD1_Pin=0x00040004
[22:58:28.456]    TraceD2_Pin=0x00040005
[22:58:28.456]    TraceD3_Pin=0x00040006
[22:58:28.456]  </debugvars>
[22:58:28.457]  
[22:58:28.457]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[22:58:28.457]    <block atomic="false" info="">
[22:58:28.458]      Sequence("CheckID");
[22:58:28.458]        <sequence name="CheckID" Pname="" disable="false" info="">
[22:58:28.458]          <block atomic="false" info="">
[22:58:28.459]            __var pidr1 = 0;
[22:58:28.459]              // -> [pidr1 <= 0x00000000]
[22:58:28.459]            __var pidr2 = 0;
[22:58:28.459]              // -> [pidr2 <= 0x00000000]
[22:58:28.460]            __var jep106id = 0;
[22:58:28.460]              // -> [jep106id <= 0x00000000]
[22:58:28.460]            __var ROMTableBase = 0;
[22:58:28.461]              // -> [ROMTableBase <= 0x00000000]
[22:58:28.461]            __ap = 0;      // AHB-AP
[22:58:28.461]              // -> [__ap <= 0x00000000]
[22:58:28.461]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[22:58:28.462]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.463]              // -> [ROMTableBase <= 0xE00FF000]
[22:58:28.463]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[22:58:28.465]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.465]              // -> [pidr1 <= 0x00000004]
[22:58:28.465]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[22:58:28.466]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.467]              // -> [pidr2 <= 0x0000000A]
[22:58:28.467]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[22:58:28.467]              // -> [jep106id <= 0x00000020]
[22:58:28.467]          </block>
[22:58:28.467]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[22:58:28.468]            // if-block "jep106id != 0x20"
[22:58:28.468]              // =>  FALSE
[22:58:28.468]            // skip if-block "jep106id != 0x20"
[22:58:28.468]          </control>
[22:58:28.469]        </sequence>
[22:58:28.469]    </block>
[22:58:28.469]  </sequence>
[22:58:28.469]  
[22:58:28.470]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[22:58:28.470]  
[22:58:28.470]  <debugvars>
[22:58:28.470]    // Pre-defined
[22:58:28.470]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:58:28.471]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:58:28.471]    __dp=0x00000000
[22:58:28.471]    __ap=0x00000000
[22:58:28.471]    __traceout=0x00000001      (SWO Trace)
[22:58:28.472]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:58:28.472]    __FlashAddr=0x00000000
[22:58:28.472]    __FlashLen=0x00000000
[22:58:28.472]    __FlashArg=0x00000000
[22:58:28.473]    __FlashOp=0x00000000
[22:58:28.473]    __Result=0x00000000
[22:58:28.473]    
[22:58:28.473]    // User-defined
[22:58:28.474]    DbgMCU_CR=0x00000007
[22:58:28.474]    DbgMCU_APB1_Fz=0x00000000
[22:58:28.474]    DbgMCU_APB2_Fz=0x00000000
[22:58:28.475]    TraceClk_Pin=0x00040002
[22:58:28.475]    TraceD0_Pin=0x00040003
[22:58:28.475]    TraceD1_Pin=0x00040004
[22:58:28.475]    TraceD2_Pin=0x00040005
[22:58:28.476]    TraceD3_Pin=0x00040006
[22:58:28.476]  </debugvars>
[22:58:28.476]  
[22:58:28.477]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[22:58:28.477]    <block atomic="false" info="">
[22:58:28.477]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[22:58:28.479]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.479]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[22:58:28.481]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.481]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[22:58:28.482]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.482]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[22:58:28.484]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.484]    </block>
[22:58:28.484]  </sequence>
[22:58:28.485]  
[22:58:28.515]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[22:58:28.515]  
[22:58:28.515]  <debugvars>
[22:58:28.515]    // Pre-defined
[22:58:28.516]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:58:28.516]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:58:28.516]    __dp=0x00000000
[22:58:28.516]    __ap=0x00000000
[22:58:28.516]    __traceout=0x00000001      (SWO Trace)
[22:58:28.516]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:58:28.516]    __FlashAddr=0x00000000
[22:58:28.516]    __FlashLen=0x00000000
[22:58:28.517]    __FlashArg=0x00000000
[22:58:28.517]    __FlashOp=0x00000000
[22:58:28.517]    __Result=0x00000000
[22:58:28.517]    
[22:58:28.517]    // User-defined
[22:58:28.517]    DbgMCU_CR=0x00000007
[22:58:28.517]    DbgMCU_APB1_Fz=0x00000000
[22:58:28.518]    DbgMCU_APB2_Fz=0x00000000
[22:58:28.518]    TraceClk_Pin=0x00040002
[22:58:28.518]    TraceD0_Pin=0x00040003
[22:58:28.518]    TraceD1_Pin=0x00040004
[22:58:28.518]    TraceD2_Pin=0x00040005
[22:58:28.518]    TraceD3_Pin=0x00040006
[22:58:28.519]  </debugvars>
[22:58:28.519]  
[22:58:28.519]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:58:28.519]    <block atomic="false" info="">
[22:58:28.519]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:58:28.519]        // -> [traceSWO <= 0x00000001]
[22:58:28.519]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:58:28.520]        // -> [traceTPIU <= 0x00000000]
[22:58:28.520]    </block>
[22:58:28.520]    <control if="traceSWO" while="" timeout="0" info="">
[22:58:28.520]      // if-block "traceSWO"
[22:58:28.520]        // =>  TRUE
[22:58:28.520]      <block atomic="false" info="">
[22:58:28.520]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:58:28.520]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:58:28.521]            <block atomic="false" info="">
[22:58:28.521]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:58:28.521]                // -> [dbgmcu_val <= 0x00000000]
[22:58:28.521]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:58:28.521]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:58:28.521]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:58:28.522]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.522]                // -> [dbgmcu_val <= 0x00000007]
[22:58:28.522]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:58:28.522]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:58:28.522]              Sequence("ConfigureTraceSWOPin");
[22:58:28.523]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:58:28.523]                  <block atomic="false" info="">
[22:58:28.523]                    __var pin     = 0;
[22:58:28.523]                      // -> [pin <= 0x00000000]
[22:58:28.523]                    __var port    = 0;
[22:58:28.523]                      // -> [port <= 0x00000000]
[22:58:28.523]                    __var portAdr = 0;
[22:58:28.523]                      // -> [portAdr <= 0x00000000]
[22:58:28.523]                    __var pos     = 0;
[22:58:28.524]                      // -> [pos <= 0x00000000]
[22:58:28.524]                    __var SWO_Pin = 0x00010003;          // PB3
[22:58:28.524]                      // -> [SWO_Pin <= 0x00010003]
[22:58:28.524]                  </block>
[22:58:28.524]                  <block atomic="false" info="configure SWO">
[22:58:28.524]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:58:28.525]                      // -> [pin <= 0x00000003]
[22:58:28.525]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:58:28.525]                      // -> [port <= 0x00000001]
[22:58:28.525]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:58:28.525]                      // -> [portAdr <= 0x40020400]
[22:58:28.525]                    pos = pin * 2;
[22:58:28.525]                      // -> [pos <= 0x00000006]
[22:58:28.525]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:58:28.526]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.527]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.527]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:58:28.527]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.528]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.528]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:58:28.529]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.530]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.530]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:58:28.531]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.531]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.532]                  </block>
[22:58:28.532]                  <control if="pin <  8" while="" timeout="0" info="">
[22:58:28.532]                    // if-block "pin <  8"
[22:58:28.532]                      // =>  TRUE
[22:58:28.532]                    <block atomic="false" info="">
[22:58:28.532]                      pos = ((pin    ) & 7) * 4;
[22:58:28.532]                        // -> [pos <= 0x0000000C]
[22:58:28.533]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:58:28.533]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.534]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.534]                    </block>
[22:58:28.534]                    // end if-block "pin <  8"
[22:58:28.534]                  </control>
[22:58:28.534]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:58:28.534]                    // if-block "pin >= 8"
[22:58:28.535]                      // =>  FALSE
[22:58:28.535]                    // skip if-block "pin >= 8"
[22:58:28.535]                  </control>
[22:58:28.535]                </sequence>
[22:58:28.535]            </block>
[22:58:28.535]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:58:28.535]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:58:28.536]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.537]            </block>
[22:58:28.537]          </sequence>
[22:58:28.537]      </block>
[22:58:28.537]      // end if-block "traceSWO"
[22:58:28.537]    </control>
[22:58:28.537]    <control if="traceTPIU" while="" timeout="0" info="">
[22:58:28.537]      // if-block "traceTPIU"
[22:58:28.537]        // =>  FALSE
[22:58:28.537]      // skip if-block "traceTPIU"
[22:58:28.537]    </control>
[22:58:28.538]  </sequence>
[22:58:28.538]  
[22:58:28.548]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:58:28.548]  
[22:58:28.548]  <debugvars>
[22:58:28.548]    // Pre-defined
[22:58:28.548]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:58:28.549]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:58:28.549]    __dp=0x00000000
[22:58:28.549]    __ap=0x00000000
[22:58:28.549]    __traceout=0x00000001      (SWO Trace)
[22:58:28.549]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:58:28.550]    __FlashAddr=0x00000000
[22:58:28.550]    __FlashLen=0x00000000
[22:58:28.550]    __FlashArg=0x00000000
[22:58:28.550]    __FlashOp=0x00000000
[22:58:28.550]    __Result=0x00000000
[22:58:28.550]    
[22:58:28.550]    // User-defined
[22:58:28.551]    DbgMCU_CR=0x00000007
[22:58:28.551]    DbgMCU_APB1_Fz=0x00000000
[22:58:28.551]    DbgMCU_APB2_Fz=0x00000000
[22:58:28.551]    TraceClk_Pin=0x00040002
[22:58:28.551]    TraceD0_Pin=0x00040003
[22:58:28.551]    TraceD1_Pin=0x00040004
[22:58:28.551]    TraceD2_Pin=0x00040005
[22:58:28.552]    TraceD3_Pin=0x00040006
[22:58:28.552]  </debugvars>
[22:58:28.552]  
[22:58:28.552]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:58:28.552]    <block atomic="false" info="">
[22:58:28.552]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:58:28.552]        // -> [traceSWO <= 0x00000001]
[22:58:28.552]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:58:28.553]        // -> [traceTPIU <= 0x00000000]
[22:58:28.553]    </block>
[22:58:28.553]    <control if="traceSWO" while="" timeout="0" info="">
[22:58:28.553]      // if-block "traceSWO"
[22:58:28.553]        // =>  TRUE
[22:58:28.553]      <block atomic="false" info="">
[22:58:28.553]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:58:28.553]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:58:28.554]            <block atomic="false" info="">
[22:58:28.554]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:58:28.554]                // -> [dbgmcu_val <= 0x00000000]
[22:58:28.554]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:58:28.554]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:58:28.554]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:58:28.555]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.555]                // -> [dbgmcu_val <= 0x00000007]
[22:58:28.555]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:58:28.556]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:58:28.556]              Sequence("ConfigureTraceSWOPin");
[22:58:28.556]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:58:28.556]                  <block atomic="false" info="">
[22:58:28.556]                    __var pin     = 0;
[22:58:28.556]                      // -> [pin <= 0x00000000]
[22:58:28.556]                    __var port    = 0;
[22:58:28.557]                      // -> [port <= 0x00000000]
[22:58:28.557]                    __var portAdr = 0;
[22:58:28.557]                      // -> [portAdr <= 0x00000000]
[22:58:28.557]                    __var pos     = 0;
[22:58:28.557]                      // -> [pos <= 0x00000000]
[22:58:28.558]                    __var SWO_Pin = 0x00010003;          // PB3
[22:58:28.558]                      // -> [SWO_Pin <= 0x00010003]
[22:58:28.558]                  </block>
[22:58:28.558]                  <block atomic="false" info="configure SWO">
[22:58:28.558]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:58:28.558]                      // -> [pin <= 0x00000003]
[22:58:28.558]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:58:28.559]                      // -> [port <= 0x00000001]
[22:58:28.559]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:58:28.559]                      // -> [portAdr <= 0x40020400]
[22:58:28.559]                    pos = pin * 2;
[22:58:28.559]                      // -> [pos <= 0x00000006]
[22:58:28.559]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:58:28.560]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.561]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.561]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:58:28.562]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.563]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.563]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:58:28.564]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.565]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.565]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:58:28.566]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.567]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.567]                  </block>
[22:58:28.567]                  <control if="pin <  8" while="" timeout="0" info="">
[22:58:28.568]                    // if-block "pin <  8"
[22:58:28.568]                      // =>  TRUE
[22:58:28.568]                    <block atomic="false" info="">
[22:58:28.568]                      pos = ((pin    ) & 7) * 4;
[22:58:28.568]                        // -> [pos <= 0x0000000C]
[22:58:28.568]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:58:28.569]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.570]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.570]                    </block>
[22:58:28.570]                    // end if-block "pin <  8"
[22:58:28.570]                  </control>
[22:58:28.570]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:58:28.570]                    // if-block "pin >= 8"
[22:58:28.571]                      // =>  FALSE
[22:58:28.571]                    // skip if-block "pin >= 8"
[22:58:28.571]                  </control>
[22:58:28.571]                </sequence>
[22:58:28.571]            </block>
[22:58:28.571]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:58:28.571]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:58:28.572]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:28.572]            </block>
[22:58:28.572]          </sequence>
[22:58:28.572]      </block>
[22:58:28.572]      // end if-block "traceSWO"
[22:58:28.572]    </control>
[22:58:28.572]    <control if="traceTPIU" while="" timeout="0" info="">
[22:58:28.572]      // if-block "traceTPIU"
[22:58:28.572]        // =>  FALSE
[22:58:28.572]      // skip if-block "traceTPIU"
[22:58:28.572]    </control>
[22:58:28.572]  </sequence>
[22:58:28.572]  
[22:58:29.257]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:58:29.257]  
[22:58:29.304]  <debugvars>
[22:58:29.305]    // Pre-defined
[22:58:29.305]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:58:29.306]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:58:29.306]    __dp=0x00000000
[22:58:29.307]    __ap=0x00000000
[22:58:29.307]    __traceout=0x00000001      (SWO Trace)
[22:58:29.307]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:58:29.308]    __FlashAddr=0x00000000
[22:58:29.309]    __FlashLen=0x00000000
[22:58:29.309]    __FlashArg=0x00000000
[22:58:29.309]    __FlashOp=0x00000000
[22:58:29.310]    __Result=0x00000000
[22:58:29.310]    
[22:58:29.310]    // User-defined
[22:58:29.311]    DbgMCU_CR=0x00000007
[22:58:29.311]    DbgMCU_APB1_Fz=0x00000000
[22:58:29.311]    DbgMCU_APB2_Fz=0x00000000
[22:58:29.311]    TraceClk_Pin=0x00040002
[22:58:29.312]    TraceD0_Pin=0x00040003
[22:58:29.312]    TraceD1_Pin=0x00040004
[22:58:29.313]    TraceD2_Pin=0x00040005
[22:58:29.313]    TraceD3_Pin=0x00040006
[22:58:29.313]  </debugvars>
[22:58:29.314]  
[22:58:29.314]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:58:29.315]    <block atomic="false" info="">
[22:58:29.315]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:58:29.316]        // -> [traceSWO <= 0x00000001]
[22:58:29.316]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:58:29.317]        // -> [traceTPIU <= 0x00000000]
[22:58:29.317]    </block>
[22:58:29.317]    <control if="traceSWO" while="" timeout="0" info="">
[22:58:29.318]      // if-block "traceSWO"
[22:58:29.318]        // =>  TRUE
[22:58:29.319]      <block atomic="false" info="">
[22:58:29.319]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:58:29.319]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:58:29.320]            <block atomic="false" info="">
[22:58:29.320]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:58:29.321]                // -> [dbgmcu_val <= 0x00000000]
[22:58:29.322]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:58:29.322]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:58:29.322]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:58:29.324]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:58:29.324]                // -> [dbgmcu_val <= 0x00000007]
[22:58:29.325]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:58:29.325]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:58:29.326]              Sequence("ConfigureTraceSWOPin");
[22:58:29.326]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:58:29.326]                  <block atomic="false" info="">
[22:58:29.326]                    __var pin     = 0;
[22:58:29.327]                      // -> [pin <= 0x00000000]
[22:58:29.327]                    __var port    = 0;
[22:58:29.327]                      // -> [port <= 0x00000000]
[22:58:29.328]                    __var portAdr = 0;
[22:58:29.328]                      // -> [portAdr <= 0x00000000]
[22:58:29.329]                    __var pos     = 0;
[22:58:29.329]                      // -> [pos <= 0x00000000]
[22:58:29.329]                    __var SWO_Pin = 0x00010003;          // PB3
[22:58:29.329]                      // -> [SWO_Pin <= 0x00010003]
[22:58:29.330]                  </block>
[22:58:29.330]                  <block atomic="false" info="configure SWO">
[22:58:29.330]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:58:29.331]                      // -> [pin <= 0x00000003]
[22:58:29.332]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:58:29.332]                      // -> [port <= 0x00000001]
[22:58:29.332]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:58:29.332]                      // -> [portAdr <= 0x40020400]
[22:58:29.333]                    pos = pin * 2;
[22:58:29.334]                      // -> [pos <= 0x00000006]
[22:58:29.334]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:58:29.335]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:58:29.337]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:29.337]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:58:29.338]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:58:29.340]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:29.340]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:58:29.343]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:58:29.344]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:29.344]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:58:29.346]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:58:29.347]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:29.348]                  </block>
[22:58:29.348]                  <control if="pin <  8" while="" timeout="0" info="">
[22:58:29.349]                    // if-block "pin <  8"
[22:58:29.349]                      // =>  TRUE
[22:58:29.350]                    <block atomic="false" info="">
[22:58:29.350]                      pos = ((pin    ) & 7) * 4;
[22:58:29.350]                        // -> [pos <= 0x0000000C]
[22:58:29.351]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:58:29.353]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:58:29.354]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:29.355]                    </block>
[22:58:29.355]                    // end if-block "pin <  8"
[22:58:29.356]                  </control>
[22:58:29.356]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:58:29.356]                    // if-block "pin >= 8"
[22:58:29.357]                      // =>  FALSE
[22:58:29.357]                    // skip if-block "pin >= 8"
[22:58:29.357]                  </control>
[22:58:29.358]                </sequence>
[22:58:29.358]            </block>
[22:58:29.359]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:58:29.359]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:58:29.360]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:29.361]            </block>
[22:58:29.361]          </sequence>
[22:58:29.362]      </block>
[22:58:29.362]      // end if-block "traceSWO"
[22:58:29.363]    </control>
[22:58:29.363]    <control if="traceTPIU" while="" timeout="0" info="">
[22:58:29.363]      // if-block "traceTPIU"
[22:58:29.364]        // =>  FALSE
[22:58:29.364]      // skip if-block "traceTPIU"
[22:58:29.365]    </control>
[22:58:29.365]  </sequence>
[22:58:29.366]  
[22:58:48.690]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:58:48.690]  
[22:58:48.737]  <debugvars>
[22:58:48.738]    // Pre-defined
[22:58:48.738]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:58:48.738]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:58:48.738]    __dp=0x00000000
[22:58:48.738]    __ap=0x00000000
[22:58:48.738]    __traceout=0x00000001      (SWO Trace)
[22:58:48.738]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:58:48.738]    __FlashAddr=0x00000000
[22:58:48.739]    __FlashLen=0x00000000
[22:58:48.739]    __FlashArg=0x00000000
[22:58:48.739]    __FlashOp=0x00000000
[22:58:48.739]    __Result=0x00000000
[22:58:48.739]    
[22:58:48.739]    // User-defined
[22:58:48.740]    DbgMCU_CR=0x00000007
[22:58:48.740]    DbgMCU_APB1_Fz=0x00000000
[22:58:48.740]    DbgMCU_APB2_Fz=0x00000000
[22:58:48.740]    TraceClk_Pin=0x00040002
[22:58:48.740]    TraceD0_Pin=0x00040003
[22:58:48.741]    TraceD1_Pin=0x00040004
[22:58:48.741]    TraceD2_Pin=0x00040005
[22:58:48.741]    TraceD3_Pin=0x00040006
[22:58:48.741]  </debugvars>
[22:58:48.742]  
[22:58:48.742]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:58:48.742]    <block atomic="false" info="">
[22:58:48.743]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:58:48.743]        // -> [traceSWO <= 0x00000001]
[22:58:48.743]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:58:48.744]        // -> [traceTPIU <= 0x00000000]
[22:58:48.744]    </block>
[22:58:48.744]    <control if="traceSWO" while="" timeout="0" info="">
[22:58:48.744]      // if-block "traceSWO"
[22:58:48.745]        // =>  TRUE
[22:58:48.745]      <block atomic="false" info="">
[22:58:48.745]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:58:48.746]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:58:48.746]            <block atomic="false" info="">
[22:58:48.746]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:58:48.746]                // -> [dbgmcu_val <= 0x00000000]
[22:58:48.747]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:58:48.747]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:58:48.747]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:58:48.748]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:58:48.748]                // -> [dbgmcu_val <= 0x00000007]
[22:58:48.749]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:58:48.749]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:58:48.749]              Sequence("ConfigureTraceSWOPin");
[22:58:48.749]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:58:48.750]                  <block atomic="false" info="">
[22:58:48.751]                    __var pin     = 0;
[22:58:48.751]                      // -> [pin <= 0x00000000]
[22:58:48.751]                    __var port    = 0;
[22:58:48.751]                      // -> [port <= 0x00000000]
[22:58:48.751]                    __var portAdr = 0;
[22:58:48.751]                      // -> [portAdr <= 0x00000000]
[22:58:48.752]                    __var pos     = 0;
[22:58:48.752]                      // -> [pos <= 0x00000000]
[22:58:48.753]                    __var SWO_Pin = 0x00010003;          // PB3
[22:58:48.753]                      // -> [SWO_Pin <= 0x00010003]
[22:58:48.753]                  </block>
[22:58:48.753]                  <block atomic="false" info="configure SWO">
[22:58:48.753]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:58:48.754]                      // -> [pin <= 0x00000003]
[22:58:48.754]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:58:48.754]                      // -> [port <= 0x00000001]
[22:58:48.754]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:58:48.755]                      // -> [portAdr <= 0x40020400]
[22:58:48.755]                    pos = pin * 2;
[22:58:48.756]                      // -> [pos <= 0x00000006]
[22:58:48.756]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:58:48.756]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:58:48.757]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:48.758]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:58:48.759]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:58:48.760]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:48.760]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:58:48.761]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:58:48.762]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:48.762]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:58:48.763]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:58:48.764]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:48.764]                  </block>
[22:58:48.764]                  <control if="pin <  8" while="" timeout="0" info="">
[22:58:48.765]                    // if-block "pin <  8"
[22:58:48.765]                      // =>  TRUE
[22:58:48.765]                    <block atomic="false" info="">
[22:58:48.765]                      pos = ((pin    ) & 7) * 4;
[22:58:48.766]                        // -> [pos <= 0x0000000C]
[22:58:48.766]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:58:48.767]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:58:48.768]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:48.768]                    </block>
[22:58:48.769]                    // end if-block "pin <  8"
[22:58:48.769]                  </control>
[22:58:48.769]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:58:48.769]                    // if-block "pin >= 8"
[22:58:48.769]                      // =>  FALSE
[22:58:48.770]                    // skip if-block "pin >= 8"
[22:58:48.770]                  </control>
[22:58:48.770]                </sequence>
[22:58:48.770]            </block>
[22:58:48.770]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:58:48.771]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:58:48.772]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:58:48.772]            </block>
[22:58:48.772]          </sequence>
[22:58:48.772]      </block>
[22:58:48.772]      // end if-block "traceSWO"
[22:58:48.772]    </control>
[22:58:48.773]    <control if="traceTPIU" while="" timeout="0" info="">
[22:58:48.773]      // if-block "traceTPIU"
[22:58:48.773]        // =>  FALSE
[22:58:48.773]      // skip if-block "traceTPIU"
[22:58:48.773]    </control>
[22:58:48.774]  </sequence>
[22:58:48.774]  
[22:59:25.293]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[22:59:25.293]  
[22:59:25.339]  <debugvars>
[22:59:25.340]    // Pre-defined
[22:59:25.340]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:59:25.340]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:59:25.340]    __dp=0x00000000
[22:59:25.341]    __ap=0x00000000
[22:59:25.341]    __traceout=0x00000001      (SWO Trace)
[22:59:25.341]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:59:25.342]    __FlashAddr=0x00000000
[22:59:25.342]    __FlashLen=0x00000000
[22:59:25.342]    __FlashArg=0x00000000
[22:59:25.342]    __FlashOp=0x00000000
[22:59:25.343]    __Result=0x00000000
[22:59:25.343]    
[22:59:25.343]    // User-defined
[22:59:25.343]    DbgMCU_CR=0x00000007
[22:59:25.344]    DbgMCU_APB1_Fz=0x00000000
[22:59:25.344]    DbgMCU_APB2_Fz=0x00000000
[22:59:25.344]    TraceClk_Pin=0x00040002
[22:59:25.345]    TraceD0_Pin=0x00040003
[22:59:25.345]    TraceD1_Pin=0x00040004
[22:59:25.345]    TraceD2_Pin=0x00040005
[22:59:25.345]    TraceD3_Pin=0x00040006
[22:59:25.346]  </debugvars>
[22:59:25.346]  
[22:59:25.346]  <sequence name="TraceStart" Pname="" disable="false" info="">
[22:59:25.346]    <block atomic="false" info="">
[22:59:25.347]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[22:59:25.347]        // -> [traceSWO <= 0x00000001]
[22:59:25.347]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[22:59:25.347]        // -> [traceTPIU <= 0x00000000]
[22:59:25.348]    </block>
[22:59:25.348]    <control if="traceSWO" while="" timeout="0" info="">
[22:59:25.348]      // if-block "traceSWO"
[22:59:25.349]        // =>  TRUE
[22:59:25.349]      <block atomic="false" info="">
[22:59:25.350]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[22:59:25.350]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[22:59:25.351]            <block atomic="false" info="">
[22:59:25.351]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:59:25.351]                // -> [dbgmcu_val <= 0x00000000]
[22:59:25.352]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[22:59:25.352]                // -> [dbgmcu_trace_val <= 0x00000000]
[22:59:25.352]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[22:59:25.354]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:59:25.354]                // -> [dbgmcu_val <= 0x00000007]
[22:59:25.355]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[22:59:25.355]                // -> [dbgmcu_trace_val <= 0x00000020]
[22:59:25.355]              Sequence("ConfigureTraceSWOPin");
[22:59:25.356]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[22:59:25.356]                  <block atomic="false" info="">
[22:59:25.357]                    __var pin     = 0;
[22:59:25.357]                      // -> [pin <= 0x00000000]
[22:59:25.357]                    __var port    = 0;
[22:59:25.358]                      // -> [port <= 0x00000000]
[22:59:25.358]                    __var portAdr = 0;
[22:59:25.358]                      // -> [portAdr <= 0x00000000]
[22:59:25.358]                    __var pos     = 0;
[22:59:25.359]                      // -> [pos <= 0x00000000]
[22:59:25.359]                    __var SWO_Pin = 0x00010003;          // PB3
[22:59:25.359]                      // -> [SWO_Pin <= 0x00010003]
[22:59:25.360]                  </block>
[22:59:25.360]                  <block atomic="false" info="configure SWO">
[22:59:25.360]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[22:59:25.360]                      // -> [pin <= 0x00000003]
[22:59:25.361]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[22:59:25.361]                      // -> [port <= 0x00000001]
[22:59:25.361]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[22:59:25.362]                      // -> [portAdr <= 0x40020400]
[22:59:25.362]                    pos = pin * 2;
[22:59:25.362]                      // -> [pos <= 0x00000006]
[22:59:25.362]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[22:59:25.364]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:59:25.366]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[22:59:25.366]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[22:59:25.367]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[22:59:25.369]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[22:59:25.369]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[22:59:25.370]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[22:59:25.372]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[22:59:25.372]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[22:59:25.374]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[22:59:25.375]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[22:59:25.376]                  </block>
[22:59:25.376]                  <control if="pin <  8" while="" timeout="0" info="">
[22:59:25.376]                    // if-block "pin <  8"
[22:59:25.377]                      // =>  TRUE
[22:59:25.377]                    <block atomic="false" info="">
[22:59:25.377]                      pos = ((pin    ) & 7) * 4;
[22:59:25.378]                        // -> [pos <= 0x0000000C]
[22:59:25.378]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[22:59:25.379]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[22:59:25.380]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[22:59:25.381]                    </block>
[22:59:25.381]                    // end if-block "pin <  8"
[22:59:25.382]                  </control>
[22:59:25.382]                  <control if="pin >= 8" while="" timeout="0" info="">
[22:59:25.383]                    // if-block "pin >= 8"
[22:59:25.383]                      // =>  FALSE
[22:59:25.383]                    // skip if-block "pin >= 8"
[22:59:25.384]                  </control>
[22:59:25.384]                </sequence>
[22:59:25.385]            </block>
[22:59:25.385]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[22:59:25.386]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[22:59:25.387]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[22:59:25.388]            </block>
[22:59:25.388]          </sequence>
[22:59:25.388]      </block>
[22:59:25.388]      // end if-block "traceSWO"
[22:59:25.389]    </control>
[22:59:25.389]    <control if="traceTPIU" while="" timeout="0" info="">
[22:59:25.389]      // if-block "traceTPIU"
[22:59:25.390]        // =>  FALSE
[22:59:25.390]      // skip if-block "traceTPIU"
[22:59:25.390]    </control>
[22:59:25.391]  </sequence>
[22:59:25.391]  
[22:59:28.840]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[22:59:28.840]  
[22:59:28.886]  <debugvars>
[22:59:28.887]    // Pre-defined
[22:59:28.887]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[22:59:28.888]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[22:59:28.888]    __dp=0x00000000
[22:59:28.889]    __ap=0x00000000
[22:59:28.889]    __traceout=0x00000001      (SWO Trace)
[22:59:28.889]    __errorcontrol=0x00000000  (Skip Errors="False")
[22:59:28.890]    __FlashAddr=0x00000000
[22:59:28.890]    __FlashLen=0x00000000
[22:59:28.891]    __FlashArg=0x00000000
[22:59:28.891]    __FlashOp=0x00000000
[22:59:28.892]    __Result=0x00000000
[22:59:28.892]    
[22:59:28.892]    // User-defined
[22:59:28.892]    DbgMCU_CR=0x00000007
[22:59:28.893]    DbgMCU_APB1_Fz=0x00000000
[22:59:28.893]    DbgMCU_APB2_Fz=0x00000000
[22:59:28.893]    TraceClk_Pin=0x00040002
[22:59:28.894]    TraceD0_Pin=0x00040003
[22:59:28.894]    TraceD1_Pin=0x00040004
[22:59:28.894]    TraceD2_Pin=0x00040005
[22:59:28.895]    TraceD3_Pin=0x00040006
[22:59:28.895]  </debugvars>
[22:59:28.895]  
[22:59:28.895]  <sequence name="TraceStop" Pname="" disable="false" info="">
[22:59:28.896]    <block atomic="false" info="">
[22:59:28.896]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[22:59:28.896]        // -> [traceSWO <= 0x00000001]
[22:59:28.896]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[22:59:28.897]        // -> [traceTPIU <= 0x00000000]
[22:59:28.897]    </block>
[22:59:28.897]    <control if="traceSWO" while="" timeout="0" info="">
[22:59:28.898]      // if-block "traceSWO"
[22:59:28.898]        // =>  TRUE
[22:59:28.898]      <block atomic="false" info="">
[22:59:28.898]        Sequence("DisableTraceSWO");
[22:59:28.899]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[22:59:28.899]            <block atomic="false" info="">
[22:59:28.899]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[22:59:28.900]                // -> [dbgmcu_val <= 0x00000000]
[22:59:28.900]            </block>
[22:59:28.901]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[22:59:28.901]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[22:59:28.902]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[22:59:28.903]                // -> [dbgmcu_val <= 0x00000007]
[22:59:28.903]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[22:59:28.905]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[22:59:28.905]            </block>
[22:59:28.905]          </sequence>
[22:59:28.906]      </block>
[22:59:28.906]      // end if-block "traceSWO"
[22:59:28.906]    </control>
[22:59:28.907]    <control if="traceTPIU" while="" timeout="0" info="">
[22:59:28.907]      // if-block "traceTPIU"
[22:59:28.907]        // =>  FALSE
[22:59:28.907]      // skip if-block "traceTPIU"
[22:59:28.908]    </control>
[22:59:28.908]  </sequence>
[22:59:28.908]  
[23:00:03.233]  **********  Sequence "DebugDeviceUnlock"  (Context="Connect", Pname="", info="")
[23:00:03.233]  
[23:00:03.281]  <debugvars>
[23:00:03.282]    // Pre-defined
[23:00:03.282]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:00:03.282]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[23:00:03.283]    __dp=0x00000000
[23:00:03.283]    __ap=0x00000000
[23:00:03.283]    __traceout=0x00000001      (SWO Trace)
[23:00:03.283]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:00:03.284]    __FlashAddr=0x00000000
[23:00:03.284]    __FlashLen=0x00000000
[23:00:03.284]    __FlashArg=0x00000000
[23:00:03.285]    __FlashOp=0x00000000
[23:00:03.285]    __Result=0x00000000
[23:00:03.285]    
[23:00:03.285]    // User-defined
[23:00:03.286]    DbgMCU_CR=0x00000007
[23:00:03.286]    DbgMCU_APB1_Fz=0x00000000
[23:00:03.287]    DbgMCU_APB2_Fz=0x00000000
[23:00:03.287]    TraceClk_Pin=0x00040002
[23:00:03.287]    TraceD0_Pin=0x00040003
[23:00:03.287]    TraceD1_Pin=0x00040004
[23:00:03.288]    TraceD2_Pin=0x00040005
[23:00:03.288]    TraceD3_Pin=0x00040006
[23:00:03.288]  </debugvars>
[23:00:03.288]  
[23:00:03.289]  <sequence name="DebugDeviceUnlock" Pname="" disable="false" info="">
[23:00:03.289]    <block atomic="false" info="">
[23:00:03.289]      Sequence("CheckID");
[23:00:03.289]        <sequence name="CheckID" Pname="" disable="false" info="">
[23:00:03.290]          <block atomic="false" info="">
[23:00:03.290]            __var pidr1 = 0;
[23:00:03.290]              // -> [pidr1 <= 0x00000000]
[23:00:03.291]            __var pidr2 = 0;
[23:00:03.291]              // -> [pidr2 <= 0x00000000]
[23:00:03.291]            __var jep106id = 0;
[23:00:03.291]              // -> [jep106id <= 0x00000000]
[23:00:03.292]            __var ROMTableBase = 0;
[23:00:03.292]              // -> [ROMTableBase <= 0x00000000]
[23:00:03.292]            __ap = 0;      // AHB-AP
[23:00:03.292]              // -> [__ap <= 0x00000000]
[23:00:03.293]            ROMTableBase = ReadAP(0xF8) & ~0x3;
[23:00:03.294]              // -> [ReadAP(0x000000F8) => 0xE00FF003]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.294]              // -> [ROMTableBase <= 0xE00FF000]
[23:00:03.294]            pidr1 = Read32(ROMTableBase + 0x0FE4);
[23:00:03.296]              // -> [Read32(0xE00FFFE4) => 0x00000004]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.296]              // -> [pidr1 <= 0x00000004]
[23:00:03.297]            pidr2 = Read32(ROMTableBase + 0x0FE8);
[23:00:03.298]              // -> [Read32(0xE00FFFE8) => 0x0000000A]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.299]              // -> [pidr2 <= 0x0000000A]
[23:00:03.299]            jep106id = ((pidr2 & 0x7) << 4 ) | ((pidr1 >> 4) & 0xF);
[23:00:03.299]              // -> [jep106id <= 0x00000020]
[23:00:03.299]          </block>
[23:00:03.300]          <control if="jep106id != 0x20" while="" timeout="0" info="">
[23:00:03.300]            // if-block "jep106id != 0x20"
[23:00:03.300]              // =>  FALSE
[23:00:03.301]            // skip if-block "jep106id != 0x20"
[23:00:03.301]          </control>
[23:00:03.301]        </sequence>
[23:00:03.302]    </block>
[23:00:03.302]  </sequence>
[23:00:03.302]  
[23:00:03.302]  **********  Sequence "DebugCoreStart"  (Context="Connect", Pname="", info="")
[23:00:03.302]  
[23:00:03.303]  <debugvars>
[23:00:03.303]    // Pre-defined
[23:00:03.303]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:00:03.303]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[23:00:03.304]    __dp=0x00000000
[23:00:03.304]    __ap=0x00000000
[23:00:03.304]    __traceout=0x00000001      (SWO Trace)
[23:00:03.304]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:00:03.305]    __FlashAddr=0x00000000
[23:00:03.305]    __FlashLen=0x00000000
[23:00:03.305]    __FlashArg=0x00000000
[23:00:03.306]    __FlashOp=0x00000000
[23:00:03.306]    __Result=0x00000000
[23:00:03.306]    
[23:00:03.306]    // User-defined
[23:00:03.306]    DbgMCU_CR=0x00000007
[23:00:03.307]    DbgMCU_APB1_Fz=0x00000000
[23:00:03.307]    DbgMCU_APB2_Fz=0x00000000
[23:00:03.307]    TraceClk_Pin=0x00040002
[23:00:03.308]    TraceD0_Pin=0x00040003
[23:00:03.308]    TraceD1_Pin=0x00040004
[23:00:03.308]    TraceD2_Pin=0x00040005
[23:00:03.308]    TraceD3_Pin=0x00040006
[23:00:03.309]  </debugvars>
[23:00:03.309]  
[23:00:03.309]  <sequence name="DebugCoreStart" Pname="" disable="false" info="">
[23:00:03.309]    <block atomic="false" info="">
[23:00:03.310]      Write32(0xE000EDF0, 0xA05F0001);                                        // Enable Core Debug via DHCSR
[23:00:03.311]        // -> [Write32(0xE000EDF0, 0xA05F0001)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.312]      Write32(0xE0042004, DbgMCU_CR);                                         // DBGMCU_CR: Configure MCU Debug
[23:00:03.314]        // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.314]      Write32(0xE0042008, DbgMCU_APB1_Fz);                                    // DBGMCU_APB1_FZ: Configure APB1 Peripheral Freeze Behavior
[23:00:03.316]        // -> [Write32(0xE0042008, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.316]      Write32(0xE004200C, DbgMCU_APB2_Fz);                                    // DBGMCU_APB1_FZ: Configure APB2 Peripheral Freeze Behavior
[23:00:03.317]        // -> [Write32(0xE004200C, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.318]    </block>
[23:00:03.318]  </sequence>
[23:00:03.318]  
[23:00:03.369]  **********  Sequence "TraceStart"  (Context="Connect", Pname="", info="")
[23:00:03.369]  
[23:00:03.370]  <debugvars>
[23:00:03.370]    // Pre-defined
[23:00:03.370]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:00:03.371]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[23:00:03.371]    __dp=0x00000000
[23:00:03.371]    __ap=0x00000000
[23:00:03.372]    __traceout=0x00000001      (SWO Trace)
[23:00:03.372]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:00:03.373]    __FlashAddr=0x00000000
[23:00:03.373]    __FlashLen=0x00000000
[23:00:03.373]    __FlashArg=0x00000000
[23:00:03.373]    __FlashOp=0x00000000
[23:00:03.374]    __Result=0x00000000
[23:00:03.375]    
[23:00:03.375]    // User-defined
[23:00:03.375]    DbgMCU_CR=0x00000007
[23:00:03.375]    DbgMCU_APB1_Fz=0x00000000
[23:00:03.375]    DbgMCU_APB2_Fz=0x00000000
[23:00:03.375]    TraceClk_Pin=0x00040002
[23:00:03.376]    TraceD0_Pin=0x00040003
[23:00:03.377]    TraceD1_Pin=0x00040004
[23:00:03.377]    TraceD2_Pin=0x00040005
[23:00:03.377]    TraceD3_Pin=0x00040006
[23:00:03.377]  </debugvars>
[23:00:03.378]  
[23:00:03.378]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:00:03.378]    <block atomic="false" info="">
[23:00:03.378]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:00:03.379]        // -> [traceSWO <= 0x00000001]
[23:00:03.379]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:00:03.379]        // -> [traceTPIU <= 0x00000000]
[23:00:03.379]    </block>
[23:00:03.379]    <control if="traceSWO" while="" timeout="0" info="">
[23:00:03.379]      // if-block "traceSWO"
[23:00:03.379]        // =>  TRUE
[23:00:03.380]      <block atomic="false" info="">
[23:00:03.381]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:00:03.381]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:00:03.382]            <block atomic="false" info="">
[23:00:03.382]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:00:03.382]                // -> [dbgmcu_val <= 0x00000000]
[23:00:03.382]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:00:03.382]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:00:03.382]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:00:03.384]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.385]                // -> [dbgmcu_val <= 0x00000007]
[23:00:03.385]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:00:03.385]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:00:03.385]              Sequence("ConfigureTraceSWOPin");
[23:00:03.385]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:00:03.386]                  <block atomic="false" info="">
[23:00:03.387]                    __var pin     = 0;
[23:00:03.387]                      // -> [pin <= 0x00000000]
[23:00:03.387]                    __var port    = 0;
[23:00:03.387]                      // -> [port <= 0x00000000]
[23:00:03.388]                    __var portAdr = 0;
[23:00:03.388]                      // -> [portAdr <= 0x00000000]
[23:00:03.388]                    __var pos     = 0;
[23:00:03.389]                      // -> [pos <= 0x00000000]
[23:00:03.389]                    __var SWO_Pin = 0x00010003;          // PB3
[23:00:03.390]                      // -> [SWO_Pin <= 0x00010003]
[23:00:03.391]                  </block>
[23:00:03.391]                  <block atomic="false" info="configure SWO">
[23:00:03.391]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:00:03.391]                      // -> [pin <= 0x00000003]
[23:00:03.392]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:00:03.392]                      // -> [port <= 0x00000001]
[23:00:03.392]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:00:03.393]                      // -> [portAdr <= 0x40020400]
[23:00:03.393]                    pos = pin * 2;
[23:00:03.393]                      // -> [pos <= 0x00000006]
[23:00:03.393]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:00:03.395]                      // -> [Read32(0x40023830) => 0x00000002]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.396]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.396]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:00:03.397]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.398]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.400]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:00:03.400]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.402]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.402]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:00:03.404]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.405]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.406]                  </block>
[23:00:03.406]                  <control if="pin <  8" while="" timeout="0" info="">
[23:00:03.406]                    // if-block "pin <  8"
[23:00:03.407]                      // =>  TRUE
[23:00:03.407]                    <block atomic="false" info="">
[23:00:03.408]                      pos = ((pin    ) & 7) * 4;
[23:00:03.409]                        // -> [pos <= 0x0000000C]
[23:00:03.409]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:00:03.410]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.411]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.411]                    </block>
[23:00:03.412]                    // end if-block "pin <  8"
[23:00:03.412]                  </control>
[23:00:03.413]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:00:03.413]                    // if-block "pin >= 8"
[23:00:03.413]                      // =>  FALSE
[23:00:03.413]                    // skip if-block "pin >= 8"
[23:00:03.414]                  </control>
[23:00:03.415]                </sequence>
[23:00:03.415]            </block>
[23:00:03.415]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:00:03.415]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:00:03.416]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.417]            </block>
[23:00:03.417]          </sequence>
[23:00:03.417]      </block>
[23:00:03.418]      // end if-block "traceSWO"
[23:00:03.419]    </control>
[23:00:03.419]    <control if="traceTPIU" while="" timeout="0" info="">
[23:00:03.419]      // if-block "traceTPIU"
[23:00:03.419]        // =>  FALSE
[23:00:03.420]      // skip if-block "traceTPIU"
[23:00:03.420]    </control>
[23:00:03.421]  </sequence>
[23:00:03.421]  
[23:00:03.443]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:00:03.443]  
[23:00:03.443]  <debugvars>
[23:00:03.444]    // Pre-defined
[23:00:03.444]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:00:03.444]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[23:00:03.445]    __dp=0x00000000
[23:00:03.445]    __ap=0x00000000
[23:00:03.445]    __traceout=0x00000001      (SWO Trace)
[23:00:03.445]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:00:03.445]    __FlashAddr=0x00000000
[23:00:03.447]    __FlashLen=0x00000000
[23:00:03.447]    __FlashArg=0x00000000
[23:00:03.447]    __FlashOp=0x00000000
[23:00:03.447]    __Result=0x00000000
[23:00:03.447]    
[23:00:03.447]    // User-defined
[23:00:03.448]    DbgMCU_CR=0x00000007
[23:00:03.448]    DbgMCU_APB1_Fz=0x00000000
[23:00:03.448]    DbgMCU_APB2_Fz=0x00000000
[23:00:03.449]    TraceClk_Pin=0x00040002
[23:00:03.450]    TraceD0_Pin=0x00040003
[23:00:03.450]    TraceD1_Pin=0x00040004
[23:00:03.450]    TraceD2_Pin=0x00040005
[23:00:03.450]    TraceD3_Pin=0x00040006
[23:00:03.451]  </debugvars>
[23:00:03.451]  
[23:00:03.451]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:00:03.451]    <block atomic="false" info="">
[23:00:03.452]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:00:03.452]        // -> [traceSWO <= 0x00000001]
[23:00:03.452]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:00:03.452]        // -> [traceTPIU <= 0x00000000]
[23:00:03.452]    </block>
[23:00:03.453]    <control if="traceSWO" while="" timeout="0" info="">
[23:00:03.453]      // if-block "traceSWO"
[23:00:03.453]        // =>  TRUE
[23:00:03.453]      <block atomic="false" info="">
[23:00:03.454]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:00:03.454]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:00:03.454]            <block atomic="false" info="">
[23:00:03.454]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:00:03.455]                // -> [dbgmcu_val <= 0x00000000]
[23:00:03.455]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:00:03.455]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:00:03.455]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:00:03.456]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.458]                // -> [dbgmcu_val <= 0x00000007]
[23:00:03.458]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:00:03.458]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:00:03.458]              Sequence("ConfigureTraceSWOPin");
[23:00:03.459]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:00:03.459]                  <block atomic="false" info="">
[23:00:03.459]                    __var pin     = 0;
[23:00:03.459]                      // -> [pin <= 0x00000000]
[23:00:03.459]                    __var port    = 0;
[23:00:03.460]                      // -> [port <= 0x00000000]
[23:00:03.460]                    __var portAdr = 0;
[23:00:03.461]                      // -> [portAdr <= 0x00000000]
[23:00:03.461]                    __var pos     = 0;
[23:00:03.461]                      // -> [pos <= 0x00000000]
[23:00:03.462]                    __var SWO_Pin = 0x00010003;          // PB3
[23:00:03.462]                      // -> [SWO_Pin <= 0x00010003]
[23:00:03.462]                  </block>
[23:00:03.463]                  <block atomic="false" info="configure SWO">
[23:00:03.464]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:00:03.464]                      // -> [pin <= 0x00000003]
[23:00:03.464]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:00:03.464]                      // -> [port <= 0x00000001]
[23:00:03.465]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:00:03.465]                      // -> [portAdr <= 0x40020400]
[23:00:03.466]                    pos = pin * 2;
[23:00:03.466]                      // -> [pos <= 0x00000006]
[23:00:03.466]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:00:03.467]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.469]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.469]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:00:03.470]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.472]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.472]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:00:03.474]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.475]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.475]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:00:03.477]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.478]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.479]                  </block>
[23:00:03.479]                  <control if="pin <  8" while="" timeout="0" info="">
[23:00:03.480]                    // if-block "pin <  8"
[23:00:03.480]                      // =>  TRUE
[23:00:03.480]                    <block atomic="false" info="">
[23:00:03.480]                      pos = ((pin    ) & 7) * 4;
[23:00:03.481]                        // -> [pos <= 0x0000000C]
[23:00:03.481]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:00:03.482]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.484]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.485]                    </block>
[23:00:03.485]                    // end if-block "pin <  8"
[23:00:03.485]                  </control>
[23:00:03.485]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:00:03.486]                    // if-block "pin >= 8"
[23:00:03.486]                      // =>  FALSE
[23:00:03.486]                    // skip if-block "pin >= 8"
[23:00:03.486]                  </control>
[23:00:03.487]                </sequence>
[23:00:03.487]            </block>
[23:00:03.487]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:00:03.487]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:00:03.488]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.489]            </block>
[23:00:03.489]          </sequence>
[23:00:03.489]      </block>
[23:00:03.490]      // end if-block "traceSWO"
[23:00:03.490]    </control>
[23:00:03.490]    <control if="traceTPIU" while="" timeout="0" info="">
[23:00:03.491]      // if-block "traceTPIU"
[23:00:03.491]        // =>  FALSE
[23:00:03.492]      // skip if-block "traceTPIU"
[23:00:03.492]    </control>
[23:00:03.493]  </sequence>
[23:00:03.493]  
[23:00:03.930]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:00:03.930]  
[23:00:03.977]  <debugvars>
[23:00:03.977]    // Pre-defined
[23:00:03.978]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:00:03.979]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[23:00:03.979]    __dp=0x00000000
[23:00:03.979]    __ap=0x00000000
[23:00:03.979]    __traceout=0x00000001      (SWO Trace)
[23:00:03.980]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:00:03.980]    __FlashAddr=0x00000000
[23:00:03.981]    __FlashLen=0x00000000
[23:00:03.981]    __FlashArg=0x00000000
[23:00:03.981]    __FlashOp=0x00000000
[23:00:03.982]    __Result=0x00000000
[23:00:03.982]    
[23:00:03.982]    // User-defined
[23:00:03.982]    DbgMCU_CR=0x00000007
[23:00:03.982]    DbgMCU_APB1_Fz=0x00000000
[23:00:03.983]    DbgMCU_APB2_Fz=0x00000000
[23:00:03.983]    TraceClk_Pin=0x00040002
[23:00:03.983]    TraceD0_Pin=0x00040003
[23:00:03.983]    TraceD1_Pin=0x00040004
[23:00:03.984]    TraceD2_Pin=0x00040005
[23:00:03.984]    TraceD3_Pin=0x00040006
[23:00:03.984]  </debugvars>
[23:00:03.984]  
[23:00:03.984]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:00:03.985]    <block atomic="false" info="">
[23:00:03.985]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:00:03.986]        // -> [traceSWO <= 0x00000001]
[23:00:03.986]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:00:03.987]        // -> [traceTPIU <= 0x00000000]
[23:00:03.987]    </block>
[23:00:03.987]    <control if="traceSWO" while="" timeout="0" info="">
[23:00:03.987]      // if-block "traceSWO"
[23:00:03.987]        // =>  TRUE
[23:00:03.988]      <block atomic="false" info="">
[23:00:03.988]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:00:03.989]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:00:03.989]            <block atomic="false" info="">
[23:00:03.989]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:00:03.990]                // -> [dbgmcu_val <= 0x00000000]
[23:00:03.990]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:00:03.991]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:00:03.991]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:00:03.993]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:00:03.993]                // -> [dbgmcu_val <= 0x00000007]
[23:00:03.994]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:00:03.995]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:00:03.995]              Sequence("ConfigureTraceSWOPin");
[23:00:03.995]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:00:03.995]                  <block atomic="false" info="">
[23:00:03.996]                    __var pin     = 0;
[23:00:03.996]                      // -> [pin <= 0x00000000]
[23:00:03.997]                    __var port    = 0;
[23:00:03.997]                      // -> [port <= 0x00000000]
[23:00:03.998]                    __var portAdr = 0;
[23:00:03.998]                      // -> [portAdr <= 0x00000000]
[23:00:03.998]                    __var pos     = 0;
[23:00:03.999]                      // -> [pos <= 0x00000000]
[23:00:03.999]                    __var SWO_Pin = 0x00010003;          // PB3
[23:00:04.000]                      // -> [SWO_Pin <= 0x00010003]
[23:00:04.000]                  </block>
[23:00:04.000]                  <block atomic="false" info="configure SWO">
[23:00:04.000]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:00:04.001]                      // -> [pin <= 0x00000003]
[23:00:04.001]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:00:04.001]                      // -> [port <= 0x00000001]
[23:00:04.002]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:00:04.002]                      // -> [portAdr <= 0x40020400]
[23:00:04.003]                    pos = pin * 2;
[23:00:04.003]                      // -> [pos <= 0x00000006]
[23:00:04.003]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:00:04.004]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:00:04.006]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:04.007]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:00:04.008]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:00:04.010]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:04.010]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:00:04.012]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:00:04.014]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:04.014]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:00:04.015]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:00:04.017]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:04.017]                  </block>
[23:00:04.018]                  <control if="pin <  8" while="" timeout="0" info="">
[23:00:04.018]                    // if-block "pin <  8"
[23:00:04.018]                      // =>  TRUE
[23:00:04.019]                    <block atomic="false" info="">
[23:00:04.019]                      pos = ((pin    ) & 7) * 4;
[23:00:04.019]                        // -> [pos <= 0x0000000C]
[23:00:04.019]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:00:04.020]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:00:04.022]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:04.022]                    </block>
[23:00:04.023]                    // end if-block "pin <  8"
[23:00:04.023]                  </control>
[23:00:04.023]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:00:04.024]                    // if-block "pin >= 8"
[23:00:04.024]                      // =>  FALSE
[23:00:04.025]                    // skip if-block "pin >= 8"
[23:00:04.025]                  </control>
[23:00:04.025]                </sequence>
[23:00:04.026]            </block>
[23:00:04.026]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:00:04.027]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:00:04.028]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:04.028]            </block>
[23:00:04.029]          </sequence>
[23:00:04.029]      </block>
[23:00:04.029]      // end if-block "traceSWO"
[23:00:04.030]    </control>
[23:00:04.030]    <control if="traceTPIU" while="" timeout="0" info="">
[23:00:04.030]      // if-block "traceTPIU"
[23:00:04.030]        // =>  FALSE
[23:00:04.031]      // skip if-block "traceTPIU"
[23:00:04.031]    </control>
[23:00:04.032]  </sequence>
[23:00:04.032]  
[23:00:22.964]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:00:22.964]  
[23:00:23.011]  <debugvars>
[23:00:23.011]    // Pre-defined
[23:00:23.012]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:00:23.012]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[23:00:23.012]    __dp=0x00000000
[23:00:23.013]    __ap=0x00000000
[23:00:23.013]    __traceout=0x00000001      (SWO Trace)
[23:00:23.013]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:00:23.014]    __FlashAddr=0x00000000
[23:00:23.014]    __FlashLen=0x00000000
[23:00:23.014]    __FlashArg=0x00000000
[23:00:23.015]    __FlashOp=0x00000000
[23:00:23.015]    __Result=0x00000000
[23:00:23.016]    
[23:00:23.016]    // User-defined
[23:00:23.016]    DbgMCU_CR=0x00000007
[23:00:23.016]    DbgMCU_APB1_Fz=0x00000000
[23:00:23.017]    DbgMCU_APB2_Fz=0x00000000
[23:00:23.017]    TraceClk_Pin=0x00040002
[23:00:23.018]    TraceD0_Pin=0x00040003
[23:00:23.018]    TraceD1_Pin=0x00040004
[23:00:23.018]    TraceD2_Pin=0x00040005
[23:00:23.019]    TraceD3_Pin=0x00040006
[23:00:23.019]  </debugvars>
[23:00:23.019]  
[23:00:23.020]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:00:23.020]    <block atomic="false" info="">
[23:00:23.020]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:00:23.020]        // -> [traceSWO <= 0x00000001]
[23:00:23.021]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:00:23.021]        // -> [traceTPIU <= 0x00000000]
[23:00:23.021]    </block>
[23:00:23.021]    <control if="traceSWO" while="" timeout="0" info="">
[23:00:23.022]      // if-block "traceSWO"
[23:00:23.022]        // =>  TRUE
[23:00:23.022]      <block atomic="false" info="">
[23:00:23.023]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:00:23.023]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:00:23.023]            <block atomic="false" info="">
[23:00:23.023]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:00:23.024]                // -> [dbgmcu_val <= 0x00000000]
[23:00:23.024]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:00:23.024]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:00:23.025]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:00:23.026]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.027]                // -> [dbgmcu_val <= 0x00000007]
[23:00:23.027]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:00:23.027]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:00:23.027]              Sequence("ConfigureTraceSWOPin");
[23:00:23.028]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:00:23.028]                  <block atomic="false" info="">
[23:00:23.029]                    __var pin     = 0;
[23:00:23.029]                      // -> [pin <= 0x00000000]
[23:00:23.030]                    __var port    = 0;
[23:00:23.030]                      // -> [port <= 0x00000000]
[23:00:23.030]                    __var portAdr = 0;
[23:00:23.030]                      // -> [portAdr <= 0x00000000]
[23:00:23.031]                    __var pos     = 0;
[23:00:23.031]                      // -> [pos <= 0x00000000]
[23:00:23.032]                    __var SWO_Pin = 0x00010003;          // PB3
[23:00:23.032]                      // -> [SWO_Pin <= 0x00010003]
[23:00:23.033]                  </block>
[23:00:23.033]                  <block atomic="false" info="configure SWO">
[23:00:23.033]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:00:23.033]                      // -> [pin <= 0x00000003]
[23:00:23.034]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:00:23.034]                      // -> [port <= 0x00000001]
[23:00:23.034]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:00:23.035]                      // -> [portAdr <= 0x40020400]
[23:00:23.035]                    pos = pin * 2;
[23:00:23.035]                      // -> [pos <= 0x00000006]
[23:00:23.036]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:00:23.037]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.039]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.039]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:00:23.041]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.042]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.043]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:00:23.044]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.046]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.046]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:00:23.048]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.049]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.050]                  </block>
[23:00:23.050]                  <control if="pin <  8" while="" timeout="0" info="">
[23:00:23.050]                    // if-block "pin <  8"
[23:00:23.051]                      // =>  TRUE
[23:00:23.051]                    <block atomic="false" info="">
[23:00:23.051]                      pos = ((pin    ) & 7) * 4;
[23:00:23.052]                        // -> [pos <= 0x0000000C]
[23:00:23.052]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:00:23.053]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.054]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.055]                    </block>
[23:00:23.055]                    // end if-block "pin <  8"
[23:00:23.056]                  </control>
[23:00:23.056]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:00:23.056]                    // if-block "pin >= 8"
[23:00:23.057]                      // =>  FALSE
[23:00:23.057]                    // skip if-block "pin >= 8"
[23:00:23.057]                  </control>
[23:00:23.058]                </sequence>
[23:00:23.058]            </block>
[23:00:23.059]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:00:23.059]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:00:23.061]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.061]            </block>
[23:00:23.062]          </sequence>
[23:00:23.062]      </block>
[23:00:23.063]      // end if-block "traceSWO"
[23:00:23.063]    </control>
[23:00:23.063]    <control if="traceTPIU" while="" timeout="0" info="">
[23:00:23.064]      // if-block "traceTPIU"
[23:00:23.064]        // =>  FALSE
[23:00:23.065]      // skip if-block "traceTPIU"
[23:00:23.065]    </control>
[23:00:23.065]  </sequence>
[23:00:23.065]  
[23:00:23.681]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:00:23.681]  
[23:00:23.729]  <debugvars>
[23:00:23.730]    // Pre-defined
[23:00:23.730]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:00:23.730]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[23:00:23.730]    __dp=0x00000000
[23:00:23.730]    __ap=0x00000000
[23:00:23.730]    __traceout=0x00000001      (SWO Trace)
[23:00:23.730]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:00:23.731]    __FlashAddr=0x00000000
[23:00:23.731]    __FlashLen=0x00000000
[23:00:23.731]    __FlashArg=0x00000000
[23:00:23.731]    __FlashOp=0x00000000
[23:00:23.731]    __Result=0x00000000
[23:00:23.731]    
[23:00:23.731]    // User-defined
[23:00:23.731]    DbgMCU_CR=0x00000007
[23:00:23.732]    DbgMCU_APB1_Fz=0x00000000
[23:00:23.732]    DbgMCU_APB2_Fz=0x00000000
[23:00:23.732]    TraceClk_Pin=0x00040002
[23:00:23.732]    TraceD0_Pin=0x00040003
[23:00:23.733]    TraceD1_Pin=0x00040004
[23:00:23.733]    TraceD2_Pin=0x00040005
[23:00:23.733]    TraceD3_Pin=0x00040006
[23:00:23.733]  </debugvars>
[23:00:23.734]  
[23:00:23.734]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:00:23.734]    <block atomic="false" info="">
[23:00:23.735]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:00:23.735]        // -> [traceSWO <= 0x00000001]
[23:00:23.735]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:00:23.735]        // -> [traceTPIU <= 0x00000000]
[23:00:23.736]    </block>
[23:00:23.736]    <control if="traceSWO" while="" timeout="0" info="">
[23:00:23.736]      // if-block "traceSWO"
[23:00:23.736]        // =>  TRUE
[23:00:23.736]      <block atomic="false" info="">
[23:00:23.737]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:00:23.737]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:00:23.737]            <block atomic="false" info="">
[23:00:23.737]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:00:23.737]                // -> [dbgmcu_val <= 0x00000000]
[23:00:23.738]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:00:23.738]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:00:23.738]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:00:23.739]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.739]                // -> [dbgmcu_val <= 0x00000007]
[23:00:23.740]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:00:23.740]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:00:23.740]              Sequence("ConfigureTraceSWOPin");
[23:00:23.741]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:00:23.741]                  <block atomic="false" info="">
[23:00:23.741]                    __var pin     = 0;
[23:00:23.741]                      // -> [pin <= 0x00000000]
[23:00:23.742]                    __var port    = 0;
[23:00:23.742]                      // -> [port <= 0x00000000]
[23:00:23.742]                    __var portAdr = 0;
[23:00:23.742]                      // -> [portAdr <= 0x00000000]
[23:00:23.743]                    __var pos     = 0;
[23:00:23.743]                      // -> [pos <= 0x00000000]
[23:00:23.744]                    __var SWO_Pin = 0x00010003;          // PB3
[23:00:23.744]                      // -> [SWO_Pin <= 0x00010003]
[23:00:23.744]                  </block>
[23:00:23.744]                  <block atomic="false" info="configure SWO">
[23:00:23.744]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:00:23.745]                      // -> [pin <= 0x00000003]
[23:00:23.745]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:00:23.745]                      // -> [port <= 0x00000001]
[23:00:23.745]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:00:23.746]                      // -> [portAdr <= 0x40020400]
[23:00:23.746]                    pos = pin * 2;
[23:00:23.746]                      // -> [pos <= 0x00000006]
[23:00:23.746]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:00:23.747]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.749]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.750]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:00:23.751]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.752]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.753]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:00:23.754]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.755]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.756]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:00:23.757]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.758]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.759]                  </block>
[23:00:23.759]                  <control if="pin <  8" while="" timeout="0" info="">
[23:00:23.759]                    // if-block "pin <  8"
[23:00:23.759]                      // =>  TRUE
[23:00:23.760]                    <block atomic="false" info="">
[23:00:23.760]                      pos = ((pin    ) & 7) * 4;
[23:00:23.760]                        // -> [pos <= 0x0000000C]
[23:00:23.761]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:00:23.762]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.763]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.764]                    </block>
[23:00:23.764]                    // end if-block "pin <  8"
[23:00:23.764]                  </control>
[23:00:23.765]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:00:23.765]                    // if-block "pin >= 8"
[23:00:23.766]                      // =>  FALSE
[23:00:23.766]                    // skip if-block "pin >= 8"
[23:00:23.766]                  </control>
[23:00:23.767]                </sequence>
[23:00:23.767]            </block>
[23:00:23.767]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:00:23.768]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:00:23.769]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:23.769]            </block>
[23:00:23.770]          </sequence>
[23:00:23.770]      </block>
[23:00:23.770]      // end if-block "traceSWO"
[23:00:23.770]    </control>
[23:00:23.771]    <control if="traceTPIU" while="" timeout="0" info="">
[23:00:23.771]      // if-block "traceTPIU"
[23:00:23.771]        // =>  FALSE
[23:00:23.771]      // skip if-block "traceTPIU"
[23:00:23.772]    </control>
[23:00:23.772]  </sequence>
[23:00:23.772]  
[23:00:24.459]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:00:24.459]  
[23:00:24.507]  <debugvars>
[23:00:24.507]    // Pre-defined
[23:00:24.508]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:00:24.508]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[23:00:24.508]    __dp=0x00000000
[23:00:24.508]    __ap=0x00000000
[23:00:24.509]    __traceout=0x00000001      (SWO Trace)
[23:00:24.509]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:00:24.509]    __FlashAddr=0x00000000
[23:00:24.509]    __FlashLen=0x00000000
[23:00:24.509]    __FlashArg=0x00000000
[23:00:24.511]    __FlashOp=0x00000000
[23:00:24.511]    __Result=0x00000000
[23:00:24.511]    
[23:00:24.511]    // User-defined
[23:00:24.512]    DbgMCU_CR=0x00000007
[23:00:24.512]    DbgMCU_APB1_Fz=0x00000000
[23:00:24.512]    DbgMCU_APB2_Fz=0x00000000
[23:00:24.513]    TraceClk_Pin=0x00040002
[23:00:24.513]    TraceD0_Pin=0x00040003
[23:00:24.513]    TraceD1_Pin=0x00040004
[23:00:24.513]    TraceD2_Pin=0x00040005
[23:00:24.514]    TraceD3_Pin=0x00040006
[23:00:24.514]  </debugvars>
[23:00:24.514]  
[23:00:24.514]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:00:24.514]    <block atomic="false" info="">
[23:00:24.515]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:00:24.515]        // -> [traceSWO <= 0x00000001]
[23:00:24.516]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:00:24.516]        // -> [traceTPIU <= 0x00000000]
[23:00:24.517]    </block>
[23:00:24.517]    <control if="traceSWO" while="" timeout="0" info="">
[23:00:24.517]      // if-block "traceSWO"
[23:00:24.518]        // =>  TRUE
[23:00:24.518]      <block atomic="false" info="">
[23:00:24.519]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:00:24.519]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:00:24.519]            <block atomic="false" info="">
[23:00:24.520]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:00:24.520]                // -> [dbgmcu_val <= 0x00000000]
[23:00:24.520]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:00:24.521]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:00:24.522]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:00:24.524]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:00:24.524]                // -> [dbgmcu_val <= 0x00000007]
[23:00:24.525]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:00:24.525]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:00:24.525]              Sequence("ConfigureTraceSWOPin");
[23:00:24.526]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:00:24.527]                  <block atomic="false" info="">
[23:00:24.527]                    __var pin     = 0;
[23:00:24.527]                      // -> [pin <= 0x00000000]
[23:00:24.527]                    __var port    = 0;
[23:00:24.528]                      // -> [port <= 0x00000000]
[23:00:24.528]                    __var portAdr = 0;
[23:00:24.528]                      // -> [portAdr <= 0x00000000]
[23:00:24.528]                    __var pos     = 0;
[23:00:24.528]                      // -> [pos <= 0x00000000]
[23:00:24.529]                    __var SWO_Pin = 0x00010003;          // PB3
[23:00:24.529]                      // -> [SWO_Pin <= 0x00010003]
[23:00:24.529]                  </block>
[23:00:24.530]                  <block atomic="false" info="configure SWO">
[23:00:24.530]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:00:24.531]                      // -> [pin <= 0x00000003]
[23:00:24.531]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:00:24.531]                      // -> [port <= 0x00000001]
[23:00:24.531]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:00:24.532]                      // -> [portAdr <= 0x40020400]
[23:00:24.532]                    pos = pin * 2;
[23:00:24.532]                      // -> [pos <= 0x00000006]
[23:00:24.534]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:00:24.534]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:00:24.536]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:24.536]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:00:24.538]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:00:24.540]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:24.540]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:00:24.541]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:00:24.543]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:24.543]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:00:24.545]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:00:24.546]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:24.547]                  </block>
[23:00:24.548]                  <control if="pin <  8" while="" timeout="0" info="">
[23:00:24.548]                    // if-block "pin <  8"
[23:00:24.548]                      // =>  TRUE
[23:00:24.548]                    <block atomic="false" info="">
[23:00:24.549]                      pos = ((pin    ) & 7) * 4;
[23:00:24.550]                        // -> [pos <= 0x0000000C]
[23:00:24.550]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:00:24.551]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:00:24.553]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:24.553]                    </block>
[23:00:24.554]                    // end if-block "pin <  8"
[23:00:24.555]                  </control>
[23:00:24.555]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:00:24.555]                    // if-block "pin >= 8"
[23:00:24.555]                      // =>  FALSE
[23:00:24.556]                    // skip if-block "pin >= 8"
[23:00:24.556]                  </control>
[23:00:24.556]                </sequence>
[23:00:24.556]            </block>
[23:00:24.557]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:00:24.557]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:00:24.559]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:24.559]            </block>
[23:00:24.559]          </sequence>
[23:00:24.560]      </block>
[23:00:24.560]      // end if-block "traceSWO"
[23:00:24.561]    </control>
[23:00:24.561]    <control if="traceTPIU" while="" timeout="0" info="">
[23:00:24.561]      // if-block "traceTPIU"
[23:00:24.562]        // =>  FALSE
[23:00:24.562]      // skip if-block "traceTPIU"
[23:00:24.563]    </control>
[23:00:24.563]  </sequence>
[23:00:24.563]  
[23:00:24.989]  **********  Sequence "TraceStart"  (Context="Reset", Pname="", info="")
[23:00:24.989]  
[23:00:25.036]  <debugvars>
[23:00:25.036]    // Pre-defined
[23:00:25.037]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:00:25.037]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[23:00:25.038]    __dp=0x00000000
[23:00:25.038]    __ap=0x00000000
[23:00:25.038]    __traceout=0x00000001      (SWO Trace)
[23:00:25.038]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:00:25.039]    __FlashAddr=0x00000000
[23:00:25.039]    __FlashLen=0x00000000
[23:00:25.039]    __FlashArg=0x00000000
[23:00:25.040]    __FlashOp=0x00000000
[23:00:25.040]    __Result=0x00000000
[23:00:25.040]    
[23:00:25.040]    // User-defined
[23:00:25.041]    DbgMCU_CR=0x00000007
[23:00:25.041]    DbgMCU_APB1_Fz=0x00000000
[23:00:25.042]    DbgMCU_APB2_Fz=0x00000000
[23:00:25.042]    TraceClk_Pin=0x00040002
[23:00:25.043]    TraceD0_Pin=0x00040003
[23:00:25.043]    TraceD1_Pin=0x00040004
[23:00:25.043]    TraceD2_Pin=0x00040005
[23:00:25.044]    TraceD3_Pin=0x00040006
[23:00:25.044]  </debugvars>
[23:00:25.045]  
[23:00:25.045]  <sequence name="TraceStart" Pname="" disable="false" info="">
[23:00:25.046]    <block atomic="false" info="">
[23:00:25.047]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO (asynchronous) Trace Selected?
[23:00:25.047]        // -> [traceSWO <= 0x00000001]
[23:00:25.047]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // TPIU (synchronous) Trace Selected?
[23:00:25.048]        // -> [traceTPIU <= 0x00000000]
[23:00:25.049]    </block>
[23:00:25.049]    <control if="traceSWO" while="" timeout="0" info="">
[23:00:25.049]      // if-block "traceSWO"
[23:00:25.050]        // =>  TRUE
[23:00:25.050]      <block atomic="false" info="">
[23:00:25.050]        Sequence("EnableTraceSWO");                                           // Call SWO Trace Setup
[23:00:25.050]          <sequence name="EnableTraceSWO" Pname="" disable="false" info="">
[23:00:25.050]            <block atomic="false" info="">
[23:00:25.051]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:00:25.051]                // -> [dbgmcu_val <= 0x00000000]
[23:00:25.051]              __var dbgmcu_trace_val = 0;                                                   // DBGMCU_CR Value
[23:00:25.052]                // -> [dbgmcu_trace_val <= 0x00000000]
[23:00:25.053]              dbgmcu_val        = Read32(0xE0042004) & (~0xE0);                         // Read DBGMCU_CR and clear trace setup
[23:00:25.054]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:00:25.054]                // -> [dbgmcu_val <= 0x00000007]
[23:00:25.055]              dbgmcu_trace_val  = (1 << 5);                                           // Trace I/O Enable + Trace Mode Asynchronous
[23:00:25.055]                // -> [dbgmcu_trace_val <= 0x00000020]
[23:00:25.055]              Sequence("ConfigureTraceSWOPin");
[23:00:25.056]                <sequence name="ConfigureTraceSWOPin" Pname="" disable="false" info="">
[23:00:25.056]                  <block atomic="false" info="">
[23:00:25.057]                    __var pin     = 0;
[23:00:25.057]                      // -> [pin <= 0x00000000]
[23:00:25.057]                    __var port    = 0;
[23:00:25.058]                      // -> [port <= 0x00000000]
[23:00:25.058]                    __var portAdr = 0;
[23:00:25.059]                      // -> [portAdr <= 0x00000000]
[23:00:25.059]                    __var pos     = 0;
[23:00:25.059]                      // -> [pos <= 0x00000000]
[23:00:25.060]                    __var SWO_Pin = 0x00010003;          // PB3
[23:00:25.060]                      // -> [SWO_Pin <= 0x00010003]
[23:00:25.060]                  </block>
[23:00:25.061]                  <block atomic="false" info="configure SWO">
[23:00:25.061]                    pin     =               ((SWO_Pin            ) & 0x0000FFFF);
[23:00:25.061]                      // -> [pin <= 0x00000003]
[23:00:25.062]                    port    =               ((SWO_Pin >> 16) & 0x0000FFFF);
[23:00:25.062]                      // -> [port <= 0x00000001]
[23:00:25.063]                    portAdr = 0x40020000 + (((SWO_Pin >> 16) & 0x0000FFFF) * 0x400);
[23:00:25.063]                      // -> [portAdr <= 0x40020400]
[23:00:25.064]                    pos = pin * 2;
[23:00:25.064]                      // -> [pos <= 0x00000006]
[23:00:25.065]                    Write32(0x40023830,     ((Read32(0x40023830    )                         ) | (1 << port)) );  // RCC_AHB1ENR:   IO port clock enable
[23:00:25.066]                      // -> [Read32(0x40023830) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:00:25.067]                      // -> [Write32(0x40023830, 0x00000002)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:25.068]                    Write32(portAdr + 0x00, ((Read32(portAdr + 0x00) & ~( 3 << pos)) | (2 << pos )) );  // GPIOx_MODER:   Set Mode (Alternate Function)
[23:00:25.069]                      // -> [Read32(0x40020400) => 0x00000280]   (__dp=0x00000000, __ap=0x00000000)
[23:00:25.071]                      // -> [Write32(0x40020400, 0x00000280)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:25.071]                    Write32(portAdr + 0x08, ((Read32(portAdr + 0x08)                         ) | (3 << pos )) );  // GPIOx_OSPEEDR: Set Speed (Very High Speed)
[23:00:25.073]                      // -> [Read32(0x40020408) => 0x000000C0]   (__dp=0x00000000, __ap=0x00000000)
[23:00:25.074]                      // -> [Write32(0x40020408, 0x000000C0)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:25.075]                    Write32(portAdr + 0x0C, ((Read32(portAdr + 0x0C) & ~( 3 << pos))                    ) );  // GPIOx_PUPDR:   Set I/O to no pull-up/pull-down
[23:00:25.076]                      // -> [Read32(0x4002040C) => 0x00000100]   (__dp=0x00000000, __ap=0x00000000)
[23:00:25.078]                      // -> [Write32(0x4002040C, 0x00000100)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:25.078]                  </block>
[23:00:25.079]                  <control if="pin <  8" while="" timeout="0" info="">
[23:00:25.079]                    // if-block "pin <  8"
[23:00:25.080]                      // =>  TRUE
[23:00:25.080]                    <block atomic="false" info="">
[23:00:25.081]                      pos = ((pin    ) & 7) * 4;
[23:00:25.081]                        // -> [pos <= 0x0000000C]
[23:00:25.081]                      Write32(portAdr + 0x20, ((Read32(portAdr + 0x20) & ~(15 << pos))                    ) );  // GPIOx_AFRL:    Alternate Function to AF0
[23:00:25.083]                        // -> [Read32(0x40020420) => 0x00000000]   (__dp=0x00000000, __ap=0x00000000)
[23:00:25.085]                        // -> [Write32(0x40020420, 0x00000000)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:25.085]                    </block>
[23:00:25.086]                    // end if-block "pin <  8"
[23:00:25.086]                  </control>
[23:00:25.086]                  <control if="pin >= 8" while="" timeout="0" info="">
[23:00:25.087]                    // if-block "pin >= 8"
[23:00:25.087]                      // =>  FALSE
[23:00:25.087]                    // skip if-block "pin >= 8"
[23:00:25.088]                  </control>
[23:00:25.088]                </sequence>
[23:00:25.089]            </block>
[23:00:25.089]            <block atomic="false" info="configure Trace I/O Enable + Trace Mode Asynchronous">
[23:00:25.089]              Write32(0xE0042004, dbgmcu_val | dbgmcu_trace_val);                           // Write DBGMCU_CR: Trace Settings
[23:00:25.091]                // -> [Write32(0xE0042004, 0x00000027)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:25.091]            </block>
[23:00:25.092]          </sequence>
[23:00:25.092]      </block>
[23:00:25.092]      // end if-block "traceSWO"
[23:00:25.093]    </control>
[23:00:25.093]    <control if="traceTPIU" while="" timeout="0" info="">
[23:00:25.094]      // if-block "traceTPIU"
[23:00:25.094]        // =>  FALSE
[23:00:25.095]      // skip if-block "traceTPIU"
[23:00:25.095]    </control>
[23:00:25.095]  </sequence>
[23:00:25.095]  
[23:00:41.542]  **********  Sequence "TraceStop"  (Context="Disconnect", Pname="", info="")
[23:00:41.542]  
[23:00:41.589]  <debugvars>
[23:00:41.589]    // Pre-defined
[23:00:41.590]    __protocol=0x00010002      (Protocol="SWD", SWJ-DP="True")
[23:00:41.590]    __connection=0x00000201    (Connection Type="Debug", Reset Type="System Reset")
[23:00:41.591]    __dp=0x00000000
[23:00:41.592]    __ap=0x00000000
[23:00:41.592]    __traceout=0x00000001      (SWO Trace)
[23:00:41.592]    __errorcontrol=0x00000000  (Skip Errors="False")
[23:00:41.592]    __FlashAddr=0x00000000
[23:00:41.593]    __FlashLen=0x00000000
[23:00:41.593]    __FlashArg=0x00000000
[23:00:41.593]    __FlashOp=0x00000000
[23:00:41.593]    __Result=0x00000000
[23:00:41.594]    
[23:00:41.594]    // User-defined
[23:00:41.594]    DbgMCU_CR=0x00000007
[23:00:41.595]    DbgMCU_APB1_Fz=0x00000000
[23:00:41.595]    DbgMCU_APB2_Fz=0x00000000
[23:00:41.596]    TraceClk_Pin=0x00040002
[23:00:41.596]    TraceD0_Pin=0x00040003
[23:00:41.596]    TraceD1_Pin=0x00040004
[23:00:41.596]    TraceD2_Pin=0x00040005
[23:00:41.596]    TraceD3_Pin=0x00040006
[23:00:41.596]  </debugvars>
[23:00:41.597]  
[23:00:41.598]  <sequence name="TraceStop" Pname="" disable="false" info="">
[23:00:41.598]    <block atomic="false" info="">
[23:00:41.599]      __var traceSWO    = (__traceout & 0x1) != 0;                        // SWO enabled?
[23:00:41.599]        // -> [traceSWO <= 0x00000001]
[23:00:41.599]      __var traceTPIU   = (__traceout & 0x2) != 0;                        // Synchronous trace port enabled?
[23:00:41.600]        // -> [traceTPIU <= 0x00000000]
[23:00:41.600]    </block>
[23:00:41.600]    <control if="traceSWO" while="" timeout="0" info="">
[23:00:41.600]      // if-block "traceSWO"
[23:00:41.601]        // =>  TRUE
[23:00:41.601]      <block atomic="false" info="">
[23:00:41.601]        Sequence("DisableTraceSWO");
[23:00:41.602]          <sequence name="DisableTraceSWO" Pname="" disable="false" info="">
[23:00:41.602]            <block atomic="false" info="">
[23:00:41.603]              __var dbgmcu_val       = 0;                                                   // DBGMCU_CR Value
[23:00:41.603]                // -> [dbgmcu_val <= 0x00000000]
[23:00:41.604]            </block>
[23:00:41.604]            <block atomic="false" info="unconfigure Trace I/O Enable + Trace Mode Asynchronous">
[23:00:41.604]              dbgmcu_val = Read32(0xE0042004) & (~0xE0);                                // Read DBGMCU_CR and clear trace setup
[23:00:41.606]                // -> [Read32(0xE0042004) => 0x00000027]   (__dp=0x00000000, __ap=0x00000000)
[23:00:41.606]                // -> [dbgmcu_val <= 0x00000007]
[23:00:41.607]              Write32(0xE0042004, dbgmcu_val);                                              // Write DBGMCU_CR: Trace Settings
[23:00:41.608]                // -> [Write32(0xE0042004, 0x00000007)]   (__dp=0x00000000, __ap=0x00000000)
[23:00:41.609]            </block>
[23:00:41.609]          </sequence>
[23:00:41.610]      </block>
[23:00:41.610]      // end if-block "traceSWO"
[23:00:41.611]    </control>
[23:00:41.612]    <control if="traceTPIU" while="" timeout="0" info="">
[23:00:41.612]      // if-block "traceTPIU"
[23:00:41.612]        // =>  FALSE
[23:00:41.612]      // skip if-block "traceTPIU"
[23:00:41.613]    </control>
[23:00:41.613]  </sequence>
[23:00:41.613]  
